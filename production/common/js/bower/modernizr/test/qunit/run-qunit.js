function waitFor(testFx,onReady,timeOutMillis){var maxtimeOutMillis=timeOutMillis?timeOutMillis:3001,start=(new Date).getTime(),condition=!1,interval=setInterval(function(){(new Date).getTime()-start<maxtimeOutMillis&&!condition?condition="string"==typeof testFx?eval(testFx):testFx():condition?("string"==typeof onReady?eval(onReady):onReady(),clearInterval(interval)):(console.log("'waitFor()' timeout"),phantom.exit(1))},100)}(0===phantom.args.length||phantom.args.length>2)&&(console.log("Usage: run-qunit.js URL"),phantom.exit());var page=new WebPage;page.onConsoleMessage=function(t){console.log(t)},page.open(phantom.args[0],function(t){"success"!==t?(console.log("Unable to access network"),phantom.exit()):waitFor(function(){return page.evaluate(function(){var t=document.getElementById("qunit-testresult");return t&&t.innerText.match("completed")?!0:!1})},function(){var t=page.evaluate(function(){var t=document.getElementById("qunit-testresult");try{return t.getElementsByClassName("failed")[0].innerHTML}catch(e){}return 1e4});phantom.exit(parseInt(t,10)>0?1:0)})});