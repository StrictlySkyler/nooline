/*!
 * socket.io-node
 * Copyright(c) 2011 LearnBoost <dev@learnboost.com>
 * MIT Licensed
 */

!function(n){return"object"==typeof global?n.exports={"":function(){}}:(n.exports={"test connecting the socket and disconnecting":function(n){var e=create();e.on("error",function(n){throw Error(n||"Received an error")}),e.on("connect",function(){e.disconnect(),n()})},"test receiving messages":function(n){var e=create(),o=!1,r=0;e.on("error",function(n){throw Error(n||"Received an error")}),e.on("connect",function(){o=!0}),e.on("message",function(n){(++r+"").should().equal(n)}),e.on("disconnect",function(e){o.should().be_true,r.should().equal(3),e.should().eql("booted"),n()})},"test sending messages":function(n){var e=create();e.on("error",function(n){throw Error(n||"Received an error")}),e.on("connect",function(){e.send("echo"),e.on("message",function(o){o.should().equal("echo"),e.disconnect(),n()})})},"test manual buffer flushing":function(n){var e=create();e.socket.options.manualFlush=!0,e.on("error",function(n){throw Error(n||"Received an error")}),e.on("connect",function(){e.socket.connected=!1,e.send("buffered"),e.socket.onConnect(),e.socket.flushBuffer(),e.on("message",function(o){o.should().equal("buffered"),e.disconnect(),n()})})},"test automatic buffer flushing":function(n){var e=create();e.on("error",function(n){throw Error(n||"Received an error")}),e.on("connect",function(){e.socket.connected=!1,e.send("buffered"),e.socket.onConnect(),e.on("message",function(o){o.should().equal("buffered"),e.disconnect(),n()})})},"test acks sent from client":function(n){var e=create();e.on("error",function(n){throw Error(n||"Received an error")}),e.on("connect",function(){e.on("message",function(o){"tobi 2"==o&&(e.disconnect(),n())})})},"test acks sent from server":function(n){var e=create();e.on("error",function(n){throw Error(n||"Received an error")}),e.on("connect",function(){e.send("ooo",function(){e.disconnect(),n()})})},"test connecting to namespaces":function(n){function e(){r.of("").disconnect(),c.should().equal(3),n()}var o=create(),r=o.socket,t=2,c=0;r.on("connect",function(){c++}),r.of("/woot").on("connect",function(){c++}).on("message",function(n){n.should().equal("connected to woot"),--t||e()}).on("error",function(n){throw Error(n||"Received an error")}),r.of("/chat").on("connect",function(){c++}).on("message",function(n){n.should().equal("connected to chat"),--t||e()}).on("error",function(n){throw Error(n||"Received an error")})},"test disconnecting from namespaces":function(n){function e(){o.of("").disconnect(),n()}var o=create().socket,r=2;o.of("/a").on("error",function(n){throw Error(n||"Received an error")}),o.of("/a").on("connect",function(){o.of("/a").disconnect()}),o.of("/a").on("disconnect",function(){--r||e()}),o.of("/b").on("error",function(n){throw Error(n||"Received an error")}),o.of("/b").on("connect",function(){o.of("/b").disconnect()}),o.of("/b").on("disconnect",function(){--r||e()})},"test authorizing for namespaces":function(n){var e=create().socket;e.of("/a").on("connect_failed",function(){n()}).on("error",function(n){throw Error(n||"Received an error")})},"test sending json from server":function(n){var e=create();e.on("error",function(n){throw Error(n||"Received an error")}),e.on("message",function(o){o.should().eql(3141592),e.disconnect(),n()})},"test sending json from client":function(n){var e=create();e.on("error",function(n){throw Error(n||"Received an error")}),e.json.send([1,2,3]),e.on("message",function(o){o.should().equal("echo"),e.disconnect(),n()})},"test emitting an event from server":function(n){var e=create();e.on("error",function(n){throw Error(n||"Received an error")}),e.on("woot",function(){e.disconnect(),n()})},"test emitting an event to server":function(n){var e=create();e.on("error",function(n){throw Error(n||"Received an error")}),e.emit("woot"),e.on("echo",function(){e.disconnect(),n()})},"test emitting multiple events at once to the server":function(n){var e=create();e.on("connect",function(){e.emit("print","foo"),e.emit("print","bar")}),e.on("done",function(){e.disconnect(),n()})},"test emitting an event from server and sending back data":function(n){var e=create();e.on("error",function(n){throw Error(n||"Received an error")}),e.on("woot",function(o,r){o.should().eql(1),r("test"),e.on("done",function(){e.disconnect(),n()})})},"test emitting an event to server and sending back data":function(n){var e=create();e.on("error",function(n){throw Error(n||"Received an error")}),e.emit("tobi",1,2,function(o){o.should().eql({hello:"world"}),e.disconnect(),n()})},"test encoding a payload":function(n){var e=create("/woot");e.on("error",function(n){throw Error(n||"Received an error")}),e.on("connect",function(){e.socket.setBuffer(!0),e.send("ñ"),e.send("ñ"),e.send("ñ"),e.send("ñ"),e.socket.setBuffer(!1)}),e.on("done",function(){e.disconnect(),n()})},"test sending query strings to the server":function(n){var e=create("?foo=bar");e.on("error",function(n){throw Error(n||"Received an error")}),e.on("message",function(o){o.query.foo.should().eql("bar"),e.disconnect(),n()})},"test sending newline":function(n){var e=create();e.on("error",function(n){throw Error(n||"Received an error")}),e.send("\n"),e.on("done",function(){e.disconnect(),n()})},"test sending unicode":function(n){var e=create();e.on("error",function(n){throw Error(n||"Received an error")}),e.json.send({test:"☃"}),e.on("done",function(){e.disconnect(),n()})},"test webworker connection":function(n){if(!window.Worker)return n();var e=new Worker("/test/worker.js");e.postMessage(uri()),e.onmessage=function(e){if("done!"==e.data)return n();throw Error("Unexpected message: "+e.data)}}},void 0)}("undefined"==typeof module?module={}:module,"undefined"==typeof io?null:io,"undefined"==typeof should?null:should);