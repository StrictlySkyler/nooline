function Socket(t){if(!(this instanceof Socket))return new Socket(t);if("string"==typeof t){var e=util.parseUri(t);t=arguments[1]||{},t.host=e.host,t.secure="https"==e.protocol||"wss"==e.protocol,t.port=e.port}t=t||{},this.secure=null!=t.secure?t.secure:global.location&&"https:"==location.protocol,this.host=t.host||t.hostname||(global.location?location.hostname:"localhost"),this.port=t.port||(global.location&&location.port?location.port:this.secure?443:80),this.query=t.query||{},this.query.uid=rnd(),this.upgrade=!1!==t.upgrade,this.resource=t.resource||"default",this.path=(t.path||"/engine.io").replace(/\/$/,""),this.path+="/"+this.resource+"/",this.forceJSONP=!!t.forceJSONP,this.timestampParam=t.timestampParam||"t",this.timestampRequests=!!t.timestampRequests,this.flashPath=t.flashPath||"",this.transports=t.transports||["polling","websocket","flashsocket"],this.readyState="",this.writeBuffer=[],this.policyPort=t.policyPort||843,this.open(),Socket.sockets.push(this),Socket.sockets.evs.emit("add",this)}function clone(t){var e,o={};for(e in t)t.hasOwnProperty(e)&&(o[e]=t[e]);return o}function rnd(){return(Math.random()+"").substr(5)+(Math.random()+"").substr(5)}var global,util=null,transports=null,Emitter=null,debug=null;module.exports=Socket,global="undefined"!=typeof window?window:global,Emitter(Socket.prototype),Socket.protocol=1,Socket.sockets=[],Socket.sockets.evs=new Emitter,Socket.Socket=Socket,Socket.Transport=null,Socket.Emitter=null,Socket.transports=null,Socket.util=null,Socket.parser=null,Socket.prototype.createTransport=function(t){var e,o;return debug('creating transport "%s"',t),e=clone(this.query),e.transport=t,this.id&&(e.sid=this.id),o=new transports[t]({host:this.host,port:this.port,secure:this.secure,path:this.path,query:e,forceJSONP:this.forceJSONP,timestampRequests:this.timestampRequests,timestampParam:this.timestampParam,flashPath:this.flashPath,policyPort:this.policyPort})},Socket.prototype.open=function(){this.readyState="opening";var t=this.createTransport(this.transports[0]);t.open(),this.setTransport(t)},Socket.prototype.setTransport=function(t){var e=this;this.transport&&(debug("clearing existing transport"),this.transport.removeAllListeners()),this.transport=t,t.on("drain",function(){e.flush()}).on("packet",function(t){e.onPacket(t)}).on("error",function(t){e.onError(t)}).on("close",function(){e.onClose("transport close")})},Socket.prototype.probe=function(t){function e(e){if(!r){r=!0;var i=Error("probe error: "+e);i.transport=o.name,o.close(),o=null,debug('probe transport "%s" failed because of error: %s',t,e),s.emit("error",i)}}debug('probing transport "%s"',t);var o=this.createTransport(t,{probe:1}),r=!1,s=this;o.once("open",function(){r||(debug('probe transport "%s" opened',t),o.send([{type:"ping",data:"probe"}]),o.once("packet",function(i){if(!r)if("pong"==i.type&&"probe"==i.data)debug('probe transport "%s" pong',t),s.upgrading=!0,s.emit("upgrading",o),debug('pausing current transport "%s"',s.transport.name),s.transport.pause(function(){r||"closed"!=s.readyState&&"closing"!=s.readyState&&(debug("changing transport and sending upgrade packet"),o.removeListener("error",e),s.emit("upgrade",o),s.setTransport(o),o.send([{type:"upgrade"}]),o=null,s.upgrading=!1,s.flush())});else{debug('probe transport "%s" failed',t);var n=Error("probe error");n.transport=o.name,s.emit("error",n)}}))}),o.once("error",e),o.open(),this.once("close",function(){o&&(debug("socket closed prematurely - aborting probe"),r=!0,o.close(),o=null)}),this.once("upgrading",function(t){o&&t.name!=o.name&&(debug('"%s" works - aborting "%s"',t.name,o.name),o.close(),o=null)})},Socket.prototype.onOpen=function(){if(debug("socket open"),this.readyState="open",this.emit("open"),this.onopen&&this.onopen.call(this),this.flush(),"open"==this.readyState&&this.upgrade&&this.transport.pause){debug("starting upgrade probes");for(var t=0,e=this.upgrades.length;e>t;t++)this.probe(this.upgrades[t])}},Socket.prototype.onPacket=function(t){var e,o;if("opening"==this.readyState||"open"==this.readyState)switch(debug('socket receive: type "%s", data "%s"',t.type,t.data),this.emit("packet",t),this.emit("heartbeat"),t.type){case"open":this.onHandshake(util.parseJSON(t.data));break;case"pong":this.ping();break;case"error":e=Error("server error"),e.code=t.data,this.emit("error",e);break;case"message":this.emit("message",t.data),o={data:t.data},o.toString=function(){return t.data},this.onmessage&&this.onmessage.call(this,o)}else debug('packet received with socket readyState "%s"',this.readyState)},Socket.prototype.onHandshake=function(t){this.emit("handshake",t),this.id=t.sid,this.transport.query.sid=t.sid,this.upgrades=t.upgrades,this.pingInterval=t.pingInterval,this.pingTimeout=t.pingTimeout,this.onOpen(),this.ping(),this.removeListener("heartbeat",this.onHeartbeat),this.on("heartbeat",this.onHeartbeat)},Socket.prototype.onHeartbeat=function(t){clearTimeout(this.pingTimeoutTimer);var e=this;e.pingTimeoutTimer=setTimeout(function(){"closed"!=e.readyState&&e.onClose("ping timeout")},t||e.pingInterval+e.pingTimeout)},Socket.prototype.ping=function(){var t=this;clearTimeout(t.pingIntervalTimer),t.pingIntervalTimer=setTimeout(function(){debug("writing ping packet - expecting pong within %sms",t.pingTimeout),t.sendPacket("ping"),t.onHeartbeat(t.pingTimeout)},t.pingInterval)},Socket.prototype.flush=function(){"closed"!=this.readyState&&this.transport.writable&&!this.upgrading&&this.writeBuffer.length&&(debug("flushing %d packets in socket",this.writeBuffer.length),this.transport.send(this.writeBuffer),this.writeBuffer=[])},Socket.prototype.write=Socket.prototype.send=function(t){return this.sendPacket("message",t),this},Socket.prototype.sendPacket=function(t,e){var o={type:t,data:e};this.emit("packetCreate",o),this.writeBuffer.push(o),this.flush()},Socket.prototype.close=function(){return("opening"==this.readyState||"open"==this.readyState)&&(this.onClose("forced close"),debug("socket closing - telling transport to close"),this.transport.close(),this.transport.removeAllListeners()),this},Socket.prototype.onError=function(t){this.emit("error",t),this.onClose("transport error",t)},Socket.prototype.onClose=function(t,e){"closed"!=this.readyState&&(debug('socket close with reason: "%s"',t),clearTimeout(this.pingIntervalTimer),clearTimeout(this.pingTimeoutTimer),this.readyState="closed",this.emit("close",t,e),this.onclose&&this.onclose.call(this),this.id=null)};