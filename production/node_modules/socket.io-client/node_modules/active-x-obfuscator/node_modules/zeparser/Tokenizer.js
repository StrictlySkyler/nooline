/*!
 * Tokenizer for JavaScript / ECMAScript 5
 * (c) Peter van der Zee, qfox.nl
 */

//if (this.regexAsciiIdentifier.test(c)) ++pos;

/*this.regexIdentifierStop.test(c)*/

function Tokenizer(e){this.inp=e||"",this.shadowInp=(e||"").replace(Tokenizer.regexNormalizeNewlines,"\n"),this.pos=0,this.line=0,this.column=0,this.cache={},this.errorStack=[],this.wtree=[],this.btree=[],this.regexLineTerminator=Tokenizer.regexLineTerminator,this.regexAsciiIdentifier=Tokenizer.regexAsciiIdentifier,this.hashAsciiIdentifier=Tokenizer.hashAsciiIdentifier,this.hashHex=Tokenizer.hashHex,this.regexUnicodeEscape=Tokenizer.regexUnicodeEscape,this.regexIdentifierStop=Tokenizer.regexIdentifierStop,this.hashIdentifierStop=Tokenizer.hashIdentifierStop,this.regexNumber=Tokenizer.regexNumber,this.regexNewline=Tokenizer.regexNewline,this.regexBig=Tokenizer.regexBig,this.regexBigAlt=Tokenizer.regexBigAlt,this.tokenCount=0,this.tokenCountNoWhite=0,this.Unicode=window.Unicode,this.errorEscape=null}if("undefined"!=typeof exports){var window={Unicode:null.Unicode};exports.Tokenizer=Tokenizer}Tokenizer.prototype={inp:null,shadowInp:null,pos:null,line:null,column:null,cache:null,errorStack:null,wtree:null,btree:null,regexLineTerminator:null,regexAsciiIdentifier:null,hashAsciiIdentifier:null,hashHex:null,regexUnicodeEscape:null,regexIdentifierStop:null,hashIdentifierStop:null,regexNumber:null,regexNewline:null,regexBig:null,regexBigAlt:null,tokenCount:null,tokenCountNoWhite:null,Unicode:null,storeCurrentAndFetchNextToken:function(e,r,t,i){var n,s,o,a,l,u,h,g,p,c,m,k,d,f,x,b,T,E,w,z,S,N,v,U,C,A=!e,I=this.pos,F=this.inp,O=this.shadowInp,B=!1;do{if(!i&&(++this.tokenCount,t.push(r),this.errorEscape))return r=this.errorEscape,this.errorEscape=null,r;if(i=!1,I>=F.length){r={start:F.length,stop:F.length,name:12};break}if(r=null,n=I,s=F[I],o=F.substring(I,I+4),a=this.regexBig.exec(o),a[1])++I,r={start:n,stop:I,name:9,line:this.line,col:this.column,isWhite:!0},++this.column;else if(a[2])l=I+1,"\r"==s&&"\n"==F[I+1]&&++l,r={start:I,stop:l,name:10,line:this.line,col:this.column,isWhite:!0},I=l,B=!0,++this.line,this.column=0,r.hasNewline=1;else if(a[3])I=O.indexOf("\n",I),-1==I&&(I=F.length),r={start:n,stop:I,name:7,line:this.line,col:this.column,isComment:!0,isWhite:!0},this.column=r.stop;else if(a[4])if(u=F.indexOf("*/",I),-1==u)u=O.indexOf("\n",I),0>u?I+=2:I=u,r={start:n,stop:I,name:14,value:F.substring(n,I),line:this.line,col:this.column,isComment:!0,isWhite:!0,tokenError:!0,error:Tokenizer.Error.UnterminatedMultiLineComment},this.errorStack.push(r);else{for(I=u+2,r={start:n,stop:I,name:8,value:F.substring(n,I),line:this.line,col:this.column,isComment:!0,isWhite:!0},h=O.substring(n,I),g=0,p=0;g<(g=h.indexOf("\n",g+1));)++p;p?(B=!0,r.hasNewline=p,this.line+=p,this.column=0):this.column=r.stop}else if(a[5]){p=0;do{for(;I<F.length&&"\\"==F[++I];)"\n"==O[I+1]&&++p,++I;if(this.regexLineTerminator.test(F[I])){r={start:n,stop:I,name:14,value:F.substring(n,I),isString:!0,tokenError:!0,error:Tokenizer.Error.UnterminatedDoubleStringNewline},this.errorStack.push(r);break}}while(I<F.length&&"'"!=F[I]);r||("'"!=F[I]?(r={start:n,stop:I,name:14,value:F.substring(n,I),isString:!0,tokenError:!0,error:Tokenizer.Error.UnterminatedDoubleStringOther},this.errorStack.push(r)):(++I,r={start:n,stop:I,name:5,isPrimitive:!0,isString:!0},p?(r.hasNewline=p,this.line+=p,this.column=0):this.column+=I-n))}else if(a[6]){p=0;do{for(;I<F.length&&"\\"==F[++I];)"\n"==O[I+1]&&++p,++I;if(this.regexLineTerminator.test(F[I])){r={start:n,stop:I,name:14,value:F.substring(n,I),isString:!0,tokenError:!0,error:Tokenizer.Error.UnterminatedSingleStringNewline},this.errorStack.push(r);break}}while(I<F.length&&'"'!=F[I]);r||('"'!=F[I]?(r={start:n,stop:I,name:14,value:F.substring(n,I),isString:!0,tokenError:!0,error:Tokenizer.Error.UnterminatedSingleStringOther},this.errorStack.push(r)):(++I,r={start:n,stop:I,name:6,isPrimitive:!0,isString:!0},p?(r.hasNewline=p,this.line+=p,this.column=0):this.column+=I-n))}else if(a[7]){if(c=F.substring(I,I+30),m=c.match(this.regexNumber),m[2])k=m[2],d="0"==k[0]&&k[1]&&"e"!=k[1]&&"E"!=k[1]&&"."!=k[1],d?(r={start:n,stop:I,name:14,isNumber:!0,isOctal:!0,tokenError:!0,error:Tokenizer.Error.IllegalOctalEscape,value:k},this.errorStack.push(r)):r={start:n,stop:n+k.length,name:4,isPrimitive:!0,isNumber:!0,value:k};else{if(!m[1])throw"unexpected parser errror... regex fail :(";k=m[1],r={start:n,stop:n+k.length,name:3,isPrimitive:!0,isNumber:!0,value:k}}k.length<300?I+=k.length:(f=this.oldNumberParser(I,s,F,r,n,Tokenizer),I=f[0],r=f[1])}else if(A&&a[8]){for(x=[],b=!1,T=[],E=null;++I<F.length;){if(s=O[I],"\n"==s){r={start:n,stop:I,name:14,tokenError:!0,errorHasContent:!0,error:Tokenizer.Error.UnterminatedRegularExpressionNewline},this.errorStack.push(r);break}if("/"==s){b=!0;break}if("?"==s||"*"==s||"+"==s)E=Tokenizer.Error.NothingToRepeat;else if("^"==s)"/"!=F[I-1]&&"|"!=F[I-1]&&"("!=F[I-1]&&("("!=F[I-3]||"?"!=F[I-2]||":"!=F[I-1]&&"!"!=F[I-1]&&"="!=F[I-1])&&(E=Tokenizer.Error.StartOfMatchShouldBeAtStart);else if("$"==s)"/"!=F[I+1]&&"|"!=F[I+1]&&")"!=F[I+1]&&(E=Tokenizer.Error.DollarShouldBeEnd);else if("}"==s)E=Tokenizer.Error.MissingOpeningCurly;else{if("("==s?T.push(I-n):")"==s&&(0==T.length?E={start:n,stop:I,name:14,tokenError:!0,error:Tokenizer.Error.RegexNoOpenGroups}:(w=T.pop(),z=I-n,x[w]=z,x[z]=w)),"["==s){for(S=I-n;++I<F.length&&"\n"!=O[I]&&"]"!=F[I];)if("\\"==F[I]){if("\n"==O[I+1])break;++I}if("]"!=F[I]){r={start:n,stop:I,name:14,tokenError:!0,error:Tokenizer.Error.ClosingClassRangeNotFound},this.errorStack.push(r);break}N=I-n,x[S]=N,x[N]=S}else"\\"==s&&"\n"!=O[I+1]&&++I;if("("==s)"?"!=F[I+1]||":"!=F[I+2]&&"="!=F[I+2]&&"!"!=F[I+2]||(I+=2);else if("?"==F[I+1])++I;else if("*"==F[I+1]||"+"==F[I+1])++I,"?"==F[I+1]&&++I;else if("{"==F[I+1]){for(I+=1,S=I-n,/[0-9]/.test(F[I+1])||(E=Tokenizer.Error.QuantifierRequiresNumber);++I<F.length&&/[0-9]/.test(F[I+1]););if(","==F[I+1])for(++I;I<F.length&&/[0-9]/.test(F[I+1]);)++I;"}"!=F[I+1]?E=Tokenizer.Error.QuantifierRequiresClosingCurly:(++I,N=I-n,x[S]=N,x[N]=S,"?"==F[I+1]&&++I)}}}if(!b||r)r||(r={start:n,stop:I,name:14,tokenError:!0,error:Tokenizer.Error.UnterminatedRegularExpressionOther},this.errorStack.push(r));else{do++I;while(I<F.length&&this.hashAsciiIdentifier[F[I]]);T.length?(T.length>0&&(r={start:n,stop:I,name:14,tokenError:!0,error:Tokenizer.Error.RegexOpenGroup}),this.errorStack.push(r)):E?(r={start:n,stop:I,name:14,errorHasContent:!0,tokenError:!0,error:E},this.errorStack.push(r)):r={start:n,stop:I,name:1,isPrimitive:!0}}r.twinfo=x}else if(v=a[8]||a[9])r={start:I,stop:I+=v.length,name:11,value:v};else{for(b=!1;I<F.length;){if(U=F[I],this.hashAsciiIdentifier[U])++I;else if("\\"==U&&this.regexUnicodeEscape.test(F.substring(I,I+6)))I+=6;else{if(!this.Unicode)break;if(this.hashIdentifierStop[U])break;if(C=this.Unicode,!(C.Lu.test(U)||C.Ll.test(U)||C.Lt.test(U)||C.Lm.test(U)||C.Lo.test(U)||C.Nl.test(U)||C.Mn.test(U)||C.Mc.test(U)||C.Nd.test(U)||C.Pc.test(U)||C.sp.test(U)))break;++I}b=!0}b?(r={start:n,stop:I,name:2,value:F.substring(n,I)},("undefined"==r.value||"null"==r.value||"true"==r.value||"false"==r.value)&&(r.isPrimitive=!0)):("`"==F[I]?(r={start:n,stop:I+1,name:14,tokenError:!0,error:Tokenizer.Error.BacktickNotSupported},this.errorStack.push(r)):"\\"==F[I]?"u"==F[I+1]?(r={start:n,stop:I+1,name:14,tokenError:!0,error:Tokenizer.Error.InvalidUnicodeEscape},this.errorStack.push(r)):(r={start:n,stop:I+1,name:14,tokenError:!0,error:Tokenizer.Error.InvalidBackslash},this.errorStack.push(r)):(r={start:n,stop:I+1,name:14,tokenError:!0,error:Tokenizer.Error.Unknown,value:U},this.errorStack.push(r)),++I)}r&&(r.tokposw=this.wtree.length,this.wtree.push(r),r.isWhite||(r.tokposb=this.btree.length,this.btree.push(r)))}while(t&&r&&r.isWhite);return++this.tokenCountNoWhite,this.pos=I,B&&(r.newline=!0),r},addTokenToStreamBefore:function(e,r){var t=this.wtree,i=this.btree;12==r.name?(e.tokposw=t.length,t.push(e),e.tokposb=i.length,i.push(e)):(e.tokposw=r.tokposw,t[e.tokposw]=e,r.tokposw+=1,t[r.tokposw]=r,r.tokposb&&(e.tokposb=r.tokposb,i[e.tokposb]=e,r.tokposb+=1,i[r.tokposb]=r))},oldNumberParser:function(e,r,t,i,n,s){var o,a;if(++e,"0"!=r||"x"!=t[e]&&"X"!=t[e]){if(o="0"==r&&t[e]>="0"&&t[e]<="9","."!=r){for(;e<t.length&&t[e]>="0"&&t[e]<="9";)++e;"."==t[e]&&++e}for(;e<t.length&&t[e]>="0"&&t[e]<="9";)++e;if("e"==t[e]||"E"==t[e]){for(("+"==t[++e]||"-"==t[e])&&++e,a=e;e<t.length&&t[e]>="0"&&t[e]<="9";)++e;a==e&&(i={start:n,stop:e,name:14,tokenError:!0,error:s.Error.NumberExponentRequiresDigits},this.errorStack.push(i))}14!=i.name&&(o?(i={start:n,stop:e,name:14,isNumber:!0,isOctal:!0,tokenError:!0,error:s.Error.IllegalOctalEscape},this.errorStack.push(i),console.log("foo")):i={start:n,stop:e,name:4,isPrimitive:!0,isNumber:!0})}else{for(;++e<t.length&&this.hashHex[t[e]];);i={start:n,stop:e,name:3,isPrimitive:!0,isNumber:!0}}return[e,i]},tokens:function(e){var r,t,i;for(e=e||[],r=0,i=[];(t=this.storeCurrentAndFetchNextToken(!e[r++],!1,!1,!0))&&12!=t.name;)i.push(t);return i},fixValues:function(){this.wtree.forEach(function(e){e.value||(e.value=this.inp.substring(e.start,e.stop))},this)}},Tokenizer.escape=function(e){return e.replace(/\n/g,"\\n").replace(/\t/g,"\\t").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\uFFFF/g,"\\uFFFF").replace(/\s/g,function(e){var r=e.charCodeAt(0).toString(16);switch(r.length){case 1:r="000"+r;break;case 2:r="00"+r;break;case 3:r="0"+r}return"\\u"+r})},Tokenizer.testSuite=function(e){var r,t,i,n,s,o,a,l,u,h,g,p=document.createElement("pre");for(document.body.appendChild(p),r=function(){var e=document.createElement("div");return e.innerHTML=Array.prototype.slice.call(arguments).join(" "),p.appendChild(e),arguments[0]},r("Running test suite...",e.length,"tests"),r(" "),t=+new Date,i=0,n=0,s=0;s<e.length;++s)a=e[s],l=a[1],u=a[2],h=a[4]?a[3]:null,g=a[4]||a[3],o=new Tokenizer(l).tokens(h),o.length==u?(r('<span class="green">Test '+s+" ok:</span>",g),++i):(r('<b class="red">Test failed:</span>',g,"(found",o.length,"expected",u+")"),console.log(g,o),++n),r("<b>"+Tokenizer.escape(l)+"</b>"),r("<br/>");r("Tokenizer test suite finished ("+(+new Date-t)+" ms). ok:"+i+", fail:"+n)},Tokenizer.regexWhiteSpace=/[ \t\u000B\u000C\u00A0\uFFFF]/,Tokenizer.regexLineTerminator=/[\u000A\u000D\u2028\u2029]/,Tokenizer.regexAsciiIdentifier=/[a-zA-Z0-9\$_]/,Tokenizer.hashAsciiIdentifier={_:1,$:1,a:1,b:1,c:1,d:1,e:1,f:1,g:1,h:1,i:1,j:1,k:1,l:1,m:1,n:1,o:1,p:1,q:1,r:1,s:1,t:1,u:1,v:1,w:1,x:1,y:1,z:1,A:1,B:1,C:1,D:1,E:1,F:1,G:1,H:1,I:1,J:1,K:1,L:1,M:1,N:1,O:1,P:1,Q:1,R:1,S:1,T:1,U:1,V:1,W:1,X:1,Y:1,Z:1,0:1,1:1,2:1,3:1,4:1,5:1,6:1,7:1,8:1,9:1},Tokenizer.regexHex=/[0-9A-Fa-f]/,Tokenizer.hashHex={0:1,1:1,2:1,3:1,4:1,5:1,6:1,7:1,8:1,9:1,a:1,b:1,c:1,d:1,e:1,f:1,A:1,B:1,C:1,D:1,E:1,F:1},Tokenizer.regexUnicodeEscape=/u[0-9A-Fa-f]{4}/,Tokenizer.regexIdentifierStop=/[\>\=\!\|\<\+\-\&\*\%\^\/\{\}\(\)\[\]\.\;\,\~\?\:\ \t\n\\\'\"]/,Tokenizer.hashIdentifierStop={">":1,"=":1,"!":1,"|":1,"<":1,"+":1,"-":1,"&":1,"*":1,"%":1,"^":1,"/":1,"{":1,"}":1,"(":1,")":1,"[":1,"]":1,".":1,";":1,",":1,"~":1,"?":1,":":1,"\\":1,"'":1,'"':1," ":1,"	":1,"\n":1},Tokenizer.regexNewline=/\n/g,Tokenizer.Unidocde=window.Unicode,Tokenizer.regexNumber=/^(?:(0[xX][0-9A-Fa-f]+)|((?:(?:(?:(?:[0-9]+)(?:\.[0-9]*)?))|(?:\.[0-9]+))(?:[eE][-+]?[0-9]{1,})?))/,Tokenizer.regexNormalizeNewlines=/(\u000D[^\u000A])|[\u2028\u2029]/,Tokenizer.regexBig=/^([ \t\u000B\u000C\u00A0\uFFFF])?([\u000A\u000D\u2028\u2029])?(\/\/)?(\/\*)?(')?(")?(\.?[0-9])?(?:(\/)[^=])?(>>>=|===|!==|>>>|<<=|>>=|<=|>=|==|!=|\+\+|--|<<|>>|\&\&|\|\||\+=|-=|\*=|%=|\&=|\|=|\^=|\/=|\{|\}|\(|\)|\[|\]|\.|;|,|<|>|\+|-|\*|%|\||\&|\||\^|!|~|\?|:|=|\/)?/,Tokenizer.regexBigAlt=/([ \t\u000B\u000C\u00A0\uFFFF])?([\u000A\u000D\u2028\u2029])?(\/\/)?(\/\*)?(')?(")?(\.?[0-9])?(?:(\/)[^=])?(>>>=|===|!==|>>>|<<=|>>=|<=|>=|==|!=|\+\+|--|<<|>>|\&\&|\|\||\+=|-=|\*=|%=|\&=|\|=|\^=|\/=|\{|\}|\(|\)|\[|\]|\.|;|,|<|>|\+|-|\*|%|\||\&|\||\^|!|~|\?|:|=|\/)?/g,Tokenizer.Error={UnterminatedSingleStringNewline:{msg:"Newlines are not allowed in string literals"},UnterminatedSingleStringOther:{msg:"Unterminated single string"},UnterminatedDoubleStringNewline:{msg:"Newlines are not allowed in string literals"},UnterminatedDoubleStringOther:{msg:"Unterminated double string"},UnterminatedRegularExpressionNewline:{msg:"Newlines are not allowed in regular expressions"},NothingToRepeat:{msg:"Used a repeat character (*?+) in a regex without something prior to it to match"},ClosingClassRangeNotFound:{msg:"Unable to find ] for class range"},RegexOpenGroup:{msg:"Open group did not find closing parenthesis"},RegexNoOpenGroups:{msg:"Closing parenthesis found but no group open"},UnterminatedRegularExpressionOther:{msg:"Unterminated regular expression"},UnterminatedMultiLineComment:{msg:"Unterminated multi line comment"},UnexpectedIdentifier:{msg:"Unexpected identifier"},IllegalOctalEscape:{msg:"Octal escapes are not valid"},Unknown:{msg:"Unknown input"},NumberExponentRequiresDigits:{msg:"Numbers with exponents require at least one digit after the `e`"},BacktickNotSupported:{msg:"The backtick is not used in js, maybe you copy/pasted from a fancy site/doc?"},InvalidUnicodeEscape:{msg:"Encountered an invalid unicode escape, must be followed by exactly four hex numbers"},InvalidBackslash:{msg:"Encountered a backslash where it not allowed"},StartOfMatchShouldBeAtStart:{msg:"The ^ signifies the start of match but was not found at a start"},DollarShouldBeEnd:{msg:"The $ signifies the stop of match but was not found at a stop"},QuantifierRequiresNumber:{msg:"Quantifier curly requires at least one digit before the comma"},QuantifierRequiresClosingCurly:{msg:"Quantifier curly requires to be closed"},MissingOpeningCurly:{msg:"Encountered closing quantifier curly without seeing an opening curly"}};