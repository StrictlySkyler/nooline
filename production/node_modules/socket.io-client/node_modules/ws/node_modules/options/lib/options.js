/*!
 * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>
 * MIT Licensed
 */

function Options(e){var t={},n=this.value={};Object.keys(e).forEach(function(r){t[r]=e[r],Object.defineProperty(n,r,{get:function(){return t[r]},configurable:!1,enumerable:!0})}),this.reset=function(){return Object.keys(e).forEach(function(n){t[n]=e[n]}),this},this.merge=function(e,n){var r,i,o,f;if(e=e||{},"[object Array]"===Object.prototype.toString.call(n)){for(r=[],i=0,o=n.length;o>i;++i)f=n[i],f in e||r.push(f);if(r.length>0)throw r.length>1?Error("options "+r.slice(0,r.length-1).join(", ")+" and "+r[r.length-1]+" must be defined"):Error("option "+r[0]+" must be defined")}return Object.keys(e).forEach(function(n){n in t&&(t[n]=e[n])}),this},this.copy=function(t){var r={};return Object.keys(e).forEach(function(e){-1!==t.indexOf(e)&&(r[e]=n[e])}),r},this.read=function(e,t){var n,r;return"function"==typeof t?(n=this,fs.readFile(e,function(e,r){if(e)return t(e);var i=JSON.parse(r);n.merge(i),t()})):(r=JSON.parse(fs.readFileSync(e)),this.merge(r)),this},this.isDefined=function(e){return void 0!==n[e]},this.isDefinedAndNonNull=function(e){return void 0!==n[e]&&null!==n[e]},Object.freeze(n),Object.freeze(this)}var fs=null;module.exports=Options;