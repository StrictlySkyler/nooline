function BandwidthSampler(e,n){var o,t,r;n=n||2e3,o=0,t=this,r=setInterval(function(){var r=e.bytesReceived,s=(r-o)/(n/1e3);o=r,t.emit("sample",s)},n),e.on("close",function(){clearInterval(r)})}function makePathForFile(e,n,o){function t(e){return e?o(e):0==r.length?o(null,s):(s+="/"+r.shift(),fs.exists(s,function(e){e?process.nextTick(t):fs.mkdir(s,t)}),void 0)}var r,s;if("function"!=typeof o)throw Error("callback is required");e=path.dirname(path.normalize(e)).replace(/^(\/|\\)+/,""),r=e.split(/(\\|\/)/),s=n,t()}var clientId,wss,WebSocketServer=null.Server,express=null,fs=null,http=null,util=null,path=null,app=express.createServer(),events=null,ansi=null,cursor=ansi(process.stdout);util.inherits(BandwidthSampler,events.EventEmitter),cursor.eraseData(2).goto(1,1),app.use(express.static(__dirname+"/public")),clientId=0,wss=new WebSocketServer({server:app}),wss.on("connection",function(e){var n,o,t,r=++clientId;cursor.goto(1,4+r).eraseLine(),console.log("Client #%d connected",r),n=new BandwidthSampler(e),n.on("sample",function(e){cursor.goto(1,4+r).eraseLine(),console.log("WebSocket #%d incoming bandwidth: %d MB/s",r,Math.round(e/1048576))}),o=0,t=null,e.on("message",function(n,r){if(r.binary){if(null==t)return;makePathForFile(t.path,__dirname+"/uploaded",function(r,s){return r?(console.log(r),e.send(JSON.stringify({event:"error",path:t.path,message:r.message})),void 0):(fs.writeFile(s+"/"+t.name,n,function(){++o,e.send(JSON.stringify({event:"complete",path:t.path})),t=null}),void 0)})}else t=JSON.parse(n)}),e.on("close",function(){cursor.goto(1,4+r).eraseLine(),console.log("Client #%d disconnected. %d files received.",r,o)}),e.on("error",function(e){cursor.goto(1,4+r).eraseLine(),console.log("Client #%d error: %s",r,e.message)})}),fs.mkdir(__dirname+"/uploaded",function(){console.log("Uploaded files will be saved to %s/uploaded.",__dirname),console.log("Remember to wipe this directory if you upload lots and lots."),app.listen(8080),console.log("Listening on http://localhost:8080")});