function RedisClient(e,t){this.stream=e,this.options=t=t||{},this.connection_id=++connection_id,this.connected=!1,this.ready=!1,this.connections=0,void 0===this.options.socket_nodelay&&(this.options.socket_nodelay=!0),this.should_buffer=!1,this.command_queue_high_water=this.options.command_queue_high_water||1e3,this.command_queue_low_water=this.options.command_queue_low_water||0,this.max_attempts=null,t.max_attempts&&!isNaN(t.max_attempts)&&t.max_attempts>0&&(this.max_attempts=+t.max_attempts),this.command_queue=new Queue,this.offline_queue=new Queue,this.commands_sent=0,this.connect_timeout=!1,t.connect_timeout&&!isNaN(t.connect_timeout)&&t.connect_timeout>0&&(this.connect_timeout=+t.connect_timeout),this.enable_offline_queue=!0,"boolean"==typeof this.options.enable_offline_queue&&(this.enable_offline_queue=this.options.enable_offline_queue),this.initialize_retry_vars(),this.pub_sub_mode=!1,this.subscription_set={},this.monitoring=!1,this.closing=!1,this.server_info={},this.auth_pass=null,this.parser_module=null,this.selected_db=null,this.old_state=null;var o=this;this.stream.on("connect",function(){o.on_connect()}),this.stream.on("data",function(e){o.on_data(e)}),this.stream.on("error",function(e){o.on_error(e.message)}),this.stream.on("close",function(){o.connection_gone("close")}),this.stream.on("end",function(){o.connection_gone("end")}),this.stream.on("drain",function(){o.should_buffer=!1,o.emit("drain")}),events.EventEmitter.call(this)}function try_callback(e,t){try{e(null,t)}catch(o){process.nextTick(function(){throw o})}}function reply_to_object(e){var t,o,s,n,r={};if(0===e.length)return null;for(t=0,o=e.length;o>t;t+=2)s=""+e[t],n=e[t+1],r[s]=n;return r}function reply_to_strings(e){var t;if(Buffer.isBuffer(e))return""+e;if(Array.isArray(e)){for(t=0;t<e.length;t++)e[t]=""+e[t];return e}return e}function Command(e,t,o,s,n){this.command=e,this.args=t,this.sub_command=o,this.buffer_args=s,this.callback=n}function Multi(e,t){this.client=e,this.queue=[["MULTI"]],Array.isArray(t)&&(this.queue=this.queue.concat(t))}function set_union(e,t){var o={};return e.forEach(function(e){o[e]=!0}),t.forEach(function(e){o[e]=!0}),Object.keys(o)}var commands,eval,net=require("net"),util=require("./lib/util"),Queue=require("./lib/queue"),to_array=require("./lib/to_array"),events=require("events"),crypto=require("crypto"),parsers=[],connection_id=0,default_port=6379,default_host="127.0.0.1";exports.debug_mode=!1;try{require("./lib/parser/hiredis"),parsers.push(require("./lib/parser/hiredis"))}catch(err){exports.debug_mode&&console.warn("hiredis parser not installed.")}parsers.push(require("./lib/parser/javascript")),util.inherits(RedisClient,events.EventEmitter),exports.RedisClient=RedisClient,RedisClient.prototype.initialize_retry_vars=function(){this.retry_timer=null,this.retry_totaltime=0,this.retry_delay=150,this.retry_backoff=1.7,this.attempts=1},RedisClient.prototype.flush_and_error=function(e){for(var t;this.offline_queue.length>0;)t=this.offline_queue.shift(),"function"==typeof t.callback&&t.callback(e);for(this.offline_queue=new Queue;this.command_queue.length>0;)t=this.command_queue.shift(),"function"==typeof t.callback&&t.callback(e);this.command_queue=new Queue},RedisClient.prototype.on_error=function(e){var t="Redis connection to "+this.host+":"+this.port+" failed - "+e;this.closing||(exports.debug_mode&&console.warn(t),this.flush_and_error(t),this.connected=!1,this.ready=!1,this.emit("error",Error(t)),this.connection_gone("error"))},RedisClient.prototype.do_auth=function(){var e=this;exports.debug_mode&&console.log("Sending auth to "+e.host+":"+e.port+" id "+e.connection_id),e.send_anyway=!0,e.send_command("auth",[this.auth_pass],function(t,o){return t?(""+t).match("LOADING")?(console.log("Redis still loading, trying to authenticate later"),setTimeout(function(){e.do_auth()},2e3),void 0):e.emit("error",Error("Auth error: "+t.message)):"OK"!=""+o?e.emit("error",Error("Auth failed: "+(""+o))):(exports.debug_mode&&console.log("Auth succeeded "+e.host+":"+e.port+" id "+e.connection_id),e.auth_callback&&(e.auth_callback(t,o),e.auth_callback=null),e.emit("connect"),e.options.no_ready_check?e.on_ready():e.ready_check(),void 0)}),e.send_anyway=!1},RedisClient.prototype.on_connect=function(){exports.debug_mode&&console.log("Stream connected "+this.host+":"+this.port+" id "+this.connection_id),this.connected=!0,this.ready=!1,this.attempts=0,this.connections+=1,this.command_queue=new Queue,this.emitted_end=!1,this.initialize_retry_vars(),this.options.socket_nodelay&&this.stream.setNoDelay(),this.stream.setTimeout(0),this.init_parser(),this.auth_pass?this.do_auth():(this.emit("connect"),this.options.no_ready_check?this.on_ready():this.ready_check())},RedisClient.prototype.init_parser=function(){var e=this;if(this.options.parser){if(!parsers.some(function(t){return t.name===e.options.parser?(e.parser_module=t,exports.debug_mode&&console.log("Using parser module: "+e.parser_module.name),!0):void 0}))throw Error("Couldn't find named parser "+e.options.parser+" on this system")}else exports.debug_mode&&console.log("Using default parser module: "+parsers[0].name),this.parser_module=parsers[0];this.parser_module.debug_mode=exports.debug_mode,this.reply_parser=new this.parser_module.Parser({return_buffers:e.options.return_buffers||e.options.detect_buffers||!1}),this.reply_parser.on("reply error",function(t){e.return_error(Error(t))}),this.reply_parser.on("reply",function(t){e.return_reply(t)}),this.reply_parser.on("error",function(t){e.emit("error",Error("Redis reply parser error: "+t.stack))})},RedisClient.prototype.on_ready=function(){var e,t,o=this;return this.ready=!0,null!==this.old_state&&(this.monitoring=this.old_state.monitoring,this.pub_sub_mode=this.old_state.pub_sub_mode,this.selected_db=this.old_state.selected_db,this.old_state=null),null!==this.selected_db&&this.send_command("select",[this.selected_db]),this.pub_sub_mode===!0?(e=0,t=function(){e--,0==e&&o.emit("ready")},Object.keys(this.subscription_set).forEach(function(s){var n=s.split(" ");exports.debug_mode&&console.warn("sending pub/sub on_ready "+n[0]+", "+n[1]),e++,o.send_command(n[0]+"scribe",[n[1]],t)}),void 0):(this.monitoring?this.send_command("monitor"):this.send_offline_queue(),this.emit("ready"),void 0)},RedisClient.prototype.on_info_cmd=function(e,t){var o,s,n=this,r={};return e?n.emit("error",Error("Ready check failed: "+e.message)):(o=(""+t).split("\r\n"),o.forEach(function(e){var t=e.split(":");t[1]&&(r[t[0]]=t[1])}),r.versions=[],r.redis_version.split(".").forEach(function(e){r.versions.push(+e)}),this.server_info=r,!r.loading||r.loading&&"0"===r.loading?(exports.debug_mode&&console.log("Redis server ready."),this.on_ready()):(s=1e3*r.loading_eta_seconds,s>1e3&&(s=1e3),exports.debug_mode&&console.log("Redis server still loading, trying again in "+s),setTimeout(function(){n.ready_check()},s)),void 0)},RedisClient.prototype.ready_check=function(){var e=this;exports.debug_mode&&console.log("checking server ready state..."),this.send_anyway=!0,this.info(function(t,o){e.on_info_cmd(t,o)}),this.send_anyway=!1},RedisClient.prototype.send_offline_queue=function(){for(var e,t=0;this.offline_queue.length>0;)e=this.offline_queue.shift(),exports.debug_mode&&console.log("Sending offline command: "+e.command),t+=!this.send_command(e.command,e.args,e.callback);this.offline_queue=new Queue,t||(this.should_buffer=!1,this.emit("drain"))},RedisClient.prototype.connection_gone=function(e){var t,o=this;if(!this.retry_timer){if(exports.debug_mode&&console.warn("Redis connection is gone from "+e+" event."),this.connected=!1,this.ready=!1,null===this.old_state&&(t={monitoring:this.monitoring,pub_sub_mode:this.pub_sub_mode,selected_db:this.selected_db},this.old_state=t,this.monitoring=!1,this.pub_sub_mode=!1,this.selected_db=null),this.emitted_end||(this.emit("end"),this.emitted_end=!0),this.flush_and_error("Redis connection gone from "+e+" event."),this.closing)return this.retry_timer=null,exports.debug_mode&&console.warn("connection ended from quit command, not retrying."),void 0;if(this.retry_delay=Math.floor(this.retry_delay*this.retry_backoff),exports.debug_mode&&console.log("Retry connection in "+this.current_retry_delay+" ms"),this.max_attempts&&this.attempts>=this.max_attempts)return this.retry_timer=null,console.error("node_redis: Couldn't get Redis connection after "+this.max_attempts+" attempts."),void 0;this.attempts+=1,this.emit("reconnecting",{delay:o.retry_delay,attempt:o.attempts}),this.retry_timer=setTimeout(function(){return exports.debug_mode&&console.log("Retrying connection..."),o.retry_totaltime+=o.current_retry_delay,o.connect_timeout&&o.retry_totaltime>=o.connect_timeout?(o.retry_timer=null,console.error("node_redis: Couldn't get Redis connection after "+o.retry_totaltime+"ms."),void 0):(o.stream.connect(o.port,o.host),o.retry_timer=null,void 0)},this.retry_delay)}},RedisClient.prototype.on_data=function(e){exports.debug_mode&&console.log("net read "+this.host+":"+this.port+" id "+this.connection_id+": "+(""+e));try{this.reply_parser.execute(e)}catch(t){this.emit("error",t)}},RedisClient.prototype.return_error=function(e){var t=this.command_queue.shift(),o=this.command_queue.getLength();if(this.pub_sub_mode===!1&&0===o&&(this.emit("idle"),this.command_queue=new Queue),this.should_buffer&&o<=this.command_queue_low_water&&(this.emit("drain"),this.should_buffer=!1),t&&"function"==typeof t.callback)try{t.callback(e)}catch(s){process.nextTick(function(){throw s})}else console.log("node_redis: no callback to send error: "+e.message),process.nextTick(function(){throw e})},RedisClient.prototype.return_reply=function(e){var t,o,s,n,r,i,u;if(t=this.command_queue.shift(),u=this.command_queue.getLength(),this.pub_sub_mode===!1&&0===u&&(this.emit("idle"),this.command_queue=new Queue),this.should_buffer&&u<=this.command_queue_low_water&&(this.emit("drain"),this.should_buffer=!1),t&&!t.sub_command)"function"==typeof t.callback?(this.options.detect_buffers&&t.buffer_args===!1&&(e=reply_to_strings(e)),e&&"hgetall"===t.command.toLowerCase()&&(e=reply_to_object(e)),try_callback(t.callback,e)):exports.debug_mode&&console.log("no callback for reply: "+(e&&e.toString&&""+e));else if(this.pub_sub_mode||t&&t.sub_command){if(Array.isArray(e))if(s=""+e[0],"message"===s)this.emit("message",""+e[1],e[2]);else if("pmessage"===s)this.emit("pmessage",""+e[1],""+e[2],e[3]);else{if("subscribe"!==s&&"unsubscribe"!==s&&"psubscribe"!==s&&"punsubscribe"!==s)throw Error("subscriptions are active but got unknown reply type "+s);0===e[2]?(this.pub_sub_mode=!1,this.debug_mode&&console.log("All subscriptions removed, exiting pub/sub mode")):this.pub_sub_mode=!0,t&&"function"==typeof t.callback&&try_callback(t.callback,""+e[1]),this.emit(s,""+e[1],e[2])}else if(!this.closing)throw Error("subscriptions are active but got an invalid reply: "+e)}else{if(!this.monitoring)throw Error("node_redis command queue state error. If you can reproduce this, please report it.");o=e.indexOf(" "),n=e.slice(0,o),r=e.indexOf('"'),i=e.slice(r+1,-1).split('" "').map(function(e){return e.replace(/\\"/g,'"')}),this.emit("monitor",n,i)}},RedisClient.prototype.send_command=function(e,t,o){var s,n,r,i,u,a,c,l,d=this.stream,h="",m=0;if("string"!=typeof e)throw Error("First argument to send_command must be the command name string, not "+typeof e);if(!Array.isArray(t))throw Error("send_command: second argument must be an array");if("function"==typeof o);else{if(o)throw Error("send_command: last argument must be a callback or undefined");c=typeof t[t.length-1],("function"===c||"undefined"===c)&&(o=t.pop())}for(("sadd"===e||"SADD"===e)&&t.length>0&&Array.isArray(t[t.length-1])&&(t=t.slice(0,-1).concat(t[t.length-1])),a=!1,r=0,i=t.length,s;i>r;r+=1)Buffer.isBuffer(t[r])&&(a=!0);if(n=new Command(e,t,!1,a,o),!this.ready&&!this.send_anyway||!d.writable){if(exports.debug_mode&&(d.writable||console.log("send command: stream is not writeable.")),this.enable_offline_queue)exports.debug_mode&&console.log("Queueing "+e+" for next server connection."),this.offline_queue.push(n),this.should_buffer=!0;else{if(l=Error("send_command: stream not writeable. enable_offline_queue is false"),!n.callback)throw l;n.callback(l)}return!1}if("subscribe"===e||"psubscribe"===e||"unsubscribe"===e||"punsubscribe"===e)this.pub_sub_command(n);else if("monitor"===e)this.monitoring=!0;else if("quit"===e)this.closing=!0;else if(this.pub_sub_mode===!0)throw Error("Connection in pub/sub mode, only pub/sub commands may be used");if(this.command_queue.push(n),this.commands_sent+=1,u=t.length+1,h="*"+u+"\r\n$"+e.length+"\r\n"+e+"\r\n",a)for(exports.debug_mode&&console.log("send command ("+h+") has Buffer arguments"),m+=!d.write(h),r=0,i=t.length,s;i>r;r+=1)s=t[r],Buffer.isBuffer(s)||s instanceof String||(s+=""),Buffer.isBuffer(s)?0===s.length?(exports.debug_mode&&console.log("send_command: using empty string for 0 length buffer"),m+=!d.write("$0\r\n\r\n")):(m+=!d.write("$"+s.length+"\r\n"),m+=!d.write(s),m+=!d.write("\r\n"),exports.debug_mode&&console.log("send_command: buffer send "+s.length+" bytes")):(exports.debug_mode&&console.log("send_command: string send "+Buffer.byteLength(s)+" bytes: "+s),m+=!d.write("$"+Buffer.byteLength(s)+"\r\n"+s+"\r\n"));else{for(r=0,i=t.length,s;i>r;r+=1)s=t[r],"string"!=typeof s&&(s+=""),h+="$"+Buffer.byteLength(s)+"\r\n"+s+"\r\n";exports.debug_mode&&console.log("send "+this.host+":"+this.port+" id "+this.connection_id+": "+h),m+=!d.write(h)}return exports.debug_mode&&console.log("send_command buffered_writes: "+m," should_buffer: "+this.should_buffer),(m||this.command_queue.getLength()>=this.command_queue_high_water)&&(this.should_buffer=!0),!this.should_buffer},RedisClient.prototype.pub_sub_command=function(e){var t,o,s,n;if(this.pub_sub_mode===!1&&exports.debug_mode&&console.log("Entering pub/sub mode from "+e.command),this.pub_sub_mode=!0,e.sub_command=!0,s=e.command,n=e.args,"subscribe"===s||"psubscribe"===s)for(o="subscribe"===s?"sub":"psub",t=0;t<n.length;t++)this.subscription_set[o+" "+n[t]]=!0;else for(o="unsubscribe"===s?"sub":"psub",t=0;t<n.length;t++)delete this.subscription_set[o+" "+n[t]]},RedisClient.prototype.end=function(){return this.stream._events={},this.connected=!1,this.ready=!1,this.stream.end()},exports.Multi=Multi,commands=set_union(["get","set","setnx","setex","append","strlen","del","exists","setbit","getbit","setrange","getrange","substr","incr","decr","mget","rpush","lpush","rpushx","lpushx","linsert","rpop","lpop","brpop","brpoplpush","blpop","llen","lindex","lset","lrange","ltrim","lrem","rpoplpush","sadd","srem","smove","sismember","scard","spop","srandmember","sinter","sinterstore","sunion","sunionstore","sdiff","sdiffstore","smembers","zadd","zincrby","zrem","zremrangebyscore","zremrangebyrank","zunionstore","zinterstore","zrange","zrangebyscore","zrevrangebyscore","zcount","zrevrange","zcard","zscore","zrank","zrevrank","hset","hsetnx","hget","hmset","hmget","hincrby","hdel","hlen","hkeys","hvals","hgetall","hexists","incrby","decrby","getset","mset","msetnx","randomkey","select","move","rename","renamenx","expire","expireat","keys","dbsize","auth","ping","echo","save","bgsave","bgrewriteaof","shutdown","lastsave","type","multi","exec","discard","sync","flushdb","flushall","sort","info","monitor","ttl","persist","slaveof","debug","config","subscribe","unsubscribe","psubscribe","punsubscribe","publish","watch","unwatch","cluster","restore","migrate","dump","object","client","eval","evalsha"],require("./lib/commands")),commands.forEach(function(e){RedisClient.prototype[e]=function(t,o){return Array.isArray(t)&&"function"==typeof o?this.send_command(e,t,o):this.send_command(e,to_array(arguments))},RedisClient.prototype[e.toUpperCase()]=RedisClient.prototype[e],Multi.prototype[e]=function(){return this.queue.push([e].concat(to_array(arguments))),this},Multi.prototype[e.toUpperCase()]=Multi.prototype[e]}),RedisClient.prototype.select=function(e,t){var o=this;this.send_command("select",[e],function(s,n){null===s&&(o.selected_db=e),"function"==typeof t&&t(s,n)})},RedisClient.prototype.SELECT=RedisClient.prototype.select,RedisClient.prototype.auth=function(){var e=to_array(arguments);this.auth_pass=e[0],this.auth_callback=e[1],exports.debug_mode&&console.log("Saving auth as "+this.auth_pass),this.connected&&this.send_command("auth",e)},RedisClient.prototype.AUTH=RedisClient.prototype.auth,RedisClient.prototype.hmget=function(e,t,o){return Array.isArray(t)&&"function"==typeof o?this.send_command("hmget",[e].concat(t),o):Array.isArray(e)&&"function"==typeof t?this.send_command("hmget",e,t):this.send_command("hmget",to_array(arguments))},RedisClient.prototype.HMGET=RedisClient.prototype.hmget,RedisClient.prototype.hmset=function(e,t){var o,s,n,r,i,u;if(Array.isArray(e)&&"function"==typeof t)return this.send_command("hmset",e,t);if(e=to_array(arguments),"function"==typeof e[e.length-1]?(t=e[e.length-1],e.length-=1):t=null,2===e.length&&"string"==typeof e[0]&&"object"==typeof e[1]){for(o=[e[0]],s=Object.keys(e[1]),n=0,r=s.length;r>n;n++){if(i=s[n],o.push(i),"string"!=typeof e[1][i]){if(u=Error("hmset expected value to be a string",i,":",e[1][i]),t)return t(u);throw u}o.push(e[1][i])}e=o}return this.send_command("hmset",e,t)},RedisClient.prototype.HMSET=RedisClient.prototype.hmset,Multi.prototype.hmset=function(){var e,t=to_array(arguments);return t.length>=2&&"string"==typeof t[0]&&"object"==typeof t[1]?(e=["hmset",t[0]],Object.keys(t[1]).map(function(o){e.push(o),e.push(t[1][o])}),t[2]&&e.push(t[2]),t=e):t.unshift("hmset"),this.queue.push(t),this},Multi.prototype.HMSET=Multi.prototype.hmset,Multi.prototype.exec=function(e){var t=this;return this.queue.forEach(function(e,o){var s,n=e[0];e="function"==typeof e[e.length-1]?e.slice(1,-1):e.slice(1),1===e.length&&Array.isArray(e[0])&&(e=e[0]),"hmset"===n.toLowerCase()&&"object"==typeof e[1]&&(s=e.pop(),Object.keys(s).forEach(function(t){e.push(t),e.push(s[t])})),this.client.send_command(n,e,function(e){if(e){var s=t.queue[o];if("function"!=typeof s[s.length-1])throw Error(e);s[s.length-1](e),t.queue.splice(o,1)}})},this),this.client.send_command("EXEC",[],function(o,s){if(o){if(e)return e(Error(o)),void 0;throw Error(o)}var n,r,i,u;if(s)for(n=1,r=t.queue.length;r>n;n+=1)i=s[n-1],u=t.queue[n],i&&"hgetall"===u[0].toLowerCase()&&(s[n-1]=i=reply_to_object(i)),"function"==typeof u[u.length-1]&&u[u.length-1](null,i);e&&e(null,s)})},Multi.prototype.EXEC=Multi.prototype.exec,RedisClient.prototype.multi=function(e){return new Multi(this,e)},RedisClient.prototype.MULTI=function(e){return new Multi(this,e)},eval=RedisClient.prototype.eval,RedisClient.prototype.eval=RedisClient.prototype.EVAL=function(){var e,t,o=this,s=to_array(arguments);"function"==typeof s[s.length-1]&&(e=s.pop()),t=s[0],s[0]=crypto.createHash("sha1").update(t).digest("hex"),o.evalsha(s,function(n,r){n&&/NOSCRIPT/.test(n.message)?(s[0]=t,eval.call(o,s,e)):e&&e(n,r)})},exports.createClient=function(e,t,o){var s,n,r=e||default_port,i=t||default_host;return n=net.createConnection(r,i),s=new RedisClient(n,o),s.port=r,s.host=i,s},exports.print=function(e,t){e?console.log("Error: "+e):console.log("Reply: "+t)};