var workers,i,n,hub=null,cluster=null,WORKERS=2;if(cluster.isMaster){for(workers=[],i=0;WORKERS>i;i++)workers.push(cluster.fork());n=WORKERS,hub.on("imready",function(){0===--n&&hub.emit("allready")}),describe("Master",function(){it("Waits for workers to exit",function(e){function r(){0===--o&&e()}var o=WORKERS;cluster.on("exit",r)})})}else describe("Worker",function(){describe("Emit message to other worker",function(){it("Respond when all workers are listening",function(e){hub.on("fromworker",e),hub.on("allready",function(){hub.emitRemote("fromworker")}),hub.emit("imready")})}),describe("Calls hub method",function(){it("Data should be shared amongst workers",function(e){var r=0;hub.on("incr work",function(){++r===WORKERS&&e()}),hub.ready(function(){setTimeout(function(){hub.incr("work")},100)})})})});