var cluster=null,EventVat=null,has=null.has,commands=null.commands,hubs=null.hubs,broadcast=null.broadcast,emit=null.emit,isMaster=cluster.isMaster,isWorker=cluster.isWorker,Hub=module.exports=function(t){if(this._id=t||"",has(hubs,this._id))return hubs[this._id];if(hubs[this._id]=this,this._listeners={},this._onready=[],isMaster){this._db=new EventVat;var e=this;e._db.onAny(function(){var t=Array.prototype.slice.call(arguments);has(e._listeners,this.event)&&e._listeners[this.event].forEach(function(e){e.apply(null,t)}),broadcast(e._id,this.event,t)})}else this._cb={}};Hub.prototype.isready=!1,Object.keys(EventVat.prototype).forEach(function(t){Hub.prototype[t]=function(){var e,s,o,r=this,i=Array.prototype.slice.call(arguments);if("function"==typeof i[i.length-1]&&(e=i.pop()),isMaster)return s=r._db[t].apply(r._db,i),e&&process.nextTick(function(){e(s)}),s;if(e){for(;has(r._cb,o=Math.floor(2e4*Math.random())););r._cb[o]=e}r._send({cmd:t,args:i,key:o})}}),Hub.prototype._send=function(t){return t.dir=__dirname,t.hub=this._id,process._channel?(process.send(t),void 0):(this.emitLocal("error",Error("Master channel closed")),void 0)},Hub.prototype.emit=function(){this.emitRemote.apply(this,arguments),this.emitLocal.apply(this,arguments)},Hub.prototype.publish=Hub.prototype.emit,Hub.prototype.emitLocal=function(t){var e=Array.prototype.slice.call(arguments,1);emit(this._id,t,e)},Hub.prototype.emitRemote=function(t){var e=Array.prototype.slice.call(arguments,1);isWorker?this._send({cmd:commands.EVENT,event:t,args:e}):broadcast(this._id,t,e)},Hub.prototype.broadcast=Hub.prototype.emitRemote,Hub.prototype.on=function(t,e){has(this._listeners,t)||(this._listeners[t]=[]),this._listeners[t].push(e),isWorker&&this._send({cmd:commands.ON,event:t})},Hub.prototype.addListener=Hub.prototype.on,Hub.prototype.subscribe=Hub.prototype.on,Hub.prototype.off=function(t,e){var s,o,r,i,n;if(has(this._listeners,t)){for(s=this._listeners[t],o=!1,r=0,i=s.length;i>r;r++)if(n=s[r],n===e||n.listener===e){s.splice(r,1),o=!0;break}o&&isWorker&&this._send({cmd:commands.OFF,event:t})}},Hub.prototype.removeListener=Hub.prototype.off,Hub.prototype.unsubscribe=Hub.prototype.off,Hub.prototype.many=function(t,e,s){function o(){0===--t&&r.off(e,s),s.apply(this,arguments)}var r=this;o.listener=s,r.on(e,o)},Hub.prototype.once=function(t,e){this.many(1,t,e)},Hub.prototype.removeAllListeners=function(t){t?has(this._listeners,t)&&delete this._listeners[t]:this._listeners={},isWorker&&this._send({cmd:commands.OFFALL,event:t})},Hub.prototype.ready=function(t){this.isready?process.nextTick(t):this._onready.push(t)},Hub.prototype.destroy=function(){this._db.die(),delete hubs[this._id]};