var assert=null,weak=null,ref=null;describe("reinterpret()",function(){beforeEach(gc),it("should return a new Buffer instance at the same address",function(){var e,t=new Buffer("hello world"),r=t.slice(0,0);assert.strictEqual(0,r.length),assert.strictEqual(t.address(),r.address()),e=r.reinterpret(t.length),assert.strictEqual(t.address(),e.address()),assert.strictEqual(t.length,e.length),assert.strictEqual(""+t,""+e)}),it("should retain a reference to the original Buffer when reinterpreted",function(){var e,t=!1,r=!1,s=new Buffer(1);weak(s,function(){t=!0}),e=s.reinterpret(0),weak(e,function(){r=!0}),assert(!t,'"buf" has been garbage collected too soon'),assert(!r,'"other" has been garbage collected too soon'),s=null,gc(),assert(!t,'"buf" has been garbage collected too soon'),assert(!r,'"other" has been garbage collected too soon'),e=null,gc(),assert(r,'"other" has not been garbage collected'),assert(t,'"buf" has not been garbage collected')}),describe("reinterpretUntilZeros()",function(){it("should return a new Buffer instance up until the first 0",function(){var e=new Buffer("hello\x00world"),t=e.reinterpretUntilZeros(1);assert.equal(t.length,"hello".length),assert.equal(""+t,"hello")}),it("should return a new Buffer instance up until the first 2-byte sequence of 0s",function(){var e,t="hello world",r=new Buffer(50),s=r.write(t,"ucs2");r.writeInt16LE(0,s),e=r.reinterpretUntilZeros(2),assert.equal(t.length,e.length/2),assert.equal(e.toString("ucs2"),t)})})});