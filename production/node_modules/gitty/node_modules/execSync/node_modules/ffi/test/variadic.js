var assert=null,ref=null,ffi=null,bindings=null({module_root:__dirname,bindings:"ffi_tests"}),sprintfPtr=bindings.sprintf;describe("variadic arguments",function(){afterEach(gc),it("should work with vararg C functions",function(){var t=new Buffer(100),n=ffi.VariadicForeignFunction(sprintfPtr,"int",["pointer","string"]);n()(t,"hello world!"),assert.equal(t.readCString(),"hello world!"),n("int")(t,"%d",42),assert.equal(t.readCString(),"42"),n("double")(t,"%10.2f",3.14),assert.equal(t.readCString(),"      3.14"),n("string")(t," %s ","test"),assert.equal(t.readCString()," test ")}),it("should return the same Function instance when the same arguments are used",function(){var t=ffi.VariadicForeignFunction(sprintfPtr,"int",["pointer","string"]),n=t("int"),r=t(ref.types.int);assert.strictEqual(n,r)})});