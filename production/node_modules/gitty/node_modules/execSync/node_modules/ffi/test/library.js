var expect=null,assert=null,ref=null,Struct=null,ffi=null,Library=ffi.Library;describe("Library",function(){var e=ref.refType(ref.types.char);afterEach(gc),it("should be a function",function(){expect(Library).to.be.a("function")}),it("should work with the `new` operator",function(){var e=new Library;expect(e).to.be.an("object")}),it("should accept `null` as a first argument",function(){var t=new Library(null,{printf:["void",[e]]}),n=t.printf instanceof Function;expect(n).to.be(!0)}),it("should accept a lib name as the first argument",function(){var e="win32"==process.platform?"msvcrt":"libm",t=new Library(e,{ceil:["double",["double"]]}),n=t.ceil instanceof Function;expect(n).to.be(!0),expect(t.ceil(1.1)).to.equal(2)}),it("should accept a lib name with file extension",function(){var e="win32"==process.platform?"msvcrt.dll":"libm"+ffi.LIB_EXT,t=new Library(e,{ceil:["double",["double"]]}),n=t.ceil instanceof Function;expect(n).to.be(!0),expect(t.ceil(100.9)).to.equal(101)}),it("should throw when an invalid function name is used",function(){expect(function(){new Library(null,{doesnotexist__:["void",[]]})}).to.throwException()}),it('should work with "strcpy" and a 128 length string',function(){var t=Array(129).join("0"),n=new Buffer(256),i=new Library(null,{strcpy:[e,[e,"string"]]}).strcpy;i(n,t),expect(n.readCString()).to.equal(t)}),it('should work with "strcpy" and a 2k length string',function(){var t=Array(2001).join("0"),n=new Buffer(4096),i=new Library(null,{strcpy:[e,[e,"string"]]}).strcpy;i(n,t),expect(n.readCString()).to.equal(t)}),"win32"==process.platform?it('should work with "GetTimeOfDay" and a "FILETIME" Struct pointer',function(){var e=new Struct({dwLowDateTime:ref.types.uint32,dwHighDateTime:ref.types.uint32}),t=new Library("kernel32",{GetSystemTimeAsFileTime:["void",["pointer"]]}),n=new e;t.GetSystemTimeAsFileTime(n.ref())}):it('should work with "gettimeofday" and a "timeval" Struct pointer',function(){var e=new Struct({tv_sec:ref.types.long,tv_usec:ref.types.long}),t=ref.refType(e),n=ref.refType(ref.types.void),i=new Library(null,{gettimeofday:[ref.types.int,[t,n]]}),r=new e;i.gettimeofday(r.ref(),null),assert.equal(Math.floor(Date.now()/1e3),r.tv_sec)}),describe("async",function(){it("should call a function asynchronously",function(e){var t="win32"==process.platform?"msvcrt":"libm",n=new Library(t,{ceil:["double",["double"],{async:!0}]});n.ceil(1.1,function(t,n){expect(t).to.equal(null),expect(n).to.equal(2),e()})})})});