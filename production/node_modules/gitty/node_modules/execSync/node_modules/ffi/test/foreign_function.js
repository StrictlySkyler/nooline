var assert=null,ref=null,Array=null,Struct=null,ffi=null,bindings=null({module_root:__dirname,bindings:"ffi_tests"});describe("ForeignFunction",function(){var t,e;afterEach(gc),t=Struct({width:ref.types.int,height:ref.types.int}),e=Struct({num:"int",array:Array("double",20)}),it('should call the static "abs" bindings',function(){var t=bindings.abs,e=ffi.ForeignFunction(t,"int",["int"]);assert.equal("function",typeof e),assert.equal(1234,e(-1234))}),it("should throw an Error with a meaningful message when type's `set()` throws",function(){var t=bindings.abs,e=ffi.ForeignFunction(t,"int",["int"]);assert.throws(function(){e("a string?!?!")},/error setting argument 0/)}),it('should call the static "atoi" bindings',function(){var t=bindings.atoi,e=ffi.ForeignFunction(t,"int",["string"]);assert.equal("function",typeof e),assert.equal(1234,e("1234"))}),it('should call the static "double_box" bindings',function(){var e,n=ffi.ForeignFunction(bindings.double_box,t,[t]),i=new t;assert(i instanceof t),i.width=4,i.height=5,e=n(i),assert.equal(4,i.width),assert.equal(5,i.height),assert(e instanceof t),assert.equal(8,e.width),assert.equal(10,e.height),assert.notEqual(i.ref().address(),e.ref().address())}),it('should call the static "double_box_ptr" bindings',function(){var e,n=ref.refType(t),i=ffi.ForeignFunction(bindings.double_box_ptr,t,[n]),s=new t;s.width=4,s.height=5,e=i(s.ref()),assert.equal(8,s.width),assert.equal(10,s.height),assert(e instanceof t),assert.equal(8,e.width),assert.equal(10,e.height),assert.notEqual(s.ref().address(),e.ref().address())}),it('should call the static "area_box" bindings',function(){var e=ffi.ForeignFunction(bindings.area_box,ref.types.int,[t]),n=new t({width:5,height:20}),i=e(n);assert.equal("number",typeof i),assert.equal(100,i)}),it('should call the static "area_box_ptr" bindings',function(){var e=ref.refType(t),n=ffi.ForeignFunction(bindings.area_box_ptr,ref.types.int,[e]),i=new t({width:5,height:20}),s=n(i.ref());assert.equal("number",typeof s),assert.equal(100,s)}),it('should call the static "create_box" bindings',function(){var e=ffi.ForeignFunction(bindings.create_box,t,["int","int"]),n=e(1,2);assert(n instanceof t),assert.equal(1,n.width),assert.equal(2,n.height)}),it('should call the static "add_boxes" bindings',function(){var e,n,i,s=3,a=new Buffer(t.size*s);t.set(a,0*t.size,{width:1,height:10}),t.set(a,1*t.size,{width:2,height:20}),t.set(a,2*t.size,{width:3,height:30}),e=ref.refType(t),n=ffi.ForeignFunction(bindings.add_boxes,t,[e,"int"]),i=n(a,s),assert(i instanceof t),assert.equal(6,i.width),assert.equal(60,i.height)}),it('should call the static "int_array" bindings',function(){var t=Array("int"),e=ffi.ForeignFunction(bindings.int_array,t,[t]),n=new t([1,2,3,4,5,-1]),i=e(n);i.length=n.length,assert.equal(2,i[0]),assert.equal(4,i[1]),assert.equal(6,i[2]),assert.equal(8,i[3]),assert.equal(10,i[4]),assert.equal(-1,i[5])}),it('should call the static "array_in_struct" bindings',function(){var t,n,i=ffi.ForeignFunction(bindings.array_in_struct,e,[e]),s=new e;for(assert.equal(20,s.array.length),s.num=69,t=0;20>t;t++)s.array[t]=t/3.14;for(n=i(s),assert(n instanceof e),assert.equal(138,n.num),assert.equal(20,n.array.length),t=0;20>t;t++)assert.equal(t,Math.round(n.array[t]))}),it('should not call the "ref()" function of its arguments',function(){var t=ffi.ForeignFunction(bindings.abs,"void *",["void *"]),e=new Buffer(0);e.ref=assert.bind(null,0,'"ref()" should not be called'),t(e)}),describe("async",function(){it('should call the static "abs" bindings asynchronously',function(t){var e=bindings.abs,n=ffi.ForeignFunction(e,"int",["int"]);assert.equal("function",typeof n.async),n.async(-1234,function(e,n){assert.equal(null,e),assert.equal(1234,n),t()})}),it("should invoke the callback with an Error with a meaningful message when type's `set()` throws",function(t){var e=bindings.abs,n=ffi.ForeignFunction(e,"int",["int"]);n.async("a string!?!?",function(e,n){assert(e),assert(/error setting argument 0/.test(e.message)),assert.equal("undefined",typeof n),t()})})})});