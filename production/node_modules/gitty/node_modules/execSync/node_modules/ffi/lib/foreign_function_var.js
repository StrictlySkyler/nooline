function VariadicForeignFunction(e,r,n,t){function i(){var o,s,d,g,f,y,l,p,F;for(debug("variadic_function_generator invoked"),o=n.slice(),s=c.slice(),d=0;d<arguments.length;d++)g=ref.coerceType(arguments[d]),o.push(g),f=Type(g),assert(f.name),s.push(getId(g));return y=ref.coerceType(i.returnType),l=getId(y),assert(l),s=l+s.join(""),p=a[s],p?debug("cache hit for key:",s):(debug("creating the variadic ffi_cif instance for key:",s),F=CIF_var(r,o,u,t),p=a[s]=_ForeignFunction(F,e,y,o)),p}var a,u,c;return debug("creating new VariadicForeignFunction",e),a={},assert(Buffer.isBuffer(e),"expected Buffer as first argument"),assert(!!r,'expected a return "type" object as the second argument'),assert(Array.isArray(n),'expected Array of arg "type" objects as the third argument'),u=n.length,n=n.map(ref.coerceType),c=n.map(function(e){return getId(e)}),i.returnType=r,i}function getId(e){return e.hasOwnProperty(idKey)||(e[idKey]=(0|65536*(1+Math.random())).toString(16)),e[idKey]}var idKey,CIF_var=null,Type=null,_ForeignFunction=null,assert=null,debug=null,ref=null,bindings=null,POINTER_SIZE=ref.sizeof.pointer,FFI_ARG_SIZE=bindings.FFI_ARG_SIZE;module.exports=VariadicForeignFunction,idKey="_ffiId";