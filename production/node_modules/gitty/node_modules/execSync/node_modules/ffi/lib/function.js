function Function(t,n,e){return this instanceof Function?(debug("creating new FunctionType"),assert(!!t,'expected a return "type" object as the first argument'),assert(Array.isArray(n),'expected Array of arg "type" objects as the second argument'),this.retType=ref.coerceType(t),this.argTypes=n.map(ref.coerceType),this.abi=null==e?bindings.FFI_DEFAULT_ABI:e,void 0):new Function(t,n,e)}var ref=null,assert=null,bindings=null,Callback=null,ForeignFunction=null,debug=null;module.exports=Function,Function.prototype.ffi_type=bindings.FFI_TYPES.pointer,Function.prototype.size=ref.sizeof.pointer,Function.prototype.alignment=ref.alignof.pointer,Function.prototype.indirection=1,Function.prototype.toPointer=function(t){return Callback(this.retType,this.argTypes,this.abi,t)},Function.prototype.toFunction=function(t){return ForeignFunction(t,this.retType,this.argTypes,this.abi)},Function.prototype.get=function(t,n){debug('ffi FunctionType "get" function');var e=t.readPointer(n);return this.toFunction(e)},Function.prototype.set=function(t,n,e){debug('ffi FunctionType "set" function');var o;if("function"==typeof e)o=this.toPointer(e);else{if(!Buffer.isBuffer(e))throw Error("don't know how to set callback function for: "+e);o=e}t.writePointer(o,n)};