function ForeignFunction(e,n,r,t){var i,o,u,g;return debug("creating new ForeignFunction",n),i=t.length,o=i*POINTER_SIZE,u=r.size>=ref.sizeof.long?r.size:FFI_ARG_SIZE,assert(u>0),g=function(){var g,s,a,f,c,l;if(debug("invoking proxy function"),arguments.length!==i)throw new TypeError("Expected "+i+" arguments, got "+arguments.length);g=new Buffer(u),s=new Buffer(o);try{for(a=0;i>a;a++)f=t[a],c=arguments[a],l=ref.alloc(f,c),s.writePointer(l,a*POINTER_SIZE)}catch(m){throw m.message="error setting argument "+a+" - "+m.message,m}return bindings.ffi_call(e,n,g,s),g.type=r,g.deref()},g.async=function(){var g,s,a,f,c,l,m,E;if(debug("invoking async proxy function"),g=arguments.length,g!==i+1)throw new TypeError("Expected "+(i+1)+" arguments, got "+g);if(s=arguments[g-1],"function"!=typeof s)throw new TypeError("Expected a callback function as argument number: "+(g-1));a=new Buffer(u),f=new Buffer(o);try{for(c=0;i>c;c++)l=t[c],m=arguments[c],E=ref.alloc(l,m),f.writePointer(E,c*POINTER_SIZE)}catch(d){return d.message="error setting argument "+c+" - "+d.message,process.nextTick(s.bind(null,d))}bindings.ffi_call_async(e,n,a,f,function(t){e=e,n=n,f=f,t?s(t):(a.type=r,s(null,a.deref()))})},g}var assert=null,debug=null,ref=null,bindings=null,POINTER_SIZE=ref.sizeof.pointer,FFI_ARG_SIZE=bindings.FFI_ARG_SIZE;module.exports=ForeignFunction;