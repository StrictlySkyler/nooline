function DynamicLibrary(r,n){var i,e,t;if(!(this instanceof DynamicLibrary))return new DynamicLibrary(r,n);if(debug("new DynamicLibrary()",r,n),null==n&&(n=DynamicLibrary.FLAGS.RTLD_LAZY),this._handle=dlopen(r,n),assert(Buffer.isBuffer(this._handle),"expected a Buffer instance to be returned from `dlopen()`"),this._handle.isNull()){if(i=this.error(),(e=i.match(/^(([^ \t()])+\.so([^ \t:()])*):([ \t])*invalid ELF header$/))&&(t=read(e[1],"ascii"),e=t.match(/GROUP *\( *(([^ )])+)/)))return DynamicLibrary.call(this,e[1],n);throw Error("Dynamic Linking Error: "+i)}}var ForeignFunction=null,assert=null,debug=null,bindings=null,funcs=bindings.StaticFunctions,ref=null,read=null.readFileSync,int=ref.types.int,voidPtr=ref.refType(ref.types.void),dlopen=ForeignFunction(funcs.dlopen,voidPtr,["string",int]),dlclose=ForeignFunction(funcs.dlclose,int,[voidPtr]),dlsym=ForeignFunction(funcs.dlsym,voidPtr,[voidPtr,"string"]),dlerror=ForeignFunction(funcs.dlerror,"string",[]);module.exports=DynamicLibrary,DynamicLibrary.FLAGS={},Object.keys(bindings).forEach(function(r){if(/^RTLD_/.test(r)){var n=Object.getOwnPropertyDescriptor(bindings,r);Object.defineProperty(DynamicLibrary.FLAGS,r,n)}}),DynamicLibrary.prototype.close=function(){return debug("dlclose()"),dlclose(this._handle)},DynamicLibrary.prototype.get=function(r){debug("dlsym()",r),assert.equal("string",typeof r);var n=dlsym(this._handle,r);if(assert(Buffer.isBuffer(n)),n.isNull())throw Error("Dynamic Symbol Retrieval Error: "+this.error());return n.name=r,n},DynamicLibrary.prototype.error=function(){return debug("dlerror()"),dlerror()};