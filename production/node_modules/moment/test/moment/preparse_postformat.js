var moment=require("../../moment"),symbolMap={1:"!",2:"@",3:"#",4:"$",5:"%",6:"^",7:"&",8:"*",9:"(",0:")"},numberMap={"!":"1","@":"2","#":"3",$:"4","%":"5","^":"6","&":"7","*":"8","(":"9",")":"0"},symbolLang={preparse:function(o){return o.replace(/[!@#$%\^&*()]/g,function(o){return numberMap[o]})},postformat:function(o){return o.replace(/\d/g,function(o){return symbolMap[o]})}};exports.preparse_postformat={setUp:function(o){moment.lang("symbol",symbolLang),o()},tearDown:function(o){moment.lang("en-gb"),o()},transform:function(o){o.expect(3),o.equal(moment.utc("@)!@-)*-@&","YYYY-MM-DD").unix(),1346025600,"preparse string + format"),o.equal(moment.utc("@)!@-)*-@&").unix(),1346025600,"preparse ISO8601 string"),o.equal(moment.unix(1346025600).utc().format("YYYY-MM-DD"),"@)!@-)*-@&","postformat"),o.done()},"transform from":function(o){o.expect(3);var e=moment([2007,1,28]);o.equal(e.from(moment([2007,1,28]).add({s:90}),!0),"@ minutes","postformat should work on moment.fn.from"),o.equal(moment().add("d",6).fromNow(!0),"^ days","postformat should work on moment.fn.fromNow"),o.equal(moment.duration(10,"h").humanize(),"!) hours","postformat should work on moment.duration.fn.humanize"),o.done()},"calendar day":function(o){o.expect(6);var e=moment().hours(2).minutes(0).seconds(0);o.equal(moment(e).calendar(),"Today at @:)) AM","today at the same time"),o.equal(moment(e).add({m:25}).calendar(),"Today at @:@% AM","Now plus 25 min"),o.equal(moment(e).add({h:1}).calendar(),"Today at #:)) AM","Now plus 1 hour"),o.equal(moment(e).add({d:1}).calendar(),"Tomorrow at @:)) AM","tomorrow at the same time"),o.equal(moment(e).subtract({h:1}).calendar(),"Today at !:)) AM","Now minus 1 hour"),o.equal(moment(e).subtract({d:1}).calendar(),"Yesterday at @:)) AM","yesterday at the same time"),o.done()}};