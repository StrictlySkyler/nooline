var moment=null,flags=function(){return moment.apply(null,arguments).parsingFlags()};exports.parsing_flags={"overflow with array":function(e){e.equal(flags([2010,0]).overflow,-1,"month 0 valid"),e.equal(flags([2010,1]).overflow,-1,"month 1 valid"),e.equal(flags([2010,-1]).overflow,1,"month -1 invalid"),e.equal(flags([2100,12]).overflow,1,"month 12 invalid"),e.equal(flags([2010,1,16]).overflow,-1,"date valid"),e.equal(flags([2010,1,-1]).overflow,2,"date -1 invalid"),e.equal(flags([2010,1,0]).overflow,2,"date 0 invalid"),e.equal(flags([2010,1,32]).overflow,2,"date 32 invalid"),e.equal(flags([2012,1,29]).overflow,-1,"date leap year valid"),e.equal(flags([2010,1,29]).overflow,2,"date leap year invalid"),e.equal(flags([2010,1,1,8]).overflow,-1,"hour valid"),e.equal(flags([2010,1,1,0]).overflow,-1,"hour 0 valid"),e.equal(flags([2010,1,1,-1]).overflow,3,"hour -1 invalid"),e.equal(flags([2010,1,1,24]).overflow,3,"hour 24 invalid"),e.equal(flags([2010,1,1,8,15]).overflow,-1,"minute valid"),e.equal(flags([2010,1,1,8,0]).overflow,-1,"minute 0 valid"),e.equal(flags([2010,1,1,8,-1]).overflow,4,"minute -1 invalid"),e.equal(flags([2010,1,1,8,60]).overflow,4,"minute 60 invalid"),e.equal(flags([2010,1,1,8,15,12]).overflow,-1,"second valid"),e.equal(flags([2010,1,1,8,15,0]).overflow,-1,"second 0 valid"),e.equal(flags([2010,1,1,8,15,-1]).overflow,5,"second -1 invalid"),e.equal(flags([2010,1,1,8,15,60]).overflow,5,"second 60 invalid"),e.equal(flags([2010,1,1,8,15,12,345]).overflow,-1,"millisecond valid"),e.equal(flags([2010,1,1,8,15,12,0]).overflow,-1,"millisecond 0 valid"),e.equal(flags([2010,1,1,8,15,12,-1]).overflow,6,"millisecond -1 invalid"),e.equal(flags([2010,1,1,8,15,12,1e3]).overflow,6,"millisecond 1000 invalid"),e.done()},"overflow without format":function(e){e.equal(flags("2001-01","YYYY-MM").overflow,-1,"month 1 valid"),e.equal(flags("2001-12","YYYY-MM").overflow,-1,"month 12 valid"),e.equal(flags("2001-13","YYYY-MM").overflow,1,"month 13 invalid"),e.equal(flags("2010-01-16","YYYY-MM-DD").overflow,-1,"date 16 valid"),e.equal(flags("2010-01-0","YYYY-MM-DD").overflow,2,"date 0 invalid"),e.equal(flags("2010-01-32","YYYY-MM-DD").overflow,2,"date 32 invalid"),e.equal(flags("2012-02-29","YYYY-MM-DD").overflow,-1,"date leap year valid"),e.equal(flags("2010-02-29","YYYY-MM-DD").overflow,2,"date leap year invalid"),e.equal(flags("2010 300","YYYY DDDD").overflow,-1,"day 300 of year valid"),e.equal(flags("2010 365","YYYY DDDD").overflow,-1,"day 365 of year valid"),e.equal(flags("2010 366","YYYY DDDD").overflow,2,"day 366 of year invalid"),e.equal(flags("2012 366","YYYY DDDD").overflow,-1,"day 366 of leap year valid"),e.equal(flags("2012 367","YYYY DDDD").overflow,2,"day 367 of leap year invalid"),e.equal(flags("08","HH").overflow,-1,"hour valid"),e.equal(flags("00","HH").overflow,-1,"hour 0 valid"),e.equal(flags("24","HH").overflow,3,"hour 24 invalid"),e.equal(flags("08:15","HH:mm").overflow,-1,"minute valid"),e.equal(flags("08:00","HH:mm").overflow,-1,"minute 0 valid"),e.equal(flags("08:60","HH:mm").overflow,4,"minute 60 invalid"),e.equal(flags("08:15:12","HH:mm:ss").overflow,-1,"second valid"),e.equal(flags("08:15:00","HH:mm:ss").overflow,-1,"second 0 valid"),e.equal(flags("08:15:60","HH:mm:ss").overflow,5,"second 60 invalid"),e.equal(flags("08:15:12:345","HH:mm:ss:SSSS").overflow,-1,"millisecond valid"),e.equal(flags("08:15:12:000","HH:mm:ss:SSSS").overflow,-1,"millisecond 0 valid"),e.equal(flags("08:15:12:1000","HH:mm:ss:SSSS").overflow,-1,"millisecond 1000 actually valid"),e.done()},"extra tokens":function(e){e.deepEqual(flags("1982-05-25","YYYY-MM-DD").unusedTokens,[],"nothing extra"),e.deepEqual(flags("1982-05","YYYY-MM-DD").unusedTokens,["DD"],"extra formatting token"),e.deepEqual(flags("1982","YYYY-MM-DD").unusedTokens,["MM","DD"],"multiple extra formatting tokens"),e.deepEqual(flags("1982-05","YYYY-MM-").unusedTokens,[],"extra non-formatting token"),e.deepEqual(flags("1982-05-","YYYY-MM-DD").unusedTokens,["DD"],"non-extra non-formatting token"),e.deepEqual(flags("1982 05 1982","YYYY-MM-DD").unusedTokens,[],"different non-formatting token"),e.done()},"extra tokens strict":function(e){e.deepEqual(flags("1982-05-25","YYYY-MM-DD",!0).unusedTokens,[],"nothing extra"),e.deepEqual(flags("1982-05","YYYY-MM-DD",!0).unusedTokens,["-","DD"],"extra formatting token"),e.deepEqual(flags("1982","YYYY-MM-DD",!0).unusedTokens,["-","MM","-","DD"],"multiple extra formatting tokens"),e.deepEqual(flags("1982-05","YYYY-MM-",!0).unusedTokens,["-"],"extra non-formatting token"),e.deepEqual(flags("1982-05-","YYYY-MM-DD",!0).unusedTokens,["DD"],"non-extra non-formatting token"),e.deepEqual(flags("1982 05 1982","YYYY-MM-DD",!0).unusedTokens,["-","-"],"different non-formatting token"),e.done()},"unused input":function(e){e.deepEqual(flags("1982-05-25","YYYY-MM-DD").unusedInput,[],"normal input"),e.deepEqual(flags("1982-05-25 this is more stuff","YYYY-MM-DD").unusedInput,[" this is more stuff"],"trailing nonsense"),e.deepEqual(flags("1982-05-25 09:30","YYYY-MM-DD").unusedInput,[" 09:30"],["trailing legit-looking input"]),e.deepEqual(flags("1982-05-25 some junk","YYYY-MM-DD [some junk]").unusedInput,[],"junk that actually gets matched"),e.deepEqual(flags("stuff at beginning 1982-05-25","YYYY-MM-DD").unusedInput,["stuff at beginning "],"leading junk"),e.deepEqual(flags("junk 1982 more junk 05 yet more junk25","YYYY-MM-DD").unusedInput,["junk "," more junk "," yet more junk"],"interstitial junk"),e.done()},"unused input strict":function(e){e.deepEqual(flags("1982-05-25","YYYY-MM-DD",!0).unusedInput,[],"normal input"),e.deepEqual(flags("1982-05-25 this is more stuff","YYYY-MM-DD",!0).unusedInput,[" this is more stuff"],"trailing nonsense"),e.deepEqual(flags("1982-05-25 09:30","YYYY-MM-DD",!0).unusedInput,[" 09:30"],["trailing legit-looking input"]),e.deepEqual(flags("1982-05-25 some junk","YYYY-MM-DD [some junk]",!0).unusedInput,[],"junk that actually gets matched"),e.deepEqual(flags("stuff at beginning 1982-05-25","YYYY-MM-DD",!0).unusedInput,["stuff at beginning "],"leading junk"),e.deepEqual(flags("junk 1982 more junk 05 yet more junk25","YYYY-MM-DD",!0).unusedInput,["junk "," more junk "," yet more junk"],"interstitial junk"),e.done()},"chars left over":function(e){e.equal(flags("1982-05-25","YYYY-MM-DD").charsLeftOver,0,"normal input"),e.equal(flags("1982-05-25 this is more stuff","YYYY-MM-DD").charsLeftOver," this is more stuff".length,"trailing nonsense"),e.equal(flags("1982-05-25 09:30","YYYY-MM-DD").charsLeftOver," 09:30".length,"trailing legit-looking input"),e.equal(flags("stuff at beginning 1982-05-25","YYYY-MM-DD").charsLeftOver,"stuff at beginning ".length,"leading junk"),e.equal(flags("1982 junk 05 more junk25","YYYY-MM-DD").charsLeftOver,[" junk "," more junk"].join("").length,"interstitial junk"),e.equal(flags("stuff at beginning 1982 junk 05 more junk25","YYYY-MM-DD").charsLeftOver,["stuff at beginning "," junk "," more junk"].join("").length,"leading and interstitial junk"),e.done()},empty:function(e){e.equal(flags("1982-05-25","YYYY-MM-DD").empty,!1,"normal input"),e.equal(flags("nothing here","YYYY-MM-DD").empty,!0,"pure garbage"),e.equal(flags("junk but has the number 2000 in it","YYYY-MM-DD").empty,!1,"only mostly garbage"),e.equal(flags("","YYYY-MM-DD").empty,!0,"empty string"),e.equal(flags("","YYYY-MM-DD").empty,!0,"blank string"),e.done()},"null":function(e){e.equal(flags("1982-05-25","YYYY-MM-DD").nullInput,!1,"normal input"),e.equal(flags(null).nullInput,!0,"just null"),e.equal(flags(null,"YYYY-MM-DD").nullInput,!0,"null with format"),e.done()},"invalid month":function(e){e.equal(flags("1982 May","YYYY MMMM").invalidMonth,null,"normal input"),e.equal(flags("1982 Laser","YYYY MMMM").invalidMonth,"Laser","bad month name"),e.done()},"empty format array":function(e){e.equal(flags("1982 May",["YYYY MMM"]).invalidFormat,!1,"empty format array"),e.equal(flags("1982 May",[]).invalidFormat,!0,"empty format array"),e.done()}};