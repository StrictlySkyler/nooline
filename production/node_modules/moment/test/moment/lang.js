var moment=require("../../moment");exports.lang={"library getter":function(e){var n;e.expect(8),n=moment.lang("en"),e.equal(n,"en","Lang should return en by default"),e.equal(moment.lang(),"en","Lang should return en by default"),moment.lang("fr"),e.equal(moment.lang(),"fr","Lang should return the changed language"),moment.lang("en-gb"),e.equal(moment.lang(),"en-gb","Lang should return the changed language"),moment.lang("en"),e.equal(moment.lang(),"en","Lang should reset"),moment.lang("does-not-exist"),e.equal(moment.lang(),"en","Lang should reset"),moment.lang("EN"),e.equal(moment.lang(),"en","Normalize language key case"),moment.lang("EN_gb"),e.equal(moment.lang(),"en-gb","Normalize language key underscore"),e.done()},"library getter array of langs":function(e){e.equal(moment.lang(["non-existent","fr","also-non-existent"]),"fr","passing an array uses the first valid language"),e.equal(moment.lang(["es","fr","also-non-existent"]),"es","passing an array uses the first valid language"),e.done()},"library getter language substrings":function(e){e.equal(moment.lang("fr-crap"),"fr","use substrings"),e.equal(moment.lang("fr-does-not-exist"),"fr","uses deep substrings"),e.equal(moment.lang("fr-CA-does-not-exist"),"fr-ca","uses deepest substring"),e.done()},"library getter language array and substrings":function(e){e.equal(moment.lang(["en-CH","fr"]),"en","prefer root languages to shallower ones"),e.equal(moment.lang(["en-gb-leeds","en-CA"]),"en-gb","prefer root languages to shallower ones"),e.equal(moment.lang(["en-fake","en-CA"]),"en-ca","prefer alternatives with shared roots"),e.equal(moment.lang(["en-fake","en-fake2","en-ca"]),"en-ca","prefer alternatives with shared roots"),e.equals(moment.lang(["fake-CA","fake-MX","fr"]),"fr","always find something if possible"),e.equals(moment.lang(["fake-CA","fake-MX","fr"]),"fr","always find something if possible"),e.equals(moment.lang(["fake-CA","fake-MX","fr-fake-fake-fake"]),"fr","always find something if possible"),e.equals(moment.lang(["en","en-CA"]),"en","prefer earlier if it works"),e.done()},"library ensure inheritance":function(e){e.expect(2),moment.lang("made-up",{months:"February_March_April_May_June_July_August_September_October_November_December_January".split("_")}),e.equal(moment([2012,5,6]).format("MMMM"),"July","Override some of the configs"),e.equal(moment([2012,5,6]).format("MMM"),"Jun","But not all of them"),e.done()},"library ensure inheritance LT L LL LLL LLLL":function(e){e.expect(5);var n="test-inherit-lt";moment.lang(n,{longDateFormat:{LT:"-[LT]-",L:"-[L]-",LL:"-[LL]-",LLL:"-[LLL]-",LLLL:"-[LLLL]-"},calendar:{sameDay:"[sameDay] LT",nextDay:"[nextDay] L",nextWeek:"[nextWeek] LL",lastDay:"[lastDay] LLL",lastWeek:"[lastWeek] LLLL",sameElse:"L"}}),moment.lang("es"),e.equal(moment().lang(n).calendar(),"sameDay -LT-","Should use instance lang in LT formatting"),e.equal(moment().add("days",1).lang(n).calendar(),"nextDay -L-","Should use instance lang in L formatting"),e.equal(moment().add("days",-1).lang(n).calendar(),"lastDay -LLL-","Should use instance lang in LL formatting"),e.equal(moment().add("days",4).lang(n).calendar(),"nextWeek -LL-","Should use instance lang in LLL formatting"),e.equal(moment().add("days",-4).lang(n).calendar(),"lastWeek -LLLL-","Should use instance lang in LLLL formatting"),e.done()},"library langData":function(e){e.expect(3),moment.lang("en");var n=moment([2e3,0]);e.equal(moment.langData().months(n),"January","no arguments returns global"),e.equal(moment.langData("zh-cn").months(n),"一月","a string returns the language based on key"),e.equal(moment.langData(moment().lang("es")).months(n),"enero","if you pass in a moment it uses the moment's language"),e.done()},"instance lang method":function(e){e.expect(3),moment.lang("en"),e.equal(moment([2012,5,6]).format("MMMM"),"June","Normally default to global"),e.equal(moment([2012,5,6]).lang("es").format("MMMM"),"junio","Use the instance specific language"),e.equal(moment([2012,5,6]).format("MMMM"),"June","Using an instance specific language does not affect other moments"),e.done()},"instance lang method with array":function(e){var n=moment().lang(["non-existent","fr","also-non-existent"]);e.equal(n.lang()._abbr,"fr","passing an array uses the first valid language"),n=moment().lang(["es","fr","also-non-existent"]),e.equal(n.lang()._abbr,"es","passing an array uses the first valid language"),e.done()},"instance getter language substrings":function(e){var n=moment();n.lang("fr-crap"),e.equal(n.lang()._abbr,"fr","use substrings"),n.lang("fr-does-not-exist"),e.equal(n.lang()._abbr,"fr","uses deep substrings"),e.done()},"instance lang persists with manipulation":function(e){e.expect(3),moment.lang("en"),e.equal(moment([2012,5,6]).lang("es").add({days:1}).format("MMMM"),"junio","With addition"),e.equal(moment([2012,5,6]).lang("es").day(0).format("MMMM"),"junio","With day getter"),e.equal(moment([2012,5,6]).lang("es").endOf("day").format("MMMM"),"junio","With endOf"),e.done()},"instance lang persists with cloning":function(e){e.expect(2),moment.lang("en");var n=moment([2012,5,6]).lang("es"),a=n.clone();moment(n),e.equal(a.format("MMMM"),"junio","using moment.fn.clone()"),e.equal(a.format("MMMM"),"junio","using moment()"),e.done()},"duration lang method":function(e){e.expect(3),moment.lang("en"),e.equal(moment.duration({seconds:44}).humanize(),"a few seconds","Normally default to global"),e.equal(moment.duration({seconds:44}).lang("es").humanize(),"unos segundos","Use the instance specific language"),e.equal(moment.duration({seconds:44}).humanize(),"a few seconds","Using an instance specific language does not affect other durations"),e.done()},"duration lang persists with cloning":function(e){e.expect(1),moment.lang("en");var n=moment.duration({seconds:44}).lang("es"),a=moment.duration(n);e.equal(a.humanize(),"unos segundos","using moment.duration()"),e.done()},"instance lang used with from":function(e){e.expect(2),moment.lang("en");var n=moment([2012,5,6]).lang("es"),a=moment([2012,5,7]);e.equal(n.from(a),"hace un día","preserve language of first moment"),e.equal(a.from(n),"in a day","do not preserve language of second moment"),e.done()},"month name callback function":function(e){function n(e,n){return/test/.test(n)?"test":1===e.date()?"date":"default"}e.expect(3),moment.lang("made-up-2",{months:n,monthsShort:n,weekdays:n,weekdaysShort:n,weekdaysMin:n}),e.equal(moment().format("[test] dd ddd dddd MMM MMMM"),"test test test test test test","format month name function should be able to access the format string"),e.equal(moment([2011,0,1]).format("dd ddd dddd MMM MMMM"),"date date date date date","format month name function should be able to access the moment object"),e.equal(moment([2011,0,2]).format("dd ddd dddd MMM MMMM"),"default default default default default","format month name function should be able to access the moment object"),e.done()},"changing parts of a language config":function(e){e.expect(2),moment.lang("partial-lang",{months:"a b c d e f g h i j k l".split(" ")}),e.equal(moment([2011,0,1]).format("MMMM"),"a","should be able to set language values when creating the language"),moment.lang("partial-lang",{monthsShort:"A B C D E F G H I J K L".split(" ")}),e.equal(moment([2011,0,1]).format("MMMM MMM"),"a A","should be able to set language values after creating the language"),e.done()},"start/endOf week feature for first-day-is-monday langs":function(e){e.expect(2),moment.lang("monday-lang",{week:{dow:1}}),moment.lang("monday-lang"),e.equal(moment([2013,0,1]).startOf("week").day(),1,"for lang monday-lang first day of the week should be monday"),e.equal(moment([2013,0,1]).endOf("week").day(),0,"for lang monday-lang last day of the week should be sunday"),e.done()},"meridiem parsing":function(e){e.expect(2),moment.lang("meridiem-parsing",{meridiemParse:/[bd]/i,isPM:function(e){return"b"===e}}),moment.lang("meridiem-parsing"),e.equal(moment("2012-01-01 3b","YYYY-MM-DD ha").hour(),15,"Custom parsing of meridiem should work"),e.equal(moment("2012-01-01 3d","YYYY-MM-DD ha").hour(),3,"Custom parsing of meridiem should work"),e.done()},"invalid date formatting":function(e){moment.lang("has-invalid",{invalidDate:"KHAAAAAAAAAAAN!"}),e.equal(moment.invalid().format(),"KHAAAAAAAAAAAN!"),e.equal(moment.invalid().format("YYYY-MM-DD"),"KHAAAAAAAAAAAN!"),e.done()},"return lang name":function(e){e.expect(1);var n=moment.lang("return-this",{});e.equal(n,"return-this","returns the language configured"),e.done()}};