var moment=require("../../moment"),equalMoment=function(e,t,m,o){e.equal(t.valueOf(),m.valueOf(),o)};exports.min_max={setUp:function(e){moment.lang("en"),e()},tearDown:function(e){moment.lang("en"),e()},min:function(e){e.expect(6);var t=moment(),m=t.clone().add(1,"month"),o=t.clone().subtract(1,"month");equalMoment(e,o.min(t),t,"A past date with the minimum of now should be now"),equalMoment(e,o.min(m),m,"A past date with the minimum of the future should be the future date"),equalMoment(e,m.min(t),m,"A future date with the minimum of now should be the future"),equalMoment(e,m.min(o),m,"A future date with the minimum of the past should be the future"),equalMoment(e,t.min(o),t,"Now with the minimum of the past should be now"),equalMoment(e,t.min(m),m,"Now with the minimum of the future should be the future"),e.done()},max:function(e){e.expect(6);var t=moment(),m=t.clone().add(1,"month"),o=t.clone().subtract(1,"month");equalMoment(e,o.max(t),o,"A past date with the maximum of now should be the past"),equalMoment(e,o.max(m),o,"A past date with the maximum of the future should be the past"),equalMoment(e,m.max(t),t,"A future date with the maximum of now should be now"),equalMoment(e,m.max(o),o,"A future date with the maximum of the past should be the past"),equalMoment(e,t.max(o),o,"Now with the maximum of the past should be the past"),equalMoment(e,t.max(m),t,"Now with the maximum of the future should be now"),e.done()}};