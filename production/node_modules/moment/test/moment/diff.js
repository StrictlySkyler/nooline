function equal(e,f,d,o){e.ok(Math.abs(f-d)<1e-8,"("+f+" === "+d+") "+o)}function dstForYear(e){for(var f,d=moment([e]),o=moment([e+1]),n=d.clone();o>n;)if(f=n.clone(),n.add(24,"hour"),f.zone()!==n.zone()){o=n.clone(),n=f.clone();break}for(;o>n;)if(f=n.clone(),n.add(1,"hour"),f.zone()!==n.zone())return{moment:f,diff:(n.zone()-f.zone())/60}}var moment=require("../../moment");exports.diff={diff:function(e){e.expect(5),e.equal(moment(1e3).diff(0),1e3,"1 second - 0 = 1000"),e.equal(moment(1e3).diff(500),500,"1 second - 0.5 seconds = 500"),e.equal(moment(0).diff(1e3),-1e3,"0 - 1 second = -1000"),e.equal(moment(new Date(1e3)).diff(1e3),0,"1 second - 1 second = 0");var f=new Date,d=new Date(+f);f.setHours(f.getHours()+1),e.equal(moment(f).diff(d),36e5,"1 hour from now = 3600000"),e.done()},"diff key after":function(e){e.expect(10),e.equal(moment([2010]).diff([2011],"years"),-1,"year diff"),e.equal(moment([2010]).diff([2010,2],"months"),-2,"month diff"),e.equal(moment([2010]).diff([2010,0,7],"weeks"),0,"week diff"),e.equal(moment([2010]).diff([2010,0,8],"weeks"),-1,"week diff"),e.equal(moment([2010]).diff([2010,0,21],"weeks"),-2,"week diff"),e.equal(moment([2010]).diff([2010,0,22],"weeks"),-3,"week diff"),e.equal(moment([2010]).diff([2010,0,4],"days"),-3,"day diff"),e.equal(moment([2010]).diff([2010,0,1,4],"hours"),-4,"hour diff"),e.equal(moment([2010]).diff([2010,0,1,0,5],"minutes"),-5,"minute diff"),e.equal(moment([2010]).diff([2010,0,1,0,0,6],"seconds"),-6,"second diff"),e.done()},"diff key before":function(e){e.expect(10),e.equal(moment([2011]).diff([2010],"years"),1,"year diff"),e.equal(moment([2010,2]).diff([2010],"months"),2,"month diff"),e.equal(moment([2010,0,4]).diff([2010],"days"),3,"day diff"),e.equal(moment([2010,0,7]).diff([2010],"weeks"),0,"week diff"),e.equal(moment([2010,0,8]).diff([2010],"weeks"),1,"week diff"),e.equal(moment([2010,0,21]).diff([2010],"weeks"),2,"week diff"),e.equal(moment([2010,0,22]).diff([2010],"weeks"),3,"week diff"),e.equal(moment([2010,0,1,4]).diff([2010],"hours"),4,"hour diff"),e.equal(moment([2010,0,1,0,5]).diff([2010],"minutes"),5,"minute diff"),e.equal(moment([2010,0,1,0,0,6]).diff([2010],"seconds"),6,"second diff"),e.done()},"diff key before singular":function(e){e.expect(10),e.equal(moment([2011]).diff([2010],"year"),1,"year diff singular"),e.equal(moment([2010,2]).diff([2010],"month"),2,"month diff singular"),e.equal(moment([2010,0,4]).diff([2010],"day"),3,"day diff singular"),e.equal(moment([2010,0,7]).diff([2010],"week"),0,"week diff singular"),e.equal(moment([2010,0,8]).diff([2010],"week"),1,"week diff singular"),e.equal(moment([2010,0,21]).diff([2010],"week"),2,"week diff singular"),e.equal(moment([2010,0,22]).diff([2010],"week"),3,"week diff singular"),e.equal(moment([2010,0,1,4]).diff([2010],"hour"),4,"hour diff singular"),e.equal(moment([2010,0,1,0,5]).diff([2010],"minute"),5,"minute diff singular"),e.equal(moment([2010,0,1,0,0,6]).diff([2010],"second"),6,"second diff singular"),e.done()},"diff key before abbreviated":function(e){e.expect(10),e.equal(moment([2011]).diff([2010],"y"),1,"year diff abbreviated"),e.equal(moment([2010,2]).diff([2010],"M"),2,"month diff abbreviated"),e.equal(moment([2010,0,4]).diff([2010],"d"),3,"day diff abbreviated"),e.equal(moment([2010,0,7]).diff([2010],"w"),0,"week diff abbreviated"),e.equal(moment([2010,0,8]).diff([2010],"w"),1,"week diff abbreviated"),e.equal(moment([2010,0,21]).diff([2010],"w"),2,"week diff abbreviated"),e.equal(moment([2010,0,22]).diff([2010],"w"),3,"week diff abbreviated"),e.equal(moment([2010,0,1,4]).diff([2010],"h"),4,"hour diff abbreviated"),e.equal(moment([2010,0,1,0,5]).diff([2010],"m"),5,"minute diff abbreviated"),e.equal(moment([2010,0,1,0,0,6]).diff([2010],"s"),6,"second diff abbreviated"),e.done()},"diff month":function(e){e.expect(1),e.equal(moment([2011,0,31]).diff([2011,2,1],"months"),-1,"month diff"),e.done()},"diff across DST":function(e){var f,d,o,n=dstForYear(2012);return n?(e.expect(16),f=n.moment,d=f.clone().utc().add(12,"hours").local(),o=(f.daysInMonth()+d.daysInMonth())/2,equal(e,d.diff(f,"ms",!0),432e5,"ms diff across DST"),equal(e,d.diff(f,"s",!0),43200,"second diff across DST"),equal(e,d.diff(f,"m",!0),720,"minute diff across DST"),equal(e,d.diff(f,"h",!0),12,"hour diff across DST"),equal(e,d.diff(f,"d",!0),(12-n.diff)/24,"day diff across DST"),equal(e,d.diff(f,"w",!0),(12-n.diff)/24/7,"week diff across DST"),equal(e,d.diff(f,"M",!0),(12-n.diff)/24/o,"month diff across DST"),equal(e,d.diff(f,"y",!0),(12-n.diff)/24/o/12,"year diff across DST"),f=n.moment,d=f.clone().utc().add(12+n.diff,"hours").local(),o=(f.daysInMonth()+d.daysInMonth())/2,equal(e,d.diff(f,"ms",!0),1e3*60*60*(12+n.diff),"ms diff across DST"),equal(e,d.diff(f,"s",!0),60*60*(12+n.diff),"second diff across DST"),equal(e,d.diff(f,"m",!0),60*(12+n.diff),"minute diff across DST"),equal(e,d.diff(f,"h",!0),12+n.diff,"hour diff across DST"),equal(e,d.diff(f,"d",!0),.5,"day diff across DST"),equal(e,d.diff(f,"w",!0),.5/7,"week diff across DST"),equal(e,d.diff(f,"M",!0),.5/o,"month diff across DST"),equal(e,d.diff(f,"y",!0),.5/o/12,"year diff across DST"),e.done(),void 0):(console.log("No DST?"),e.done(),void 0)},"diff overflow":function(e){e.expect(4),e.equal(moment([2011]).diff([2010],"months"),12,"month diff"),e.equal(moment([2010,0,2]).diff([2010],"hours"),24,"hour diff"),e.equal(moment([2010,0,1,2]).diff([2010],"minutes"),120,"minute diff"),e.equal(moment([2010,0,1,0,4]).diff([2010],"seconds"),240,"second diff"),e.done()},"diff between utc and local":function(e){e.expect(7),e.equal(moment([2012]).utc().diff([2011],"years"),1,"year diff"),e.equal(moment([2010,2,2]).utc().diff([2010,0,2],"months"),2,"month diff"),e.equal(moment([2010,0,4]).utc().diff([2010],"days"),3,"day diff"),e.equal(moment([2010,0,22]).utc().diff([2010],"weeks"),3,"week diff"),e.equal(moment([2010,0,1,4]).utc().diff([2010],"hours"),4,"hour diff"),e.equal(moment([2010,0,1,0,5]).utc().diff([2010],"minutes"),5,"minute diff"),e.equal(moment([2010,0,1,0,0,6]).utc().diff([2010],"seconds"),6,"second diff"),e.done()},"diff floored":function(e){e.expect(7),e.equal(moment([2010,0,1,23]).diff([2010],"day"),0,"23 hours = 0 days"),e.equal(moment([2010,0,1,23,59]).diff([2010],"day"),0,"23:59 hours = 0 days"),e.equal(moment([2010,0,1,24]).diff([2010],"day"),1,"24 hours = 1 day"),e.equal(moment([2010,0,2]).diff([2011,0,1],"year"),0,"year rounded down"),e.equal(moment([2011,0,1]).diff([2010,0,2],"year"),0,"year rounded down"),e.equal(moment([2010,0,2]).diff([2011,0,2],"year"),-1,"year rounded down"),e.equal(moment([2011,0,2]).diff([2010,0,2],"year"),1,"year rounded down"),e.done()},"year diffs include dates":function(e){e.expect(1),e.ok(moment([2012,1,19]).diff(moment([2002,1,20]),"years",!0)<10,"year diff should include date of month"),e.done()},"month diffs":function(e){e.expect(8),equal(e,moment([2012,0,1]).diff([2012,1,1],"months",!0),-1,"Jan 1 to Feb 1 should be 1 month"),equal(e,moment([2012,0,1]).diff([2012,0,1,12],"months",!0),-.5/31,"Jan 1 to Jan 1 noon should be 0.5 / 31 months"),equal(e,moment([2012,0,15]).diff([2012,1,15],"months",!0),-1,"Jan 15 to Feb 15 should be 1 month"),equal(e,moment([2012,0,28]).diff([2012,1,28],"months",!0),-1,"Jan 28 to Feb 28 should be 1 month"),equal(e,moment([2012,0,31]).diff([2012,1,29],"months",!0),-1+2/30,"Jan 31 to Feb 29 should be 1 - (2 / 30) months"),equal(e,moment([2012,0,31]).diff([2012,2,1],"months",!0),-2+30/31,"Jan 31 to Mar 1 should be 2 - (30 / 31) months"),equal(e,moment([2012,0,31]).diff([2012,2,1,12],"months",!0),-2+29.5/31,"Jan 31 to Mar 1 should be 2 - (29.5 / 31) months"),equal(e,moment([2012,0,1]).diff([2012,0,31],"months",!0),-(30/31),"Jan 1 to Jan 31 should be 30 / 31 months"),e.done()},"year diffs":function(e){e.expect(10),equal(e,moment([2012,0,1]).diff([2013,0,1],"years",!0),-1,"Jan 1 2012 to Jan 1 2013 should be 1 year"),equal(e,moment([2012,1,28]).diff([2013,1,28],"years",!0),-1,"Feb 28 2012 to Feb 28 2013 should be 1 year"),equal(e,moment([2012,2,1]).diff([2013,2,1],"years",!0),-1,"Mar 1 2012 to Mar 1 2013 should be 1 year"),equal(e,moment([2012,11,1]).diff([2013,11,1],"years",!0),-1,"Dec 1 2012 to Dec 1 2013 should be 1 year"),equal(e,moment([2012,11,31]).diff([2013,11,31],"years",!0),-1,"Dec 31 2012 to Dec 31 2013 should be 1 year"),equal(e,moment([2012,0,1]).diff([2013,6,1],"years",!0),-1.5,"Jan 1 2012 to Jul 1 2013 should be 1.5 years"),equal(e,moment([2012,0,31]).diff([2013,6,31],"years",!0),-1.5,"Jan 31 2012 to Jul 31 2013 should be 1.5 years"),equal(e,moment([2012,0,1]).diff([2013,0,1,12],"years",!0),-1-.5/31/12,"Jan 1 2012 to Jan 1 2013 noon should be 1+(0.5 / 31) / 12 years"),equal(e,moment([2012,0,1]).diff([2013,6,1,12],"years",!0),-1.5-.5/31/12,"Jan 1 2012 to Jul 1 2013 noon should be 1.5+(0.5 / 31) / 12 years"),equal(e,moment([2012,1,29]).diff([2013,1,28],"years",!0),-1+1/28.5/12,"Feb 29 2012 to Feb 28 2013 should be 1-(1 / 28.5) / 12 years"),e.done()}};