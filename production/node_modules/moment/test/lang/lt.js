var moment=require("../../moment");exports["lang:lt"]={setUp:function(e){moment.lang("lt"),e()},tearDown:function(e){moment.lang("en"),e()},parse:function(e){function o(o,a,m){e.equal(moment(o,a).month(),m,o+" should be month "+(m+1))}e.expect(96);var a,m="sausio sau_vasario vas_kovo kov_balandžio bal_gegužės geg_biržėlio bir_liepos lie_rugpjūčio rgp_rugsėjo rgs_spalio spa_lapkričio lap_gruodžio grd".split("_");for(a=0;12>a;a++)m[a]=m[a].split(" "),o(m[a][0],"MMM",a),o(m[a][1],"MMM",a),o(m[a][0],"MMMM",a),o(m[a][1],"MMMM",a),o(m[a][0].toLocaleLowerCase(),"MMMM",a),o(m[a][1].toLocaleLowerCase(),"MMMM",a),o(m[a][0].toLocaleUpperCase(),"MMMM",a),o(m[a][1].toLocaleUpperCase(),"MMMM",a);e.done()},format:function(e){e.expect(22);var o,a=[["dddd, Do MMMM YYYY, h:mm:ss a","sekmadienis, 14-oji vasario 2010, 3:25:50 pm"],["ddd, hA","Sek, 3PM"],["M Mo MM MMMM MMM","2 2-oji 02 vasario vas"],["YYYY YY","2010 10"],["D Do DD","14 14-oji 14"],["d do dddd ddd dd","0 0-oji sekmadienis Sek S"],["DDD DDDo DDDD","45 45-oji 045"],["w wo ww","6 6-oji 06"],["h hh","3 03"],["H HH","15 15"],["m mm","25 25"],["s ss","50 50"],["a A","pm PM"],["DDDo [metų diena]","45-oji metų diena"],["L","2010-02-14"],["LL","2010 m. vasario 14 d."],["LLL","2010 m. vasario 14 d., 15:25 val."],["LLLL","2010 m. vasario 14 d., sekmadienis, 15:25 val."],["l","2010-02-14"],["ll","2010 m. vasario 14 d."],["lll","2010 m. vasario 14 d., 15:25 val."],["llll","2010 m. vasario 14 d., Sek, 15:25 val."]],m=moment(new Date(2010,1,14,15,25,50,125));for(o=0;o<a.length;o++)e.equal(m.format(a[o][0]),a[o][1],a[o][0]+" ---> "+a[o][1]);e.done()},"format ordinal":function(e){e.expect(31),e.equal(moment([2011,0,1]).format("DDDo"),"1-oji","1-oji"),e.equal(moment([2011,0,2]).format("DDDo"),"2-oji","2-oji"),e.equal(moment([2011,0,3]).format("DDDo"),"3-oji","3-oji"),e.equal(moment([2011,0,4]).format("DDDo"),"4-oji","4-oji"),e.equal(moment([2011,0,5]).format("DDDo"),"5-oji","5-oji"),e.equal(moment([2011,0,6]).format("DDDo"),"6-oji","6-oji"),e.equal(moment([2011,0,7]).format("DDDo"),"7-oji","7-oji"),e.equal(moment([2011,0,8]).format("DDDo"),"8-oji","8-oji"),e.equal(moment([2011,0,9]).format("DDDo"),"9-oji","9-oji"),e.equal(moment([2011,0,10]).format("DDDo"),"10-oji","10-oji"),e.equal(moment([2011,0,11]).format("DDDo"),"11-oji","11-oji"),e.equal(moment([2011,0,12]).format("DDDo"),"12-oji","12-oji"),e.equal(moment([2011,0,13]).format("DDDo"),"13-oji","13-oji"),e.equal(moment([2011,0,14]).format("DDDo"),"14-oji","14-oji"),e.equal(moment([2011,0,15]).format("DDDo"),"15-oji","15-oji"),e.equal(moment([2011,0,16]).format("DDDo"),"16-oji","16-oji"),e.equal(moment([2011,0,17]).format("DDDo"),"17-oji","17-oji"),e.equal(moment([2011,0,18]).format("DDDo"),"18-oji","18-oji"),e.equal(moment([2011,0,19]).format("DDDo"),"19-oji","19-oji"),e.equal(moment([2011,0,20]).format("DDDo"),"20-oji","20-oji"),e.equal(moment([2011,0,21]).format("DDDo"),"21-oji","21-oji"),e.equal(moment([2011,0,22]).format("DDDo"),"22-oji","22-oji"),e.equal(moment([2011,0,23]).format("DDDo"),"23-oji","23-oji"),e.equal(moment([2011,0,24]).format("DDDo"),"24-oji","24-oji"),e.equal(moment([2011,0,25]).format("DDDo"),"25-oji","25-oji"),e.equal(moment([2011,0,26]).format("DDDo"),"26-oji","26-oji"),e.equal(moment([2011,0,27]).format("DDDo"),"27-oji","27-oji"),e.equal(moment([2011,0,28]).format("DDDo"),"28-oji","28-oji"),e.equal(moment([2011,0,29]).format("DDDo"),"29-oji","29-oji"),e.equal(moment([2011,0,30]).format("DDDo"),"30-oji","30-oji"),e.equal(moment([2011,0,31]).format("DDDo"),"31-oji","31-oji"),e.done()},"format month":function(e){e.expect(12);var o,a="sausio sau_vasario vas_kovo kov_balandžio bal_gegužės geg_biržėlio bir_liepos lie_rugpjūčio rgp_rugsėjo rgs_spalio spa_lapkričio lap_gruodžio grd".split("_");for(o=0;o<a.length;o++)e.equal(moment([2011,o,1]).format("MMMM MMM"),a[o],a[o]);e.done()},"format week":function(e){e.expect(7);var o,a="sekmadienis Sek S_pirmadienis Pir P_antradienis Ant A_trečiadienis Tre T_ketvirtadienis Ket K_penktadienis Pen Pn_šeštadienis Šeš Š".split("_");for(o=0;o<a.length;o++)e.equal(moment([2011,0,2+o]).format("dddd ddd dd"),a[o],a[o]);e.done()},from:function(e){e.expect(37);var o=moment([2007,1,28]);e.equal(o.from(moment([2007,1,28]).add({s:44}),!0),"kelios sekundės","44 seconds = seconds"),e.equal(o.from(moment([2007,1,28]).add({s:45}),!0),"minutė","45 seconds = a minute"),e.equal(o.from(moment([2007,1,28]).add({s:89}),!0),"minutė","89 seconds = a minute"),e.equal(o.from(moment([2007,1,28]).add({s:90}),!0),"2 minutės","90 seconds = 2 minutes"),e.equal(o.from(moment([2007,1,28]).add({m:10}),!0),"10 minučių","10 minutes = 10 minutes"),e.equal(o.from(moment([2007,1,28]).add({m:11}),!0),"11 minučių","11 minutes = 11 minutes"),e.equal(o.from(moment([2007,1,28]).add({m:19}),!0),"19 minučių","19 minutes = 19 minutes"),e.equal(o.from(moment([2007,1,28]).add({m:20}),!0),"20 minučių","20 minutes = 20 minutes"),e.equal(o.from(moment([2007,1,28]).add({m:44}),!0),"44 minutės","44 minutes = 44 minutes"),e.equal(o.from(moment([2007,1,28]).add({m:45}),!0),"valanda","45 minutes = an hour"),e.equal(o.from(moment([2007,1,28]).add({m:89}),!0),"valanda","89 minutes = an hour"),e.equal(o.from(moment([2007,1,28]).add({m:90}),!0),"2 valandos","90 minutes = 2 hours"),e.equal(o.from(moment([2007,1,28]).add({h:5}),!0),"5 valandos","5 hours = 5 hours"),e.equal(o.from(moment([2007,1,28]).add({h:10}),!0),"10 valandų","10 hours = 10 hours"),e.equal(o.from(moment([2007,1,28]).add({h:21}),!0),"21 valandos","21 hours = 21 hours"),e.equal(o.from(moment([2007,1,28]).add({h:22}),!0),"diena","22 hours = a day"),e.equal(o.from(moment([2007,1,28]).add({h:35}),!0),"diena","35 hours = a day"),e.equal(o.from(moment([2007,1,28]).add({h:36}),!0),"2 dienos","36 hours = 2 days"),e.equal(o.from(moment([2007,1,28]).add({d:1}),!0),"diena","1 day = a day"),e.equal(o.from(moment([2007,1,28]).add({d:5}),!0),"5 dienos","5 days = 5 days"),e.equal(o.from(moment([2007,1,28]).add({d:10}),!0),"10 dienų","10 days = 10 days"),e.equal(o.from(moment([2007,1,28]).add({d:25}),!0),"25 dienos","25 days = 25 days"),e.equal(o.from(moment([2007,1,28]).add({d:26}),!0),"mėnuo","26 days = a month"),e.equal(o.from(moment([2007,1,28]).add({d:30}),!0),"mėnuo","30 days = a month"),e.equal(o.from(moment([2007,1,28]).add({d:45}),!0),"mėnuo","45 days = a month"),e.equal(o.from(moment([2007,1,28]).add({d:46}),!0),"2 mėnesiai","46 days = 2 months"),e.equal(o.from(moment([2007,1,28]).add({d:74}),!0),"2 mėnesiai","75 days = 2 months"),e.equal(o.from(moment([2007,1,28]).add({d:76}),!0),"3 mėnesiai","76 days = 3 months"),e.equal(o.from(moment([2007,1,28]).add({M:1}),!0),"mėnuo","1 month = a month"),e.equal(o.from(moment([2007,1,28]).add({M:5}),!0),"5 mėnesiai","5 months = 5 months"),e.equal(o.from(moment([2007,1,28]).add({M:10}),!0),"10 mėnesių","10 months = 10 months"),e.equal(o.from(moment([2007,1,28]).add({d:344}),!0),"11 mėnesių","344 days = 11 months"),e.equal(o.from(moment([2007,1,28]).add({d:345}),!0),"metai","345 days = a year"),e.equal(o.from(moment([2007,1,28]).add({d:547}),!0),"metai","547 days = a year"),e.equal(o.from(moment([2007,1,28]).add({d:548}),!0),"2 metai","548 days = 2 years"),e.equal(o.from(moment([2007,1,28]).add({y:1}),!0),"metai","1 year = a year"),e.equal(o.from(moment([2007,1,28]).add({y:5}),!0),"5 metai","5 years = 5 years"),e.done()},suffix:function(e){e.expect(2),e.equal(moment(3e4).from(0),"po kelių sekundžių","prefix"),e.equal(moment(0).from(3e4),"prieš kelias sekundes","suffix"),e.done()},"now from now":function(e){e.expect(1),e.equal(moment().fromNow(),"prieš kelias sekundes","now from now should display as in the past"),e.done()},fromNow:function(e){e.expect(2),e.equal(moment().add({s:30}).fromNow(),"po kelių sekundžių","in seconds"),e.equal(moment().add({d:5}).fromNow(),"po 5 dienų","in 5 days"),e.done()},"calendar day":function(e){e.expect(6);var o=moment().hours(2).minutes(0).seconds(0);e.equal(moment(o).calendar(),"Šiandien 02:00","today at the same time"),e.equal(moment(o).add({m:25}).calendar(),"Šiandien 02:25","Now plus 25 min"),e.equal(moment(o).add({h:1}).calendar(),"Šiandien 03:00","Now plus 1 hour"),e.equal(moment(o).add({d:1}).calendar(),"Rytoj 02:00","tomorrow at the same time"),e.equal(moment(o).subtract({h:1}).calendar(),"Šiandien 01:00","Now minus 1 hour"),e.equal(moment(o).subtract({d:1}).calendar(),"Vakar 02:00","yesterday at the same time"),e.done()},"calendar next week":function(e){e.expect(15);var o,a;for(o=2;7>o;o++)a=moment().add({d:o}),e.equal(a.calendar(),a.format("dddd LT"),"Today + "+o+" days current time"),a.hours(0).minutes(0).seconds(0).milliseconds(0),e.equal(a.calendar(),a.format("dddd LT"),"Today + "+o+" days beginning of day"),a.hours(23).minutes(59).seconds(59).milliseconds(999),e.equal(a.calendar(),a.format("dddd LT"),"Today + "+o+" days end of day");e.done()},"calendar last week":function(e){e.expect(15);var o,a;for(o=2;7>o;o++)a=moment().subtract({d:o}),e.equal(a.calendar(),a.format("[Praėjusį] dddd LT"),"Today - "+o+" days current time"),a.hours(0).minutes(0).seconds(0).milliseconds(0),e.equal(a.calendar(),a.format("[Praėjusį] dddd LT"),"Today - "+o+" days beginning of day"),a.hours(23).minutes(59).seconds(59).milliseconds(999),e.equal(a.calendar(),a.format("[Praėjusį] dddd LT"),"Today - "+o+" days end of day");e.done()},"calendar all else":function(e){e.expect(4);var o=moment().subtract({w:1}),a=moment().add({w:1});e.equal(o.calendar(),o.format("L"),"1 week ago"),e.equal(a.calendar(),a.format("L"),"in 1 week"),o=moment().subtract({w:2}),a=moment().add({w:2}),e.equal(o.calendar(),o.format("L"),"2 weeks ago"),e.equal(a.calendar(),a.format("L"),"in 2 weeks"),e.done()},"weeks year starting sunday":function(e){e.expect(5),e.equal(moment([2012,0,1]).week(),52,"Jan  1 2012 should be week 52"),e.equal(moment([2012,0,2]).week(),1,"Jan  2 2012 should be week 1"),e.equal(moment([2012,0,8]).week(),1,"Jan  8 2012 should be week 1"),e.equal(moment([2012,0,9]).week(),2,"Jan  9 2012 should be week 2"),e.equal(moment([2012,0,15]).week(),2,"Jan 15 2012 should be week 2"),e.done()},"weeks year starting monday":function(e){e.expect(5),e.equal(moment([2007,0,1]).week(),1,"Jan  1 2007 should be week 1"),e.equal(moment([2007,0,7]).week(),1,"Jan  7 2007 should be week 1"),e.equal(moment([2007,0,8]).week(),2,"Jan  8 2007 should be week 2"),e.equal(moment([2007,0,14]).week(),2,"Jan 14 2007 should be week 2"),e.equal(moment([2007,0,15]).week(),3,"Jan 15 2007 should be week 3"),e.done()},"weeks year starting tuesday":function(e){e.expect(6),e.equal(moment([2007,11,31]).week(),1,"Dec 31 2007 should be week 1"),e.equal(moment([2008,0,1]).week(),1,"Jan  1 2008 should be week 1"),e.equal(moment([2008,0,6]).week(),1,"Jan  6 2008 should be week 1"),e.equal(moment([2008,0,7]).week(),2,"Jan  7 2008 should be week 2"),e.equal(moment([2008,0,13]).week(),2,"Jan 13 2008 should be week 2"),e.equal(moment([2008,0,14]).week(),3,"Jan 14 2008 should be week 3"),e.done()},"weeks year starting wednesday":function(e){e.expect(6),e.equal(moment([2002,11,30]).week(),1,"Dec 30 2002 should be week 1"),e.equal(moment([2003,0,1]).week(),1,"Jan  1 2003 should be week 1"),e.equal(moment([2003,0,5]).week(),1,"Jan  5 2003 should be week 1"),e.equal(moment([2003,0,6]).week(),2,"Jan  6 2003 should be week 2"),e.equal(moment([2003,0,12]).week(),2,"Jan 12 2003 should be week 2"),e.equal(moment([2003,0,13]).week(),3,"Jan 13 2003 should be week 3"),e.done()},"weeks year starting thursday":function(e){e.expect(6),e.equal(moment([2008,11,29]).week(),1,"Dec 29 2008 should be week 1"),e.equal(moment([2009,0,1]).week(),1,"Jan  1 2009 should be week 1"),e.equal(moment([2009,0,4]).week(),1,"Jan  4 2009 should be week 1"),e.equal(moment([2009,0,5]).week(),2,"Jan  5 2009 should be week 2"),e.equal(moment([2009,0,11]).week(),2,"Jan 11 2009 should be week 2"),e.equal(moment([2009,0,13]).week(),3,"Jan 12 2009 should be week 3"),e.done()},"weeks year starting friday":function(e){e.expect(6),e.equal(moment([2009,11,28]).week(),53,"Dec 28 2009 should be week 53"),e.equal(moment([2010,0,1]).week(),53,"Jan  1 2010 should be week 53"),e.equal(moment([2010,0,3]).week(),53,"Jan  3 2010 should be week 53"),e.equal(moment([2010,0,4]).week(),1,"Jan  4 2010 should be week 1"),e.equal(moment([2010,0,10]).week(),1,"Jan 10 2010 should be week 1"),e.equal(moment([2010,0,11]).week(),2,"Jan 11 2010 should be week 2"),e.done()},"weeks year starting saturday":function(e){e.expect(6),e.equal(moment([2010,11,27]).week(),52,"Dec 27 2010 should be week 52"),e.equal(moment([2011,0,1]).week(),52,"Jan  1 2011 should be week 52"),e.equal(moment([2011,0,2]).week(),52,"Jan  2 2011 should be week 52"),e.equal(moment([2011,0,3]).week(),1,"Jan  3 2011 should be week 1"),e.equal(moment([2011,0,9]).week(),1,"Jan  9 2011 should be week 1"),e.equal(moment([2011,0,10]).week(),2,"Jan 10 2011 should be week 2"),e.done()},"weeks year starting sunday formatted":function(e){e.expect(5),e.equal(moment([2012,0,1]).format("w ww wo"),"52 52 52-oji","Jan  1 2012 should be week 52"),e.equal(moment([2012,0,2]).format("w ww wo"),"1 01 1-oji","Jan  2 2012 should be week 1"),e.equal(moment([2012,0,8]).format("w ww wo"),"1 01 1-oji","Jan  8 2012 should be week 1"),e.equal(moment([2012,0,9]).format("w ww wo"),"2 02 2-oji","Jan  9 2012 should be week 2"),e.equal(moment([2012,0,15]).format("w ww wo"),"2 02 2-oji","Jan 15 2012 should be week 2"),e.done()},"returns the name of the language":function(e){e.expect(1),e.equal(null,"lt","module should export lt"),e.done()}};