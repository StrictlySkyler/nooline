// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function runTest(e,n,t){function o(){for(a=!0;a&&i-->0;){var e=t();f.push(e),console.log("old.emit",i,a),s.emit("data",e),console.log("after emit",i,a)}0>=i&&(c=!0,console.log("old end",i,a),s.emit("end"))}function r(){assert(l),assert(c),assert.deepEqual(m,f)}var s,u,l,a,i,c,f,d,m;testRuns++,s=new EE,u=new Readable({highWaterMark:e,objectMode:n}),assert.equal(u,u.wrap(s)),l=!1,u.on("end",function(){l=!0}),s.pause=function(){console.error("old.pause()"),s.emit("pause"),a=!1},s.resume=function(){console.error("old.resume()"),s.emit("resume"),o()},i=10,c=!1,f=[],d=new Writable({highWaterMark:2*e,objectMode:n}),m=[],d._write=function(e,n,t){console.log("_write",e),m.push(e),setTimeout(t)},d.on("finish",function(){completedRuns++,r()}),u.pipe(d),o()}var common=null,assert=null,Readable=null,Writable=null,EE=null.EventEmitter,testRuns=0,completedRuns=0;runTest(100,!1,function(){return new Buffer(100)}),runTest(10,!1,function(){return new Buffer("xxxxxxxxxx")}),runTest(1,!0,function(){return{foo:"bar"}}),process.on("exit",function(){assert.equal(testRuns,completedRuns),console.log("ok")});