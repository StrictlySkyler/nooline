// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function test(e,r){count++,tests.push([e,r])}function run(){var e,r,t=tests.shift();return t?(e=t[0],r=t[1],console.log("# %s",e),r({same:assert.deepEqual,equal:assert.equal,end:function(){count--,run()}}),void 0):console.error("ok")}var assert=null,common=null,fromList=null._fromList,tests=[],count=0;process.on("exit",function(){assert.equal(count,0)}),process.nextTick(run),test("buffers",function(e){var r=[new Buffer("foog"),new Buffer("bark"),new Buffer("bazy"),new Buffer("kuel")],t=fromList(6,{buffer:r,length:16});e.equal(""+t,"foogba"),t=fromList(2,{buffer:r,length:10}),e.equal(""+t,"rk"),t=fromList(2,{buffer:r,length:8}),e.equal(""+t,"ba"),t=fromList(100,{buffer:r,length:6}),e.equal(""+t,"zykuel"),e.same(r,[]),e.end()}),test("strings",function(e){var r=["foog","bark","bazy","kuel"],t=fromList(6,{buffer:r,length:16,decoder:!0});e.equal(t,"foogba"),t=fromList(2,{buffer:r,length:10,decoder:!0}),e.equal(t,"rk"),t=fromList(2,{buffer:r,length:8,decoder:!0}),e.equal(t,"ba"),t=fromList(100,{buffer:r,length:6,decoder:!0}),e.equal(t,"zykuel"),e.same(r,[]),e.end()});