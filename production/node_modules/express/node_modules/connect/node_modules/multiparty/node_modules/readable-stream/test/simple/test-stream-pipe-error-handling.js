// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var common=null,assert=null,Stream=null.Stream;!function(){var r,e,t=new Stream,n=new Stream;t.pipe(n),r=null,t.on("error",function(e){r=e}),e=Error("This stream turned into bacon."),t.emit("error",e),assert.strictEqual(r,e)}(),function(){var r,e,t=new Stream,n=new Stream;t.pipe(n),r=Error("This stream turned into bacon."),e=null;try{t.emit("error",r)}catch(o){e=o}assert.strictEqual(e,r)}(),function(){function r(){throw Error("this should not happen")}var e,t,n,o,i,a;null.EventEmitter,e=Stream.Readable,t=Stream.Writable,n=new e,o=new t,i=!1,a=!1,process.on("exit",function(){assert(a),console.log("ok")}),n._read=function(){setTimeout(function(){assert(i),assert.throws(function(){o.emit("error",Error("fail"))}),a=!0})},o.on("error",r),n.pipe(o),o.removeListener("error",r),i=!0}(),function(){function r(){assert(!s),s=!0}var e,t,n,o,i,a,s;null.EventEmitter,e=Stream.Readable,t=Stream.Writable,n=new e,o=new t,i=!1,a=!1,s=!1,process.on("exit",function(){assert(a),console.log("ok")}),n._read=function(){setTimeout(function(){assert(i),o.emit("error",Error("fail")),a=!0})},o.on("error",r),o._write=function(){},n.pipe(o),o.removeListener("error",function(){}),i=!0}();