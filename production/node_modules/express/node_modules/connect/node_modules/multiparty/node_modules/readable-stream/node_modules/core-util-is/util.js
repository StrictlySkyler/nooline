// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function isArray(i){return Array.isArray(i)}function isBoolean(i){return"boolean"==typeof i}function isNull(i){return null===i}function isNullOrUndefined(i){return null==i}function isNumber(i){return"number"==typeof i}function isString(i){return"string"==typeof i}function isSymbol(i){return"symbol"==typeof i}function isUndefined(i){return void 0===i}function isRegExp(i){return isObject(i)&&"[object RegExp]"===objectToString(i)}function isObject(i){return"object"==typeof i&&null!==i}function isDate(i){return isObject(i)&&"[object Date]"===objectToString(i)}function isError(i){return isObject(i)&&"[object Error]"===objectToString(i)}function isFunction(i){return"function"==typeof i}function isPrimitive(i){return null===i||"boolean"==typeof i||"number"==typeof i||"string"==typeof i||"symbol"==typeof i||void 0===i}function isBuffer(i){return i instanceof Buffer}function objectToString(i){return Object.prototype.toString.call(i)}exports.isArray=isArray,exports.isBoolean=isBoolean,exports.isNull=isNull,exports.isNullOrUndefined=isNullOrUndefined,exports.isNumber=isNumber,exports.isString=isString,exports.isSymbol=isSymbol,exports.isUndefined=isUndefined,exports.isRegExp=isRegExp,exports.isObject=isObject,exports.isDate=isDate,exports.isError=isError,exports.isFunction=isFunction,exports.isPrimitive=isPrimitive,exports.isBuffer=isBuffer;