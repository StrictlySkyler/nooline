function createTest(e){var n=e.name;return e=e.fixture,function(t){uploadFixture(n,function(n,a){return n?t(n):(e.forEach(function(e,n){var t,i=a[n];assert.equal(i.type,e.type),assert.equal(i.name,e.name),"file"===i.type&&(t=i.value,assert.equal(t.originalFilename,e.filename),e.sha1&&assert.strictEqual(t.hash,e.sha1),e.size&&assert.strictEqual(t.size,e.size))}),t(),void 0)})}}function uploadFixture(e,n){var t,a;server.once("request",function(e,t){function a(){var e=n;n=function(){},e.apply(null,arguments)}var i=[],r=new multiparty.Form({autoFields:!0,autoFiles:!0});r.uploadDir=TMP_PATH,r.hash="sha1",r.on("error",a),r.on("file",function(e,n){i.push({type:"file",name:e,value:n})}),r.on("field",function(e,n){i.push({type:"field",name:e,value:n})}),r.on("close",function(){t.end("OK"),a(null,i)}),r.parse(e)}),t=net.createConnection(PORT),a=fs.createReadStream(FIXTURE_PATH+"/http/"+e),a.pipe(t,{end:!1}),t.on("data",function(){t.end()})}var spawn=null.spawn,findit=null,path=null,hashish=null,fs=null,http=null,net=null,assert=null,multiparty=null,mkdirp=null,STANDALONE_PATH=path.join(__dirname,"standalone"),server=http.createServer(),PORT=13532,FIXTURE_PATH=path.join(__dirname,"fixture"),TMP_PATH=path.join(__dirname,"tmp");mkdirp.sync(TMP_PATH),describe("fixtures",function(){before(function(e){server.listen(PORT,e)}),findit.sync(path.join(FIXTURE_PATH,"js")).forEach(function(e){if(/\.js$/.test(e)){var n=path.basename(e,".js");hashish.forEach(require(e),function(e,t){it(n+"/"+t,createTest({name:n+"/"+t,fixture:e}))})}})}),describe("standalone",function(){findit.sync(STANDALONE_PATH).forEach(function(e){/\.js$/.test(e)&&it(path.basename(e,".js"),function(n){var t=spawn(process.execPath,[e],{stdio:"inherit"});t.on("error",function(e){n(e)}),t.on("exit",function(e){return e?n(Error("exited with code "+e)):(n(),void 0)})})})});