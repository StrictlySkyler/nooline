function createMultipartBuffer(a,r){var n="--"+a+"\r\n"+'content-disposition: form-data; name="field1"\r\n'+"\r\n",e="\r\n--"+a+"--\r\n",t=new Buffer(r);return t.write(n,"ascii",0),t.write(e,"ascii",t.length-e.length),t}function hijack(a,r){var n=form[a];form[a]=function(){return r(),n.apply(this,arguments)}}var start,assert=null,Form=null.Form,boundary="-----------------------------168072824752491622650073",mb=100,buffer=createMultipartBuffer(boundary,1024*1024*mb),callbacks={partBegin:-1,partEnd:-1,headerField:-1,headerValue:-1,partData:-1,end:-1},form=new Form({boundary:boundary});hijack("onParseHeaderField",function(){callbacks.headerField++}),hijack("onParseHeaderValue",function(){callbacks.headerValue++}),hijack("onParsePartBegin",function(){callbacks.partBegin++}),hijack("onParsePartData",function(){callbacks.partData++}),hijack("onParsePartEnd",function(){callbacks.partEnd++}),form.on("finish",function(){callbacks.end++}),start=new Date,form.write(buffer,function(a){var r,n=new Date-start;assert.ifError(a),r=(mb/(n/1e3)).toFixed(2),console.log(r+" mb/sec")}),process.on("exit",function(){for(var a in callbacks)assert.equal(0,callbacks[a],a+" count off by "+callbacks[a])});