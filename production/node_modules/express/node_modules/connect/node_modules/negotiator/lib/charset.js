function parseAcceptCharset(r){return r.split(",").map(function(r){return parseCharset(r.trim())}).filter(function(r){return r&&r.q>0})}function parseCharset(r){var t,e,n,s,i,u=r.match(/^\s*(\S+?)\s*(?:;(.*))?$/);if(!u)return null;if(t=u[1],e=1,u[2])for(n=u[2].split(";"),s=0;s<n.length;s++)if(i=n[s].trim().split("="),"q"===i[0]){e=parseFloat(i[1]);break}return{charset:t,q:e}}function getCharsetPriority(r,t){return(t.filter(function(t){return specify(r,t)}).sort(function(r,t){return r.q===t.q?0:r.q>t.q?-1:1})[0]||{q:0}).q}function specify(r,t){return"*"===t.charset||t.charset===r?t:void 0}function preferredCharsets(r,t){return r=parseAcceptCharset(r||""),t?t.map(function(t){return[t,getCharsetPriority(t,r)]}).filter(function(r){return r[1]>0}).sort(function(r,t){return r[1]===t[1]?0:r[1]>t[1]?-1:1}).map(function(r){return r[0]}):r.sort(function(r,t){return r.q<t.q?1:-1}).map(function(r){return r.charset})}module.exports=preferredCharsets,preferredCharsets.preferredCharsets=preferredCharsets;