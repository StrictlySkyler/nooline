function parseAcceptEncoding(n){var r;return r=n?n.split(",").map(function(n){return parseEncoding(n.trim())}):[],r.some(function(n){return n&&"identity"===n.encoding})||r.push({encoding:"identity",q:.1}),r.filter(function(n){return n&&n.q>0})}function parseEncoding(n){var r,e,t,i,o,c=n.match(/^\s*(\S+?)\s*(?:;(.*))?$/);if(!c)return null;if(r=c[1],e=1,c[2])for(t=c[2].split(";"),i=0;i<t.length;i++)if(o=t[i].trim().split("="),"q"===o[0]){e=parseFloat(o[1]);break}return{encoding:r,q:e}}function getEncodingPriority(n,r){return(r.filter(function(r){return specify(n,r)}).sort(function(n,r){return n.q===r.q?0:n.q>r.q?-1:1})[0]||{q:0}).q}function specify(n,r){return"*"===r.encoding||r.encoding===n?r:void 0}function preferredEncodings(n,r){return n=parseAcceptEncoding(n||""),r?r.map(function(r){return[r,getEncodingPriority(r,n)]}).filter(function(n){return n[1]>0}).sort(function(n,r){return n[1]===r[1]?0:n[1]>r[1]?-1:1}).map(function(n){return n[0]}):n.sort(function(n,r){return n.q<r.q?1:-1}).map(function(n){return n.encoding})}module.exports=preferredEncodings,preferredEncodings.preferredEncodings=preferredEncodings;