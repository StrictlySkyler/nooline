function test8(){var t,e=new Buffer(1);for(t=0;256>t;t++)mod_ctype.wuint8(t,"big",e,0),ASSERT.equal(t,mod_ctype.ruint8(e,"big",0)),mod_ctype.wuint8(t,"little",e,0),ASSERT.equal(t,mod_ctype.ruint8(e,"little",0));ASSERT.ok(!0)}function test16(){var t,e=new Buffer(2),o=0;for(o=0;256>o;o++)t=Math.round(Math.random()*Math.pow(2,16)),mod_ctype.wuint16(t,"big",e,0),ASSERT.equal(t,mod_ctype.ruint16(e,"big",0)),mod_ctype.wuint16(t,"little",e,0),ASSERT.equal(t,mod_ctype.ruint16(e,"little",0))}function test32(){var t,e=new Buffer(4),o=0;for(o=0;256>o;o++)t=Math.round(Math.random()*Math.pow(2,32)),mod_ctype.wuint32(t,"big",e,0),ASSERT.equal(t,mod_ctype.ruint32(e,"big",0)),mod_ctype.wuint32(t,"little",e,0),ASSERT.equal(t,mod_ctype.ruint32(e,"little",0))}function test64(){var t,e,o,u=new Buffer(8),n=0;for(n=0;256>n;n++)t=Math.round(Math.random()*Math.pow(2,32)),e=Math.round(Math.random()*Math.pow(2,32)),mod_ctype.wuint64([e,t],"big",u,0),o=mod_ctype.ruint64(u,"big",0),ASSERT.equal(e,o[0]),ASSERT.equal(t,o[1]),mod_ctype.wuint64([e,t],"little",u,0),o=mod_ctype.ruint64(u,"little",0),ASSERT.equal(e,o[0]),ASSERT.equal(t,o[1])}var mod_ctype=null,ASSERT=null;exports.test8=test8,exports.test16=test16,exports.test32=test32,exports.test64=test64;