// Copyright (c) 2012, Mark Cavage. All rights reserved.

function capitalize(r){return r.charAt(0).toUpperCase()+r.slice(1)}function uncapitalize(r){return r.charAt(0).toLowerCase()+r.slice(1)}function _(){return util.format.apply(util,arguments)}function _assert(r,e,t,a){if(!NDEBUG){t=t||e,a=a||_assert.caller;var o=typeof r;if(o!==e)throw new assert.AssertionError({message:_(TYPE_REQUIRED,t,e),actual:o,expected:e,operator:"===",stackStartFunction:a})}}function array(r,e,t){if(!NDEBUG){if(t=t||e,!Array.isArray(r))throw new assert.AssertionError({message:_(ARRAY_TYPE_REQUIRED,t,e),actual:typeof r,expected:"array",operator:"Array.isArray",stackStartFunction:array.caller});for(var a=0;a<r.length;a++)_assert(r[a],e,t,array)}}function bool(r,e){_assert(r,"boolean",e,bool)}function buffer(r,e){if(!Buffer.isBuffer(r))throw new assert.AssertionError({message:_(TYPE_REQUIRED,e,type),actual:typeof r,expected:"buffer",operator:"Buffer.isBuffer",stackStartFunction:buffer})}function func(r,e){_assert(r,"function",e)}function number(r,e){_assert(r,"number",e)}function object(r,e){_assert(r,"object",e)}function stream(r,e){if(!(r instanceof Stream))throw new assert.AssertionError({message:_(TYPE_REQUIRED,e,type),actual:typeof r,expected:"Stream",operator:"instanceof",stackStartFunction:buffer})}function string(r,e){_assert(r,"string",e)}var assert=null,Stream=null.Stream,util=null,NDEBUG=process.env.NODE_NDEBUG||!1,ARRAY_TYPE_REQUIRED="%s ([%s]) required",TYPE_REQUIRED="%s (%s) is required";module.exports={bool:bool,buffer:buffer,func:func,number:number,object:object,stream:stream,string:string},Object.keys(module.exports).forEach(function(r){if("buffer"!==r){var e="arrayOf"+capitalize(r);"bool"===r&&(r="boolean"),"func"===r&&(r="function"),module.exports[e]=function(e,t){array(e,r,t)}}}),Object.keys(module.exports).forEach(function(r){var e="optional"+capitalize(r),t=uncapitalize(r.replace("arrayOf",""));"bool"===t&&(t="boolean"),"func"===t&&(t="function"),module.exports[e]=-1!==r.indexOf("arrayOf")?function(r,e){NDEBUG||void 0===r||array(r,t,e)}:function(r,e){NDEBUG||void 0===r||_assert(r,t,e)}}),Object.keys(assert).forEach(function(r){return"AssertionError"===r?(module.exports[r]=assert[r],void 0):(module.exports[r]=function(){NDEBUG||assert[r].apply(assert[r],arguments)},void 0)});