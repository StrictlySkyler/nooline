"use strict";function httpOverHttp(e){var t=new TunnelingAgent(e);return t.request=http.request,t}function httpsOverHttp(e){var t=new TunnelingAgent(e);return t.request=http.request,t.createSocket=createSecureSocket,t}function httpOverHttps(e){var t=new TunnelingAgent(e);return t.request=https.request,t}function httpsOverHttps(e){var t=new TunnelingAgent(e);return t.request=https.request,t.createSocket=createSecureSocket,t}function TunnelingAgent(e){var t=this;t.options=e||{},t.proxyOptions=t.options.proxy||{},t.maxSockets=t.options.maxSockets||http.Agent.defaultMaxSockets,t.requests=[],t.sockets=[],t.on("free",function(e,n,s){var o,r,u;for(o=0,r=t.requests.length;r>o;++o)if(u=t.requests[o],u.host===n&&u.port===s)return t.requests.splice(o,1),u.request.onSocket(e),void 0;e.destroy(),t.removeSocket(e)})}function createSecureSocket(e,t){var n=this;TunnelingAgent.prototype.createSocket.call(n,e,function(s){var o=tls.connect(0,mergeOptions({},n.options,{servername:e.host,socket:s}));t(o)})}function mergeOptions(e){var t,n,s,o,r,u,c;for(t=1,n=arguments.length;n>t;++t)if(s=arguments[t],"object"==typeof s)for(o=Object.keys(s),r=0,u=o.length;u>r;++r)c=o[r],void 0!==s[c]&&(e[c]=s[c]);return e}var debug,net=null,tls=null,http=null,https=null,events=null,assert=null,util=null;exports.httpOverHttp=httpOverHttp,exports.httpsOverHttp=httpsOverHttp,exports.httpOverHttps=httpOverHttps,exports.httpsOverHttps=httpsOverHttps,util.inherits(TunnelingAgent,events.EventEmitter),TunnelingAgent.prototype.addRequest=function(e,t,n){var s=this;return s.sockets.length>=this.maxSockets?(s.requests.push({host:t,port:n,request:e}),void 0):(s.createSocket({host:t,port:n,request:e},function(o){function r(){s.emit("free",o,t,n)}function u(){s.removeSocket(),o.removeListener("free",r),o.removeListener("close",u),o.removeListener("agentRemove",u)}o.on("free",r),o.on("close",u),o.on("agentRemove",u),e.onSocket(o)}),void 0)},TunnelingAgent.prototype.createSocket=function(e,t){function n(e){e.upgrade=!0}function s(e,t,n){process.nextTick(function(){o(e,t,n)})}function o(n,s,o){if(c.removeAllListeners(),s.removeAllListeners(),200===n.statusCode)assert.equal(o.length,0),debug("tunneling connection has established"),i.sockets[i.sockets.indexOf(p)]=s,t(s);else{debug("tunneling socket could not be established, statusCode=%d",n.statusCode);var r=Error("tunneling socket could not be established, statusCode="+n.statusCode);r.code="ECONNRESET",e.request.emit("error",r),i.removeSocket(p)}}function r(t){c.removeAllListeners(),debug("tunneling socket could not be established, cause=%s\n",t.message,t.stack);var n=Error("tunneling socket could not be established, cause="+t.message);n.code="ECONNRESET",e.request.emit("error",n),i.removeSocket(p)}var u,c,i=this,p={};i.sockets.push(p),u=mergeOptions({},i.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:!1}),u.proxyAuth&&(u.headers=u.headers||{},u.headers["Proxy-Authorization"]="Basic "+new Buffer(u.proxyAuth).toString("base64")),debug("making CONNECT request"),c=i.request(u),c.useChunkedEncodingByDefault=!1,c.once("response",n),c.once("upgrade",s),c.once("connect",o),c.once("error",r),c.end()},TunnelingAgent.prototype.removeSocket=function(e){var t,n=this.sockets.indexOf(e);-1!==n&&(this.sockets.splice(n,1),t=this.requests.shift(),t&&this.createSocket(t,function(e){t.request.onSocket(e)}))},debug=process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments);"string"==typeof e[0]?e[0]="TUNNEL: "+e[0]:e.unshift("TUNNEL:"),console.error.apply(console,e)}:function(){},exports.debug=debug;