function testRead(){var S,e;e=new Buffer(10),e[0]=50,e[1]=101,e[2]=66,e[3]=86,e[4]=35,e[5]=255,e[6]=255,e[7]=255,e[8]=137,e[9]=17,S=mod_ctype.ruint64(e,"big",0),ASSERT.equal(845496918,S[0]),ASSERT.equal(603979775,S[1]),S=mod_ctype.ruint64(e,"big",1),ASSERT.equal(1698846243,S[0]),ASSERT.equal(4294967177,S[1]),S=mod_ctype.ruint64(e,"big",2),ASSERT.equal(1112941567,S[0]),ASSERT.equal(4294936849,S[1]),S=mod_ctype.ruint64(e,"little",0),ASSERT.equal(4294967075,S[0]),ASSERT.equal(1447191858,S[1]),S=mod_ctype.ruint64(e,"little",1),ASSERT.equal(2315255807,S[0]),ASSERT.equal(592855653,S[1]),S=mod_ctype.ruint64(e,"little",2),ASSERT.equal(294256639,S[0]),ASSERT.equal(4280505922,S[1])}function testReadOver(){var S,e;e=new Buffer(10),e[0]=128,e[1]=255,e[2]=128,e[3]=255,e[4]=128,e[5]=255,e[6]=128,e[7]=255,e[8]=128,e[9]=255,S=mod_ctype.ruint64(e,"big",0),ASSERT.equal(2164228351,S[0]),ASSERT.equal(2164228351,S[1]),S=mod_ctype.ruint64(e,"big",1),ASSERT.equal(4286644096,S[0]),ASSERT.equal(4286644096,S[1]),S=mod_ctype.ruint64(e,"big",2),ASSERT.equal(2164228351,S[0]),ASSERT.equal(2164228351,S[1]),S=mod_ctype.ruint64(e,"little",0),ASSERT.equal(4286644096,S[0]),ASSERT.equal(4286644096,S[1]),S=mod_ctype.ruint64(e,"little",1),ASSERT.equal(2164228351,S[0]),ASSERT.equal(2164228351,S[1]),S=mod_ctype.ruint64(e,"little",2),ASSERT.equal(4286644096,S[0]),ASSERT.equal(4286644096,S[1])}function testWriteZero(){var S,e;e=new Buffer(10),e.fill(102),S=[0,0],mod_ctype.wuint64(S,"big",e,0),ASSERT.equal(0,e[0]),ASSERT.equal(0,e[1]),ASSERT.equal(0,e[2]),ASSERT.equal(0,e[3]),ASSERT.equal(0,e[4]),ASSERT.equal(0,e[5]),ASSERT.equal(0,e[6]),ASSERT.equal(0,e[7]),ASSERT.equal(102,e[8]),ASSERT.equal(102,e[9]),e.fill(102),S=[0,0],mod_ctype.wuint64(S,"big",e,1),ASSERT.equal(102,e[0]),ASSERT.equal(0,e[1]),ASSERT.equal(0,e[2]),ASSERT.equal(0,e[3]),ASSERT.equal(0,e[4]),ASSERT.equal(0,e[5]),ASSERT.equal(0,e[6]),ASSERT.equal(0,e[7]),ASSERT.equal(0,e[8]),ASSERT.equal(102,e[9]),e.fill(102),S=[0,0],mod_ctype.wuint64(S,"big",e,2),ASSERT.equal(102,e[0]),ASSERT.equal(102,e[1]),ASSERT.equal(0,e[2]),ASSERT.equal(0,e[3]),ASSERT.equal(0,e[4]),ASSERT.equal(0,e[5]),ASSERT.equal(0,e[6]),ASSERT.equal(0,e[7]),ASSERT.equal(0,e[8]),ASSERT.equal(0,e[9]),e.fill(102),S=[0,0],mod_ctype.wuint64(S,"little",e,0),ASSERT.equal(0,e[0]),ASSERT.equal(0,e[1]),ASSERT.equal(0,e[2]),ASSERT.equal(0,e[3]),ASSERT.equal(0,e[4]),ASSERT.equal(0,e[5]),ASSERT.equal(0,e[6]),ASSERT.equal(0,e[7]),ASSERT.equal(102,e[8]),ASSERT.equal(102,e[9]),e.fill(102),S=[0,0],mod_ctype.wuint64(S,"little",e,1),ASSERT.equal(102,e[0]),ASSERT.equal(0,e[1]),ASSERT.equal(0,e[2]),ASSERT.equal(0,e[3]),ASSERT.equal(0,e[4]),ASSERT.equal(0,e[5]),ASSERT.equal(0,e[6]),ASSERT.equal(0,e[7]),ASSERT.equal(0,e[8]),ASSERT.equal(102,e[9]),e.fill(102),S=[0,0],mod_ctype.wuint64(S,"little",e,2),ASSERT.equal(102,e[0]),ASSERT.equal(102,e[1]),ASSERT.equal(0,e[2]),ASSERT.equal(0,e[3]),ASSERT.equal(0,e[4]),ASSERT.equal(0,e[5]),ASSERT.equal(0,e[6]),ASSERT.equal(0,e[7]),ASSERT.equal(0,e[8]),ASSERT.equal(0,e[9])}function testWrite(){var S,e;e=new Buffer(10),S=[2311254,135],e.fill(102),mod_ctype.wuint64(S,"big",e,0),ASSERT.equal(0,e[0]),ASSERT.equal(35,e[1]),ASSERT.equal(68,e[2]),ASSERT.equal(86,e[3]),ASSERT.equal(0,e[4]),ASSERT.equal(0,e[5]),ASSERT.equal(0,e[6]),ASSERT.equal(135,e[7]),ASSERT.equal(102,e[8]),ASSERT.equal(102,e[9]),e.fill(102),mod_ctype.wuint64(S,"big",e,1),ASSERT.equal(102,e[0]),ASSERT.equal(0,e[1]),ASSERT.equal(35,e[2]),ASSERT.equal(68,e[3]),ASSERT.equal(86,e[4]),ASSERT.equal(0,e[5]),ASSERT.equal(0,e[6]),ASSERT.equal(0,e[7]),ASSERT.equal(135,e[8]),ASSERT.equal(102,e[9]),e.fill(102),mod_ctype.wuint64(S,"big",e,2),ASSERT.equal(102,e[0]),ASSERT.equal(102,e[1]),ASSERT.equal(0,e[2]),ASSERT.equal(35,e[3]),ASSERT.equal(68,e[4]),ASSERT.equal(86,e[5]),ASSERT.equal(0,e[6]),ASSERT.equal(0,e[7]),ASSERT.equal(0,e[8]),ASSERT.equal(135,e[9]),e.fill(102),mod_ctype.wuint64(S,"little",e,0),ASSERT.equal(135,e[0]),ASSERT.equal(0,e[1]),ASSERT.equal(0,e[2]),ASSERT.equal(0,e[3]),ASSERT.equal(86,e[4]),ASSERT.equal(68,e[5]),ASSERT.equal(35,e[6]),ASSERT.equal(0,e[7]),ASSERT.equal(102,e[8]),ASSERT.equal(102,e[9]),e.fill(102),mod_ctype.wuint64(S,"little",e,1),ASSERT.equal(102,e[0]),ASSERT.equal(135,e[1]),ASSERT.equal(0,e[2]),ASSERT.equal(0,e[3]),ASSERT.equal(0,e[4]),ASSERT.equal(86,e[5]),ASSERT.equal(68,e[6]),ASSERT.equal(35,e[7]),ASSERT.equal(0,e[8]),ASSERT.equal(102,e[9]),e.fill(102),mod_ctype.wuint64(S,"little",e,2),ASSERT.equal(102,e[0]),ASSERT.equal(102,e[1]),ASSERT.equal(135,e[2]),ASSERT.equal(0,e[3]),ASSERT.equal(0,e[4]),ASSERT.equal(0,e[5]),ASSERT.equal(86,e[6]),ASSERT.equal(68,e[7]),ASSERT.equal(35,e[8]),ASSERT.equal(0,e[9]),S=[4294915105,883674554],e.fill(102),mod_ctype.wuint64(S,"big",e,0),ASSERT.equal(255,e[0]),ASSERT.equal(255,e[1]),ASSERT.equal(52,e[2]),ASSERT.equal(33,e[3]),ASSERT.equal(52,e[4]),ASSERT.equal(171,e[5]),ASSERT.equal(205,e[6]),ASSERT.equal(186,e[7]),ASSERT.equal(102,e[8]),ASSERT.equal(102,e[9]),e.fill(102),mod_ctype.wuint64(S,"big",e,1),ASSERT.equal(102,e[0]),ASSERT.equal(255,e[1]),ASSERT.equal(255,e[2]),ASSERT.equal(52,e[3]),ASSERT.equal(33,e[4]),ASSERT.equal(52,e[5]),ASSERT.equal(171,e[6]),ASSERT.equal(205,e[7]),ASSERT.equal(186,e[8]),ASSERT.equal(102,e[9]),e.fill(102),mod_ctype.wuint64(S,"big",e,2),ASSERT.equal(102,e[0]),ASSERT.equal(102,e[1]),ASSERT.equal(255,e[2]),ASSERT.equal(255,e[3]),ASSERT.equal(52,e[4]),ASSERT.equal(33,e[5]),ASSERT.equal(52,e[6]),ASSERT.equal(171,e[7]),ASSERT.equal(205,e[8]),ASSERT.equal(186,e[9]),e.fill(102),mod_ctype.wuint64(S,"little",e,0),ASSERT.equal(186,e[0]),ASSERT.equal(205,e[1]),ASSERT.equal(171,e[2]),ASSERT.equal(52,e[3]),ASSERT.equal(33,e[4]),ASSERT.equal(52,e[5]),ASSERT.equal(255,e[6]),ASSERT.equal(255,e[7]),ASSERT.equal(102,e[8]),ASSERT.equal(102,e[9]),e.fill(102),mod_ctype.wuint64(S,"little",e,1),ASSERT.equal(102,e[0]),ASSERT.equal(186,e[1]),ASSERT.equal(205,e[2]),ASSERT.equal(171,e[3]),ASSERT.equal(52,e[4]),ASSERT.equal(33,e[5]),ASSERT.equal(52,e[6]),ASSERT.equal(255,e[7]),ASSERT.equal(255,e[8]),ASSERT.equal(102,e[9]),e.fill(102),mod_ctype.wuint64(S,"little",e,2),ASSERT.equal(102,e[0]),ASSERT.equal(102,e[1]),ASSERT.equal(186,e[2]),ASSERT.equal(205,e[3]),ASSERT.equal(171,e[4]),ASSERT.equal(52,e[5]),ASSERT.equal(33,e[6]),ASSERT.equal(52,e[7]),ASSERT.equal(255,e[8]),ASSERT.equal(255,e[9])}function testWriteInvalid(){var S,e;e=new Buffer(4),S=[0,0],ASSERT.throws(function(){mod_ctype.wuint64(S,"big",e,0)},Error,"buffer too small"),ASSERT.throws(function(){mod_ctype.wuint64(S,"little",e,0)},Error,"buffer too small"),e=new Buffer(12),S=[0,0],ASSERT.throws(function(){mod_ctype.wuint64(S,"little",e,11)},Error,"write beyond end of buffer"),ASSERT.throws(function(){mod_ctype.wuint64(S,"big",e,11)},Error,"write beyond end of buffer"),e=new Buffer(12),S=[-3,0],ASSERT.throws(function(){mod_ctype.wuint64(S,"big",e,1)},Error,"write negative number"),ASSERT.throws(function(){mod_ctype.wuint64(S,"little",e,1)},Error,"write negative number"),S=[0,-3],ASSERT.throws(function(){mod_ctype.wuint64(S,"big",e,1)},Error,"write negative number"),ASSERT.throws(function(){mod_ctype.wuint64(S,"little",e,1)},Error,"write negative number"),S=[-3,-3],ASSERT.throws(function(){mod_ctype.wuint64(S,"big",e,1)},Error,"write negative number"),ASSERT.throws(function(){mod_ctype.wuint64(S,"little",e,1)},Error,"write negative number"),e=new Buffer(12),S=[3.33,0],ASSERT.throws(function(){mod_ctype.wuint64(S,"big",e,1)},Error,"write fractions"),ASSERT.throws(function(){mod_ctype.wuint64(S,"little",e,1)},Error,"write fractions"),S=[0,3.3],ASSERT.throws(function(){mod_ctype.wuint64(S,"big",e,1)},Error,"write fractions"),ASSERT.throws(function(){mod_ctype.wuint64(S,"little",e,1)},Error,"write fractions"),S=[3.33,2.42],ASSERT.throws(function(){mod_ctype.wuint64(S,"big",e,1)},Error,"write fractions"),ASSERT.throws(function(){mod_ctype.wuint64(S,"little",e,1)},Error,"write fractions"),e=new Buffer(12),S=[0xffffffffff,23],ASSERT.throws(function(){mod_ctype.wuint64(S,"big",e,1)},Error,"write too large"),ASSERT.throws(function(){mod_ctype.wuint64(S,"little",e,1)},Error,"write too large"),S=[0xffffffffff,68719473208],ASSERT.throws(function(){mod_ctype.wuint64(S,"big",e,1)},Error,"write too large"),ASSERT.throws(function(){mod_ctype.wuint64(S,"little",e,1)},Error,"write too large"),S=[35,68719473208],ASSERT.throws(function(){mod_ctype.wuint64(S,"big",e,1)},Error,"write too large"),ASSERT.throws(function(){mod_ctype.wuint64(S,"little",e,1)},Error,"write too large")}var mod_ctype=null,ASSERT=null;testRead(),testReadOver(),testWriteZero(),testWrite(),testWriteInvalid();