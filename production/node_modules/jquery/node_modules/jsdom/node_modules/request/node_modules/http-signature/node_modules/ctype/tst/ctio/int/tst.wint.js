function test8(){var S=new Buffer(4);mod_ctype.wsint8(35,"big",S,0),mod_ctype.wsint8(35,"little",S,1),mod_ctype.wsint8(-5,"big",S,2),mod_ctype.wsint8(-5,"little",S,3),ASSERT.equal(35,S[0]),ASSERT.equal(35,S[1]),ASSERT.equal(251,S[2]),ASSERT.equal(251,S[3]),ASSERT.throws(function(){mod_ctype.wsint8(2748,"big",S,0)}),ASSERT.throws(function(){mod_ctype.wsint8(2748,"little",S,0)})}function test16(){var S=new Buffer(6);mod_ctype.wsint16(35,"big",S,0),mod_ctype.wsint16(35,"little",S,2),ASSERT.equal(0,S[0]),ASSERT.equal(35,S[1]),ASSERT.equal(35,S[2]),ASSERT.equal(0,S[3]),mod_ctype.wsint16(-5,"big",S,0),mod_ctype.wsint16(-5,"little",S,2),ASSERT.equal(255,S[0]),ASSERT.equal(251,S[1]),ASSERT.equal(251,S[2]),ASSERT.equal(255,S[3]),mod_ctype.wsint16(-1679,"big",S,1),mod_ctype.wsint16(-1679,"little",S,3),ASSERT.equal(249,S[1]),ASSERT.equal(113,S[2]),ASSERT.equal(113,S[3]),ASSERT.equal(249,S[4])}function test32(){var S=new Buffer(8);mod_ctype.wsint32(35,"big",S,0),mod_ctype.wsint32(35,"little",S,4),ASSERT.equal(0,S[0]),ASSERT.equal(0,S[1]),ASSERT.equal(0,S[2]),ASSERT.equal(35,S[3]),ASSERT.equal(35,S[4]),ASSERT.equal(0,S[5]),ASSERT.equal(0,S[6]),ASSERT.equal(0,S[7]),mod_ctype.wsint32(-5,"big",S,0),mod_ctype.wsint32(-5,"little",S,4),ASSERT.equal(255,S[0]),ASSERT.equal(255,S[1]),ASSERT.equal(255,S[2]),ASSERT.equal(251,S[3]),ASSERT.equal(251,S[4]),ASSERT.equal(255,S[5]),ASSERT.equal(255,S[6]),ASSERT.equal(255,S[7]),mod_ctype.wsint32(-805306713,"big",S,0),mod_ctype.wsint32(-805306713,"litle",S,4),ASSERT.equal(207,S[0]),ASSERT.equal(255,S[1]),ASSERT.equal(254,S[2]),ASSERT.equal(167,S[3]),ASSERT.equal(167,S[4]),ASSERT.equal(254,S[5]),ASSERT.equal(255,S[6]),ASSERT.equal(207,S[7])}var mod_ctype=null,ASSERT=null;test8(),test16(),test32();