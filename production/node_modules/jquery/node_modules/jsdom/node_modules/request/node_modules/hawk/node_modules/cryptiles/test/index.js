var Lab=null,Cryptiles=null,internals={},expect=Lab.expect,before=Lab.before,after=Lab.after,describe=Lab.experiment,it=Lab.test;describe("Cryptiles",function(){describe("#randomString",function(){it("should generate the right length string",function(e){for(var t=1;1e3>=t;++t)expect(Cryptiles.randomString(t).length).to.equal(t);e()}),it("returns an error on invalid bits size",function(e){expect(Cryptiles.randomString(1e20).message).to.equal("Failed generating random bits: Argument #1 must be number > 0"),e()})}),describe("#randomBits",function(){it("returns an error on invalid input",function(e){expect(Cryptiles.randomBits(0).message).to.equal("Invalid random bits count"),e()})}),describe("#fixedTimeComparison",function(){var e=Cryptiles.randomString(5e4),t=Cryptiles.randomString(15e4);it("should take the same amount of time comparing different string sizes",function(i){var n,r,o=Date.now();Cryptiles.fixedTimeComparison(t,e),n=Date.now()-o,o=Date.now(),Cryptiles.fixedTimeComparison(t,t),r=Date.now()-o,expect(r-n).to.be.within(-20,20),i()}),it("should return true for equal strings",function(t){expect(Cryptiles.fixedTimeComparison(e,e)).to.equal(!0),t()}),it("should return false for different strings (size, a < b)",function(t){expect(Cryptiles.fixedTimeComparison(e,e+"x")).to.equal(!1),t()}),it("should return false for different strings (size, a > b)",function(t){expect(Cryptiles.fixedTimeComparison(e+"x",e)).to.equal(!1),t()}),it("should return false for different strings (size, a = b)",function(t){expect(Cryptiles.fixedTimeComparison(e+"x",e+"y")).to.equal(!1),t()}),it("should return false when not a string",function(e){expect(Cryptiles.fixedTimeComparison("x",null)).to.equal(!1),e()})})});