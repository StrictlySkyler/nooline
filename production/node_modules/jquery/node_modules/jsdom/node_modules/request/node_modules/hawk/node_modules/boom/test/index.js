var Lab=null,Boom=null,internals={},expect=Lab.expect,before=Lab.before,after=Lab.after,describe=Lab.experiment,it=Lab.test;describe("Boom",function(){it("returns an error with info when constructed using another error",function(e){var t,s=Error("ka-boom");s.xyz=123,t=new Boom(s),expect(t.data.xyz).to.equal(123),expect(t.message).to.equal("ka-boom"),expect(t.response).to.deep.equal({code:500,payload:{code:500,error:"Internal Server Error",message:"ka-boom"},headers:{}}),e()}),describe("#isBoom",function(){it("returns true for Boom object",function(e){expect(Boom.badRequest().isBoom).to.equal(!0),e()}),it("returns false for Error object",function(e){expect(Error().isBoom).to.not.exist,e()})}),describe("#badRequest",function(){it("returns a 400 error code",function(e){expect(Boom.badRequest().response.code).to.equal(400),e()}),it("sets the message with the passed in message",function(e){expect(Boom.badRequest("my message").message).to.equal("my message"),e()})}),describe("#unauthorized",function(){it("returns a 401 error code",function(e){var t=Boom.unauthorized();expect(t.response.code).to.equal(401),expect(t.response.headers).to.deep.equal({}),e()}),it("sets the message with the passed in message",function(e){expect(Boom.unauthorized("my message").message).to.equal("my message"),e()}),it("returns a WWW-Authenticate header when passed a scheme",function(e){var t=Boom.unauthorized("boom","Test");expect(t.response.code).to.equal(401),expect(t.response.headers["WWW-Authenticate"]).to.equal('Test error="boom"'),e()}),it("returns a WWW-Authenticate header when passed a scheme and attributes",function(e){var t=Boom.unauthorized("boom","Test",{a:1,b:"something",c:null,d:0});expect(t.response.code).to.equal(401),expect(t.response.headers["WWW-Authenticate"]).to.equal('Test a="1", b="something", c="", d="0", error="boom"'),e()}),it("sets the isMissing flag when error message is empty",function(e){var t=Boom.unauthorized("","Basic");expect(t.isMissing).to.equal(!0),e()}),it("does not set the isMissing flag when error message is not empty",function(e){var t=Boom.unauthorized("message","Basic");expect(t.isMissing).to.equal(void 0),e()}),it("sets a WWW-Authenticate when passed as an array",function(e){var t=Boom.unauthorized("message",["Basic",'Example e="1"','Another x="3", y="4"']);expect(t.response.headers["WWW-Authenticate"]).to.equal('Basic, Example e="1", Another x="3", y="4"'),e()})}),describe("#clientTimeout",function(){it("returns a 408 error code",function(e){expect(Boom.clientTimeout().response.code).to.equal(408),e()}),it("sets the message with the passed in message",function(e){expect(Boom.clientTimeout("my message").message).to.equal("my message"),e()})}),describe("#serverTimeout",function(){it("returns a 503 error code",function(e){expect(Boom.serverTimeout().response.code).to.equal(503),e()}),it("sets the message with the passed in message",function(e){expect(Boom.serverTimeout("my message").message).to.equal("my message"),e()})}),describe("#forbidden",function(){it("returns a 403 error code",function(e){expect(Boom.forbidden().response.code).to.equal(403),e()}),it("sets the message with the passed in message",function(e){expect(Boom.forbidden("my message").message).to.equal("my message"),e()})}),describe("#notFound",function(){it("returns a 404 error code",function(e){expect(Boom.notFound().response.code).to.equal(404),e()}),it("sets the message with the passed in message",function(e){expect(Boom.notFound("my message").message).to.equal("my message"),e()})}),describe("#internal",function(){it("returns a 500 error code",function(e){expect(Boom.internal().response.code).to.equal(500),e()}),it("sets the message with the passed in message",function(e){var t=Boom.internal("my message");expect(t.message).to.equal("my message"),expect(t.response.payload.message).to.equal("An internal server error occurred"),e()}),it("passes data on the callback if its passed in",function(e){expect(Boom.internal("my message",{my:"data"}).data.my).to.equal("data"),e()}),it("uses passed in stack if its available",function(e){var t=Error();t.stack="my stack line\nmy second stack line",expect(Boom.internal("my message",t).trace[0]).to.equal("my stack line"),e()})}),describe("#passThrough",function(){it("returns a pass-through error",function(e){var t=Boom.passThrough(499,{a:1},"application/text",{"X-Test":"Boom"});expect(t.response.code).to.equal(499),expect(t.message).to.equal("Pass-through"),expect(t.response).to.deep.equal({code:499,payload:{a:1},headers:{"X-Test":"Boom"},type:"application/text"}),e()})}),describe("#reformat",function(){it("encodes any HTML markup in the response payload",function(e){var t=new Boom(Error("<script>alert(1)</script>"));expect(t.response.payload.message).to.not.contain("<script>"),e()})})});