function wrap_request(t,e){var s={};return Object.keys(e).forEach(function(r){var p=e[r];s[r]="request"!=r?p:function(){return faux_requests_made[t]+=1,p.apply(this,arguments)}}),s}function run_tests(t){var e="http://localhost:"+plain_server.port+"/to_https",s="https://localhost:"+https_server.port+"/to_plain";request(e,{httpModules:t,strictSSL:!1},function(t,e,s){if(t)throw t;assert.equal(s,"https","Received HTTPS server body"),done()}),request(s,{httpModules:t,strictSSL:!1},function(t,e,s){if(t)throw t;assert.equal(s,"plain","Received HTTPS server body"),done()})}function done(){passed+=1;var t=10;passed==t&&(plain_server.close(),https_server.close(),assert.equal(faux_requests_made.http,4,"Wrapped http module called appropriately"),assert.equal(faux_requests_made.https,4,"Wrapped https module called appropriately"),console.log(t+2+" tests passed."))}var passed,http=null,https=null,server=null,assert=null,request=null,faux_requests_made={http:0,https:0},faux_http=wrap_request("http",http),faux_https=wrap_request("https",https),plain_server=server.createServer(),https_server=server.createSSLServer();plain_server.listen(plain_server.port,function(){plain_server.on("/plain",function(t,e){e.writeHead(200),e.end("plain")}),plain_server.on("/to_https",function(t,e){e.writeHead(301,{location:"https://localhost:"+https_server.port+"/https"}),e.end()}),https_server.listen(https_server.port,function(){https_server.on("/https",function(t,e){e.writeHead(200),e.end("https")}),https_server.on("/to_plain",function(t,e){e.writeHead(302,{location:"http://localhost:"+plain_server.port+"/plain"}),e.end()}),run_tests(),run_tests({}),run_tests({"http:":faux_http}),run_tests({"https:":faux_https}),run_tests({"http:":faux_http,"https:":faux_https})})}),passed=0;