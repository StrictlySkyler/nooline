function runTest(e){e<tests.length?tests[e](function(){runTest(e+1)}):(console.log("All tests passed"),basicServer.close())}var tests,assert=null,http=null,request=null,numBasicRequests=0,basicServer=http.createServer(function(e,t){var s,a;console.error("Basic auth server: ",e.method,e.url),numBasicRequests++,e.headers.authorization?s=e.headers.authorization=="Basic "+new Buffer("test:testing2").toString("base64")?!0:e.headers.authorization=="Basic "+new Buffer(":apassword").toString("base64")?!0:e.headers.authorization=="Basic "+new Buffer("justauser").toString("base64")?!0:!1:(s=!1,t.setHeader("www-authenticate",'Basic realm="Private"')),"/post/"==e.url&&(a="data_key=data_value",e.on("data",function(e){assert.equal(e,a),console.log("received request data: "+e)}),assert.equal(e.method,"POST"),assert.equal(e.headers["content-length"],""+a.length),assert.equal(e.headers["content-type"],"application/x-www-form-urlencoded; charset=utf-8")),s?(console.log("request ok"),t.end("ok")):(console.log("status=401"),t.statusCode=401,t.end("401"))});basicServer.listen(6767),tests=[function(e){request({method:"GET",uri:"http://localhost:6767/test/",auth:{user:"test",pass:"testing2",sendImmediately:!1}},function(t,s){assert.equal(s.statusCode,200),assert.equal(numBasicRequests,2),e()})},function(e){request({method:"GET",uri:"http://localhost:6767/test2/",auth:{user:"test",pass:"testing2"}},function(t,s){assert.equal(s.statusCode,200),assert.equal(numBasicRequests,3),e()})},function(e){request({method:"GET",uri:"http://test:testing2@localhost:6767/test2/"},function(t,s){assert.equal(s.statusCode,200),assert.equal(numBasicRequests,4),e()})},function(e){request({method:"POST",form:{data_key:"data_value"},uri:"http://localhost:6767/post/",auth:{user:"test",pass:"testing2",sendImmediately:!1}},function(t,s){assert.equal(s.statusCode,200),assert.equal(numBasicRequests,6),e()})},function(e){assert.doesNotThrow(function(){request({method:"GET",uri:"http://localhost:6767/allow_empty_user/",auth:{user:"",pass:"apassword",sendImmediately:!1}},function(t,s){assert.equal(s.statusCode,200),assert.equal(numBasicRequests,8),e()})})},function(e){assert.doesNotThrow(function(){request({method:"GET",uri:"http://localhost:6767/allow_undefined_password/",auth:{user:"justauser",pass:void 0,sendImmediately:!1}},function(t,s){assert.equal(s.statusCode,200),assert.equal(numBasicRequests,10),e()})})}],runTest(0);