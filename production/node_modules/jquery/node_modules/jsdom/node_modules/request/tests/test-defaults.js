var server=null,assert=null,request=null,s=server.createServer();s.listen(s.port,function(){var e,t,a=0;s.on("/get",function(e,t){assert.equal(e.headers.foo,"bar"),assert.equal(e.method,"GET"),t.writeHead(200,{"Content-Type":"text/plain"}),t.end("TESTING!")}),request.defaults({headers:{foo:"bar"}})(s.url+"/get",function(e,t,s){if(e)throw e;assert.deepEqual("TESTING!",s),a+=1}),s.on("/post",function(e,t){assert.equal(e.headers.foo,"bar"),assert.equal(e.headers["content-type"],null),assert.equal(e.method,"POST"),t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify({foo:"bar"}))}),request.defaults({headers:{foo:"bar"}}).post(s.url+"/post",{json:!0},function(e,t,s){if(e)throw e;assert.deepEqual("bar",s.foo),a+=1}),s.on("/patch",function(e,t){assert.equal(e.headers.foo,"bar"),assert.equal(e.headers["content-type"],null),assert.equal(e.method,"PATCH"),t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify({foo:"bar"}))}),request.defaults({headers:{foo:"bar"}}).patch(s.url+"/patch",{json:!0},function(e,t,s){if(e)throw e;assert.deepEqual("bar",s.foo),a+=1}),s.on("/post-body",function(e,t){assert.equal(e.headers.foo,"bar"),assert.equal(e.headers["content-type"],"application/json"),assert.equal(e.method,"POST"),t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify({foo:"bar"}))}),request.defaults({headers:{foo:"bar"}}).post(s.url+"/post-body",{json:!0,body:{bar:"baz"}},function(e,t,s){if(e)throw e;assert.deepEqual("bar",s.foo),a+=1}),s.on("/del",function(e,t){assert.equal(e.headers.foo,"bar"),assert.equal(e.method,"DELETE"),t.writeHead(200,{"Content-Type":"application/json"}),t.end(JSON.stringify({foo:"bar"}))}),request.defaults({headers:{foo:"bar"},json:!0}).del(s.url+"/del",function(e,t,s){if(e)throw e;assert.deepEqual("bar",s.foo),a+=1}),s.on("/head",function(e,t){assert.equal(e.headers.foo,"bar"),assert.equal(e.method,"HEAD"),t.writeHead(200,{"Content-Type":"text/plain"}),t.end()}),request.defaults({headers:{foo:"bar"}}).head({uri:s.url+"/head"},function(e){if(e)throw e;a+=1}),s.on("/get_custom",function(e,t){assert.equal(e.headers.foo,"bar"),assert.equal(e.headers.x,"y"),t.writeHead(200,{"Content-Type":"text/plain"}),t.end()}),e=request.defaults({headers:{foo:"bar"},body:"TESTING!"},function(e,t,s){var a=request.initParams(e,t,s);return t=a.options,t.headers.x="y",request(a.uri,a.options,a.callback)}),t="defaults test failed. head request should throw earlier",assert.throws(function(){e.head(s.url+"/get_custom",function(){throw Error(t)}),a+=1},t),e.get(s.url+"/get_custom",function(e){if(e)throw e;a+=1,console.log(""+a+" tests passed."),s.close()})});