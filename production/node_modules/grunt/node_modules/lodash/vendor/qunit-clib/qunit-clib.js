/*!
 * QUnit CLI Boilerplate v1.0.0
 * Copyright 2011-2012 John-David Dalton <http://allyoucanleet.com/>
 * Based on a gist by JÃ¶rn Zaefferer <https://gist.github.com/722381>
 * Available under MIT license <http://mths.be/mit>
 */

!function(global){"use strict";function each(e,t){for(var n=-1,o=e.length;++n<o;)t(e[n],n,e)}function isFunction(e){return"[object Function]"==toString.call(e)}function clearTimer(e){ids[e]&&(ids[e].cancel(),timer.purge(),delete ids[e])}function schedule(fn,delay,args,repeated){var task=ids[++counter]=new JavaAdapter(java.util.TimerTask,{run:function(){fn.apply(global,args)}});return isFunction(fn)||(fn=function(code){return code+="",function(){eval(code)}}(fn)),repeated?timer.schedule(task,delay,delay):timer.schedule(task,delay),counter}function setInterval(e,t){return schedule(e,t,slice.call(arguments,2),!0)}function setTimeout(e,t){return schedule(e,t,slice.call(arguments,2))}function done(e){if(!doneCalled){doneCalled=!0,console.log(hr),console.log("    PASS: "+e.passed+"  FAIL: "+e.failed+"  TOTAL: "+e.total),console.log("    Finished in "+e.runtime+" milliseconds."),console.log(hr);try{quit()}catch(t){}try{e.failed?(console.error("Error: "+e.failed+" of "+e.total+" tests failed."),process.exit(1)):process.exit(0)}catch(t){}}}function log(e){var t=e.expected,n=e.result,o=void 0!==t?"EQ":"OK",l=[n?"PASS":"FAIL",o,e.message||"ok"];n||"EQ"!=o||l.push("Expected: "+t+", Actual: "+e.actual),QUnit.config.testStats.assertions.push(l.join(" | "))}function moduleStart(e){console.log(hr),console.log(e.name),console.log(hr)}function testDone(e){var t=QUnit.config.testStats.assertions,n=e.name;e.failed>0?(console.log(" FAIL - "+n),each(t,function(e){console.log("    "+e)})):console.log(" PASS - "+n),t.length=0}var hr,slice,toString,doneCalled,timer,counter,ids,parseObject;global.console||(global.console={log:global.print}),global.QUnit&&(QUnit=QUnit.QUnit||QUnit),hr="----------------------------------------",slice=[].slice,toString={}.toString,counter=0,ids={},parseObject=function(){var e=QUnit.jsDump.parsers.object;return function(t){return"object"==typeof t.rhinoException?t.name+' { message: "'+t.message+'", fileName: "'+t.fileName+'", lineNumber: '+t.lineNumber+" }":e(t)}}(),QUnit.config.testStats={assertions:[]},each(["asyncTest","deepEqual","equal","equals","expect","notDeepEqual","notEqual","notStrictEqual","ok","raises","same","start","stop","strictEqual","test","throws"],function(e){var t=QUnit[e];t&&(global[e]=t)});try{timer=new java.util.Timer,isFunction(global.clearInterval)||(global.clearInterval=clearTimer),isFunction(global.clearTimeout)||(global.clearTimeout=clearTimer),isFunction(global.setInterval)||(global.setInterval=setInterval),isFunction(global.setTimeout)||(global.setTimeout=setTimeout)}catch(e){}QUnit.done(done),QUnit.log(log),QUnit.moduleStart(moduleStart),QUnit.testDone(testDone),QUnit.jsDump.parsers.object=parseObject,QUnit.init()}("object"==typeof global&&global||this);