"use strict";function Point(e,t,n){this.klass="Point",this.x=e,this.y=t,this.z=n}function Space(e,t,n){if(n&&!n.every(function(e){return e instanceof Point}))throw Error("A non-Point inside a points array!");this.klass="Space",this.height=e,this.width=t,this.points=n}var fs=null,path=null,util=null,yaml=null,pointYamlType=new yaml.Type("!point",{loader:{kind:"array",resolver:function(e){return 3===e.length?new Point(e[0],e[1],e[2]):yaml.NIL}},dumper:{kind:"object",instanceOf:Point,representer:function(e){return[e.x,e.y,e.z]}}}),spaceYamlType=new yaml.Type("!space",{loader:{kind:"object",resolver:function(e){return new Space(e.height,e.width,e.points)}},dumper:{kind:"object",instanceOf:Space}}),SPACE_SCHEMA=yaml.Schema.create([spaceYamlType,pointYamlType]);fs.readFile(path.join(__dirname,"custom_types.yaml"),"utf8",function(e,t){var n;e?console.error(e.stack||e.message||e+""):(n=yaml.load(t,{schema:SPACE_SCHEMA}),console.log(util.inspect(n,!1,20,!0)))}),module.exports.Point=Point,module.exports.Space=Space,module.exports.pointYamlType=pointYamlType,module.exports.spaceYamlType=spaceYamlType,module.exports.SPACE_SCHEMA=SPACE_SCHEMA;