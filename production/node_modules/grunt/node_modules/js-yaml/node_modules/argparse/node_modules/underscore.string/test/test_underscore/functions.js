$(document).ready(function(){module("Functions"),test("bind",function(){var e,t,n={name:"moe"},o=function(e){return"name: "+(this.name||e)},i=_.bind(o,n);equal(i(),"name: moe","can bind a function to a context"),i=_(o).bind(n),equal(i(),"name: moe","can do OO-style binding"),i=_.bind(o,null,"curly"),equal(i(),"name: curly","can bind without specifying a context"),o=function(e,t){return e+": "+t},o=_.bind(o,this,"hello"),equal(o("moe"),"hello: moe","the function was partially applied in advance"),o=_.bind(o,this,"curly"),equal(o(),"hello: curly","the function was completely applied in advance"),o=function(e,t,n){return e+": "+t+" "+n},o=_.bind(o,this,"hello","moe","curly"),equal(o(),"hello: moe curly","the function was partially applied in advance and can accept multiple arguments"),o=function(e,t){equal(this,e,t)},_.bind(o,0,0,"can bind a function to `0`")(),_.bind(o,"","","can bind a function to an empty string")(),_.bind(o,!1,!1,"can bind a function to `false`")(),e=function(){return this},t=_.bind(e,{hello:"moe curly"}),equal((new t).hello,void 0,"function should not be bound to the context, to comply with ECMAScript 5"),equal(t().hello,"moe curly","When called without the new operator, it's OK to be bound to the context")}),test("bindAll",function(){var e={name:"curly"},t={name:"moe",getName:function(){return"name: "+this.name},sayHi:function(){return"hi: "+this.name}};e.getName=t.getName,_.bindAll(t,"getName","sayHi"),e.sayHi=t.sayHi,equal(e.getName(),"name: curly","unbound function is bound to current object"),equal(e.sayHi(),"hi: moe","bound function is still bound to original object"),e={name:"curly"},t={name:"moe",getName:function(){return"name: "+this.name},sayHi:function(){return"hi: "+this.name}},_.bindAll(t),e.sayHi=t.sayHi,equal(e.sayHi(),"hi: moe","calling bindAll with no arguments binds all functions to the object")}),test("memoize",function(){var e,t,n=function(e){return 2>e?e:n(e-1)+n(e-2)},o=_.memoize(n);equal(n(10),55,"a memoized version of fibonacci produces identical results"),equal(o(10),55,"a memoized version of fibonacci produces identical results"),e=function(e){return e},t=_.memoize(e),equal(e("toString"),"toString","checks hasOwnProperty"),equal(t("toString"),"toString","checks hasOwnProperty")}),asyncTest("delay",2,function(){var e=!1;_.delay(function(){e=!0},100),setTimeout(function(){ok(!e,"didn't delay the function quite yet")},50),setTimeout(function(){ok(e,"delayed the function"),start()},150)}),asyncTest("defer",1,function(){var e=!1;_.defer(function(t){e=t},!0),_.delay(function(){ok(e,"deferred the function"),start()},50)}),asyncTest("throttle",2,function(){var e=0,t=function(){e++},n=_.throttle(t,100);n(),n(),n(),setTimeout(n,70),setTimeout(n,120),setTimeout(n,140),setTimeout(n,190),setTimeout(n,220),setTimeout(n,240),_.delay(function(){equal(e,1,"incr was called immediately")},30),_.delay(function(){equal(e,4,"incr was throttled"),start()},400)}),asyncTest("throttle arguments",2,function(){var e=0,t=function(t){e=t},n=_.throttle(t,100);n(1),n(2),n(3),setTimeout(function(){n(4)},120),setTimeout(function(){n(5)},140),setTimeout(function(){n(6)},250),_.delay(function(){equal(e,1,"updated to latest value")},40),_.delay(function(){equal(e,6,"updated to latest value"),start()},400)}),asyncTest("throttle once",2,function(){var e=0,t=function(){return++e},n=_.throttle(t,100),o=n();_.delay(function(){equal(o,1,"throttled functions return their value"),equal(e,1,"incr was called once"),start()},220)}),asyncTest("throttle twice",1,function(){var e=0,t=function(){e++},n=_.throttle(t,100);n(),n(),_.delay(function(){equal(e,2,"incr was called twice"),start()},220)}),asyncTest("throttle repeatedly with results",9,function(){var e=0,t=function(){return++e},n=_.throttle(t,100),o=[],i=function(){o.push(n())};i(),i(),i(),setTimeout(i,70),setTimeout(i,120),setTimeout(i,140),setTimeout(i,190),setTimeout(i,240),setTimeout(i,260),_.delay(function(){equal(o[0],1,"incr was called once"),equal(o[1],1,"incr was throttled"),equal(o[2],1,"incr was throttled"),equal(o[3],1,"incr was throttled"),equal(o[4],2,"incr was called twice"),equal(o[5],2,"incr was throttled"),equal(o[6],2,"incr was throttled"),equal(o[7],3,"incr was called thrice"),equal(o[8],3,"incr was throttled"),start()},400)}),asyncTest("debounce",1,function(){var e=0,t=function(){e++},n=_.debounce(t,50);n(),n(),n(),setTimeout(n,30),setTimeout(n,60),setTimeout(n,90),setTimeout(n,120),setTimeout(n,150),_.delay(function(){equal(e,1,"incr was debounced"),start()},220)}),asyncTest("debounce asap",5,function(){var e=0,t=function(){return++e},n=_.debounce(t,50,!0),o=n(),i=n(),a=n();equal(o,1),equal(i,1),equal(a,1),equal(e,1,"incr was called immediately"),setTimeout(n,30),setTimeout(n,60),setTimeout(n,90),setTimeout(n,120),setTimeout(n,150),_.delay(function(){equal(e,1,"incr was debounced"),start()},220)}),asyncTest("debounce asap recursively",2,function(){var e=0,t=_.debounce(function(){e++,5>e&&t()},50,!0);t(),equal(e,1,"incr was called immediately"),_.delay(function(){equal(e,1,"incr was debounced"),start()},70)}),test("once",function(){var e=0,t=_.once(function(){e++});t(),t(),equal(e,1)}),test("wrap",function(){var e,t,n,o,i,a=function(e){return"hi: "+e},u=_.wrap(a,function(e,t){return e(t)+" "+t.split("").reverse().join("")});equal(u("moe"),"hi: moe eom","wrapped the saluation function"),e=function(){return"Hello "},t={name:"Moe"},t.hi=_.wrap(e,function(e){return e()+this.name}),equal(t.hi(),"Hello Moe"),n=function(){},o=_.wrap(n,function(){return Array.prototype.slice.call(arguments,0)}),i=o(["whats","your"],"vector","victor"),deepEqual(i,[n,["whats","your"],"vector","victor"])}),test("compose",function(){var e=function(e){return"hi: "+e},t=function(e){return e+"!"},n=_.compose(t,e);equal(n("moe"),"hi: moe!","can compose a function that takes another"),n=_.compose(e,t),equal(n("moe"),"hi: moe!","in this case, the functions are also commutative")}),test("after",function(){var e=function(e,t){for(var n=0,o=_.after(e,function(){n++});t--;)o();return n};equal(e(5,5),1,"after(N) should fire after being called N times"),equal(e(5,4),0,"after(N) should not fire unless called N times"),equal(e(0,0),1,"after(0) should fire immediately")})});