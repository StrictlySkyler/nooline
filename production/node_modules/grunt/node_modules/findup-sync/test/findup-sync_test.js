"use strict";var path=null,findup=null,rel=function(t){return"string"==typeof t?path.relative(".",t):t};exports.findup={setUp:function(t){this.cwd=process.cwd(),t()},tearDown:function(t){process.chdir(this.cwd),t()},simple:function(t){t.expect(8);var e={cwd:"test/fixtures/a/b"};t.equal(rel(findup("foo.txt",e)),path.normalize("test/fixtures/a/foo.txt"),"should find files"),t.equal(rel(findup("bar.txt",e)),path.normalize("test/fixtures/a/b/bar.txt"),"should find files"),t.equal(rel(findup("a.txt",e)),path.normalize("test/fixtures/a.txt"),"should find files"),t.equal(rel(findup("?.txt",e)),path.normalize("test/fixtures/a.txt"),"should support glob patterns"),t.equal(rel(findup("*.txt",e)),path.normalize("test/fixtures/a/b/bar.txt"),"should find the first thing that matches the glob pattern"),t.equal(rel(findup(["b*.txt","f*.txt"],e)),path.normalize("test/fixtures/a/b/bar.txt"),"should find the first thing that matches any of the glob patterns"),t.equal(rel(findup(["f*.txt","b*.txt"],e)),path.normalize("test/fixtures/a/b/bar.txt"),"should find the first thing that matches any of the glob patterns"),t.equal(findup("not-gonna-exist-i-hope.txt",e),null,"should returning null if no files found"),t.done()},cwd:function(t){t.expect(8),process.chdir("test/fixtures/a/b"),t.equal(rel(findup("foo.txt")),path.normalize("../foo.txt"),"should find files"),t.equal(rel(findup("bar.txt")),"bar.txt","should find files"),t.equal(rel(findup("a.txt")),path.normalize("../../a.txt"),"should find files"),t.equal(rel(findup("?.txt")),path.normalize("../../a.txt"),"should support glob patterns"),t.equal(rel(findup("*.txt")),"bar.txt","should find the first thing that matches the glob pattern"),t.equal(rel(findup(["b*.txt","f*.txt"])),"bar.txt","should find the first thing that matches any of the glob patterns"),t.equal(rel(findup(["f*.txt","b*.txt"])),"bar.txt","should find the first thing that matches any of the glob patterns"),t.equal(findup("not-gonna-exist-i-hope.txt"),null,"should returning null if no files found"),t.done()}};