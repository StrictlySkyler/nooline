$(document).ready(function(){module("Utility"),test("utility: noConflict",function(){var e,t=_.noConflict();ok(t.isUndefined(_),"The '_' variable has been returned to its previous state."),e=t.intersect([-1,0,1,2],[1,2,3,4]),equals(e.join(", "),"1, 2","but the intersection function still works"),window._=t}),test("utility: identity",function(){var e={name:"moe"};equals(_.identity(e),e,"moe is the same as his identity")}),test("utility: uniqueId",function(){for(var e=[],t=0;t++<100;)e.push(_.uniqueId());equals(_.uniq(e).length,e.length,"can generate a globally-unique stream of ids")}),test("utility: times",function(){var e=[];_.times(3,function(t){e.push(t)}),ok(_.isEqual(e,[0,1,2]),"is 0 indexed"),e=[],_(3).times(function(t){e.push(t)}),ok(_.isEqual(e,[0,1,2]),"works as a wrapper")}),test("utility: mixin",function(){_.mixin({myReverse:function(e){return e.split("").reverse().join("")}}),equals(_.myReverse("panacea"),"aecanap","mixed in a function to _"),equals(_("champ").myReverse(),"pmahc","mixed in a function to the OOP wrapper")}),test("utility: _.escape",function(){equals(_.escape("Curly & Moe"),"Curly &amp; Moe"),equals(_.escape("Curly &amp; Moe"),"Curly &amp;amp; Moe")}),test("utility: template",function(){var e,t,i,l,a,n,s,u,o,r,p,m,c,d,h,y,q,f,b,v=_.template("<%= thing %> is gettin' on my noives!"),g=v({thing:"This"});equals(g,"This is gettin' on my noives!","can do basic attribute interpolation"),e=_.template("A <% this %> B"),equals(e(),"A  B"),t=_.template("<%= thing %> is \\ridanculous"),equals(t({thing:"This"}),"This is \\ridanculous"),i=_.template('<%= a ? "checked=\\"checked\\"" : "" %>'),equals(i({a:!0}),'checked="checked"',"can handle slash escapes in interpolations."),l=_.template("<ul><%       for (key in people) {     %><li><%= people[key] %></li><% } %></ul>"),g=l({people:{moe:"Moe",larry:"Larry",curly:"Curly"}}),equals(g,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates"),a=_.template("<ul><% _.each(numbers.split('\\n'), function(item) { %><li><%= item %></li><% }) %></ul>"),g=a({numbers:"one\ntwo\nthree\nfour"}),equals(g,"<ul><li>one</li><li>two</li><li>three</li><li>four</li></ul>","Can use escaped characters (e.g. \\n) in Javascript"),n=_.template('<%= pageCount %> <%= thumbnails[pageCount] %> <% _.each(thumbnails, function(p) { %><div class="thumbnail" rel="<%= p %>"></div><% }); %>'),g=n({pageCount:3,thumbnails:{1:"p1-thumbnail.gif",2:"p2-thumbnail.gif",3:"p3-thumbnail.gif"}}),equals(g,'3 p3-thumbnail.gif <div class="thumbnail" rel="p1-thumbnail.gif"></div><div class="thumbnail" rel="p2-thumbnail.gif"></div><div class="thumbnail" rel="p3-thumbnail.gif"></div>'),s=_.template("<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>"),g=s(),equals(g,"<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>"),u=_.template("It's its, not it's"),equals(u({}),"It's its, not it's"),o=_.template("<%      if(foo == 'bar'){     %>Statement quotes and 'quotes'.<% } %>"),equals(o({foo:"bar"}),"Statement quotes and 'quotes'."),r=_.template("This\n		is: <%= x %>.\n	ok.\nend."),equals(r({x:"that"}),"This\n		is: that.\n	ok.\nend."),p=_.template("<i><%- value %></i>"),g=p({value:"<script>"}),equals(g,"<i>&lt;script&gt;</i>"),m={name:"Moe",template:_.template("I'm <%= this.name %>")},equals(m.template(),"I'm Moe"),$.browser.msie||(c=_.template($("#template").html()),equals(c({data:12345}).replace(/\s/g,""),"<li>24690</li>")),_.templateSettings={evaluate:/\{\{([\s\S]+?)\}\}/g,interpolate:/\{\{=([\s\S]+?)\}\}/g},d=_.template("<ul>{{ for (key in people) { }}<li>{{= people[key] }}</li>{{ } }}</ul>"),g=d({people:{moe:"Moe",larry:"Larry",curly:"Curly"}}),equals(g,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates"),h=_.template("It's its, not it's"),equals(h({}),"It's its, not it's"),o=_.template("{{ if(foo == 'bar'){ }}Statement quotes and 'quotes'.{{ } }}"),equals(o({foo:"bar"}),"Statement quotes and 'quotes'."),_.templateSettings={evaluate:/<\?([\s\S]+?)\?>/g,interpolate:/<\?=([\s\S]+?)\?>/g},y=_.template("<ul><? for (key in people) { ?><li><?= people[key] ?></li><? } ?></ul>"),g=y({people:{moe:"Moe",larry:"Larry",curly:"Curly"}}),equals(g,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates"),q=_.template("It's its, not it's"),equals(q({}),"It's its, not it's"),o=_.template("<? if(foo == 'bar'){ ?>Statement quotes and 'quotes'.<? } ?>"),equals(o({foo:"bar"}),"Statement quotes and 'quotes'."),_.templateSettings={interpolate:/\{\{(.+?)\}\}/g},f=_.template("Hello {{planet}}!"),equals(f({planet:"World"}),"Hello World!","can mimic mustache.js"),b=_.template("a null undefined {{planet}}"),equals(b({planet:"world"}),"a null undefined world","can handle missing escape and evaluate settings")})});