$(document).ready(function(){module("Arrays"),test("arrays: first",function(){equals(_.first([1,2,3]),1,"can pull out the first element of an array"),equals(_([1,2,3]).first(),1,'can perform OO-style "first()"'),equals(_.first([1,2,3],0).join(", "),"","can pass an index to first"),equals(_.first([1,2,3],2).join(", "),"1, 2","can pass an index to first"),equals(_.first([1,2,3],5).join(", "),"1, 2, 3","can pass an index to first");var a=function(){return _.first(arguments)}(4,3,2,1);equals(a,4,"works on an arguments object."),a=_.map([[1,2,3],[1,2,3]],_.first),equals(a.join(","),"1,1","works well with _.map")}),test("arrays: rest",function(){var a,e=[1,2,3,4];equals(_.rest(e).join(", "),"2, 3, 4","working rest()"),equals(_.rest(e,0).join(", "),"1, 2, 3, 4","working rest(0)"),equals(_.rest(e,2).join(", "),"3, 4","rest can take an index"),a=function(){return _(arguments).tail()}(1,2,3,4),equals(a.join(", "),"2, 3, 4","aliased as tail and works on arguments object"),a=_.map([[1,2,3],[1,2,3]],_.rest),equals(_.flatten(a).join(","),"2,3,2,3","works well with _.map")}),test("arrays: initial",function(){equals(_.initial([1,2,3,4,5]).join(", "),"1, 2, 3, 4","working initial()"),equals(_.initial([1,2,3,4],2).join(", "),"1, 2","initial can take an index");var a=function(){return _(arguments).initial()}(1,2,3,4);equals(a.join(", "),"1, 2, 3","initial works on arguments object"),a=_.map([[1,2,3],[1,2,3]],_.initial),equals(_.flatten(a).join(","),"1,2,1,2","initial works with _.map")}),test("arrays: last",function(){equals(_.last([1,2,3]),3,"can pull out the last element of an array"),equals(_.last([1,2,3],0).join(", "),"","can pass an index to last"),equals(_.last([1,2,3],2).join(", "),"2, 3","can pass an index to last"),equals(_.last([1,2,3],5).join(", "),"1, 2, 3","can pass an index to last");var a=function(){return _(arguments).last()}(1,2,3,4);equals(a,4,"works on an arguments object"),a=_.map([[1,2,3],[1,2,3]],_.last),equals(a.join(","),"3,3","works well with _.map")}),test("arrays: compact",function(){equals(_.compact([0,1,!1,2,!1,3]).length,3,"can trim out all falsy values");var a=function(){return _(arguments).compact().length}(0,1,!1,2,!1,3);equals(a,3,"works on an arguments object")}),test("arrays: flatten",function(){var a,e;window.JSON&&(a=[1,[2],[3,[[[4]]]]],equals(JSON.stringify(_.flatten(a)),"[1,2,3,4]","can flatten nested arrays"),equals(JSON.stringify(_.flatten(a,!0)),"[1,2,3,[[[4]]]]","can shallowly flatten nested arrays"),e=function(){return _.flatten(arguments)}(1,[2],[3,[[[4]]]]),equals(JSON.stringify(e),"[1,2,3,4]","works on an arguments object"))}),test("arrays: without",function(){var a,e=[1,2,1,0,3,1,4];equals(_.without(e,0,1).join(", "),"2, 3, 4","can remove all instances of an object"),a=function(){return _.without(arguments,0,1)}(1,2,1,0,3,1,4),equals(a.join(", "),"2, 3, 4","works on an arguments object"),e=[{one:1},{two:2}],ok(2==_.without(e,{one:1}).length,"uses real object identity for comparisons."),ok(1==_.without(e,e[0]).length,"ditto.")}),test("arrays: uniq",function(){var a,e,n=[1,2,1,3,1,4];equals(_.uniq(n).join(", "),"1, 2, 3, 4","can find the unique values of an unsorted array"),n=[1,1,1,2,2,3],equals(_.uniq(n,!0).join(", "),"1, 2, 3","can find the unique values of a sorted array faster"),n=[{name:"moe"},{name:"curly"},{name:"larry"},{name:"curly"}],a=function(a){return a.name},equals(_.map(_.uniq(n,!1,a),a).join(", "),"moe, curly, larry","can find the unique values of an array using a custom iterator"),a=function(a){return a+1},n=[1,2,2,3,4,4],equals(_.uniq(n,!0,a).join(", "),"1, 2, 3, 4","iterator works with sorted array"),e=function(){return _.uniq(arguments)}(1,2,1,3,1,4),equals(e.join(", "),"1, 2, 3, 4","works on an arguments object")}),test("arrays: intersection",function(){var a,e=["moe","curly","larry"],n=["moe","groucho"];equals(_.intersection(e,n).join(""),"moe","can take the set intersection of two arrays"),equals(_(e).intersection(n).join(""),"moe","can perform an OO-style intersection"),a=function(){return _.intersection(arguments,n)}("moe","curly","larry"),equals(a.join(""),"moe","works on an arguments object")}),test("arrays: union",function(){var a=_.union([1,2,3],[2,30,1],[1,40]);equals(a.join(" "),"1 2 3 30 40","takes the union of a list of arrays"),a=_.union([1,2,3],[2,30,1],[1,40,[1]]),equals(a.join(" "),"1 2 3 30 40 1","takes the union of a list of nested arrays")}),test("arrays: difference",function(){var a=_.difference([1,2,3],[2,30,40]);equals(a.join(" "),"1 3","takes the difference of two arrays"),a=_.difference([1,2,3,4],[2,30,40],[1,11,111]),equals(a.join(" "),"3 4","takes the difference of three arrays")}),test("arrays: zip",function(){var a=["moe","larry","curly"],e=[30,40,50],n=[!0],t=_.zip(a,e,n);equals(t+"","moe,30,true,larry,40,,curly,50,","zipped together arrays of different lengths")}),test("arrays: indexOf",function(){var a,e,n,t=[1,2,3];t.indexOf=null,equals(_.indexOf(t,2),1,"can compute indexOf, even without the native function"),a=function(){return _.indexOf(arguments,2)}(1,2,3),equals(a,1,"works on an arguments object"),equals(_.indexOf(null,2),-1,"handles nulls properly"),t=[10,20,30,40,50],e=35,n=_.indexOf(t,e,!0),equals(n,-1,"35 is not in the list"),t=[10,20,30,40,50],e=40,n=_.indexOf(t,e,!0),equals(n,3,"40 is in the list"),t=[1,40,40,40,40,40,40,40,50,60,70],e=40,n=_.indexOf(t,e,!0),equals(n,1,"40 is in the list")}),test("arrays: lastIndexOf",function(){var a,e=[1,0,1,0,0,1,0,0,0];e.lastIndexOf=null,equals(_.lastIndexOf(e,1),5,"can compute lastIndexOf, even without the native function"),equals(_.lastIndexOf(e,0),8,"lastIndexOf the other element"),a=function(){return _.lastIndexOf(arguments,1)}(1,0,1,0,0,1,0,0,0),equals(a,5,"works on an arguments object"),equals(_.indexOf(null,2),-1,"handles nulls properly")}),test("arrays: range",function(){equals(_.range(0).join(""),"","range with 0 as a first argument generates an empty array"),equals(_.range(4).join(" "),"0 1 2 3","range with a single positive argument generates an array of elements 0,1,2,...,n-1"),equals(_.range(5,8).join(" "),"5 6 7","range with two arguments a &amp; b, a&lt;b generates an array of elements a,a+1,a+2,...,b-2,b-1"),equals(_.range(8,5).join(""),"","range with two arguments a &amp; b, b&lt;a generates an empty array"),equals(_.range(3,10,3).join(" "),"3 6 9","range with three arguments a &amp; b &amp; c, c &lt; b-a, a &lt; b generates an array of elements a,a+c,a+2c,...,b - (multiplier of a) &lt; c"),equals(_.range(3,10,15).join(""),"3","range with three arguments a &amp; b &amp; c, c &gt; b-a, a &lt; b generates an array with a single element, equal to a"),equals(_.range(12,7,-2).join(" "),"12 10 8","range with three arguments a &amp; b &amp; c, a &gt; b, c &lt; 0 generates an array of elements a,a-c,a-2c and ends with the number not less than b"),equals(_.range(0,-10,-1).join(" "),"0 -1 -2 -3 -4 -5 -6 -7 -8 -9","final example in the Python docs")})});