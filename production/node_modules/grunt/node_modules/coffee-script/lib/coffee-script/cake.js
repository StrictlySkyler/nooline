(function(){var n,e,r,o,i,l,t,a,s,c,u,f,p;o=null,c=null,i=null,s=null,n=null,p={},a={},f=[],t=null,i.extend(global,{task:function(n,e,r){var o;return r||(o=[e,r],r=o[0],e=o[1]),p[n]={name:n,description:e,action:r}},option:function(n,e,r){return f.push([n,e,r])},invoke:function(n){return p[n]||l(n),p[n].action(a)}}),exports.run=function(){var i,l,c,p,g,h;if(global.__originalDirname=o.realpathSync("."),process.chdir(e(__originalDirname)),l=process.argv.slice(2),n.run(""+o.readFileSync("Cakefile"),{filename:"Cakefile"}),t=new s.OptionParser(f),!l.length)return u();try{a=t.parse(l)}catch(k){return r(""+k)}for(g=a.arguments,h=[],c=0,p=g.length;p>c;c++)i=g[c],h.push(invoke(i));return h},u=function(){var n,e,r,o,i,l;o=c.relative||c.resolve,n=c.join(o(__originalDirname,process.cwd()),"Cakefile"),console.log(""+n+" defines the following tasks:\n");for(r in p)l=p[r],i=20-r.length,i=i>0?Array(i+1).join(" "):"",e=l.description?"# "+l.description:"",console.log("cake "+r+i+" "+e);return f.length?console.log(t.help()):void 0},r=function(n){return console.error(n+"\n"),console.log('To see a list of all tasks/options, run "cake"'),process.exit(1)},l=function(n){return r("No such task: "+n)},e=function(n){var r;if(c.existsSync(c.join(n,"Cakefile")))return n;if(r=c.normalize(c.join(n,"..")),r!==n)return e(r);throw Error("Cakefile not found in "+process.cwd())}}).call(this);