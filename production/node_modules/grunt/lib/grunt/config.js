/*
 * grunt
 * http://gruntjs.com/
 *
 * Copyright (c) 2013 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 * https://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
 */

"use strict";var propStringTmplRe,grunt=null,config=module.exports=function(n,t){return 2===arguments.length?config.set(n,t):config.get(n)};config.data={},config.escape=function(n){return n.replace(/\./g,"\\.")},config.getPropString=function(n){return Array.isArray(n)?n.map(config.escape).join("."):n},config.getRaw=function(n){return n?grunt.util.namespace.get(config.data,config.getPropString(n)):config.data},propStringTmplRe=/^<%=\s*([a-z0-9_$]+(?:\.[a-z0-9_$]+)*)\s*%>$/i,config.get=function(n){return config.process(config.getRaw(n))},config.process=function(n){return grunt.util.recurse(n,function(n){var t,r;return"string"!=typeof n?n:(t=n.match(propStringTmplRe),t&&(r=config.get(t[1]),null!=r)?r:grunt.template.process(n,{data:config.data}))})},config.set=function(n,t){return grunt.util.namespace.set(config.data,config.getPropString(n),t)},config.init=function(n){return grunt.verbose.write("Initializing config...").ok(),config.data=n||{}},config.requires=function(){var n,t=grunt.util.pluralize,r=grunt.util.toArray(arguments).map(config.getPropString),e="Verifying propert"+t(r.length,"y/ies")+" "+grunt.log.wordlist(r)+" exist"+t(r.length,"s")+" in config...";if(grunt.verbose.write(e),n=config.data&&r.filter(function(n){return null==config.get(n)}).map(function(n){return'"'+n+'"'}),config.data&&0===n.length)return grunt.verbose.ok(),!0;throw grunt.verbose.or.write(e),grunt.log.error().error("Unable to process task."),config.data?grunt.util.error("Required config propert"+t(n.length,"y/ies")+" "+n.join(", ")+" missing."):grunt.util.error("Unable to load config.")};