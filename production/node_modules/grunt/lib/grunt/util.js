/*
 * grunt
 * http://gruntjs.com/
 *
 * Copyright (c) 2013 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 * https://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
 */

"use strict";var _,which,kindsOf,spawn=null.spawn,nodeUtil=null,path=null,util=module.exports={};util.task=null,util.namespace=null,util.exit=null.exit,util.hooker=null,util.async=null,_=util._=null,which=null.sync,_.str=null,_.mixin(_.str.exports()),util.callbackify=function(n){return function(){var t,r=n.apply(this,arguments),u=arguments.length;u!==n.length&&(t=arguments[u-1],"function"==typeof t&&t(r))}},util.error=function(n,t){return nodeUtil.isError(n)||(n=Error(n)),t&&(n.origError=t),n},util.linefeed="win32"===process.platform?"\r\n":"\n",util.normalizelf=function(n){return n.replace(/\r\n|\n/g,util.linefeed)},kindsOf={},"Number String Boolean Function RegExp Array Date Error".split(" ").forEach(function(n){kindsOf["[object "+n+"]"]=n.toLowerCase()}),util.kindOf=function(n){return null==n?n+"":kindsOf[kindsOf.toString.call(n)]||"object"},util.toArray=Function.call.bind(Array.prototype.slice),util.repeat=function(n,t){return Array(n+1).join(t||" ")},util.pluralize=function(n,t,r){var u=t.split(r||"/");return 1===n?u[0]||"":u[1]||""},util.recurse=function n(t,r,u){var i;return u&&u(t)===!1?t:"array"===util.kindOf(t)?t.map(function(t){return n(t,r,u)}):"object"===util.kindOf(t)?(i={},Object.keys(t).forEach(function(e){i[e]=n(t[e],r,u)}),i):r(t)},util.spawn=function(n,t){var r,u,i,e,l,o=function(r,u,i){u=_.rtrim(u),i=_.rtrim(i);var e={stdout:u,stderr:i,code:r,toString:function(){return 0===r?u:"fallback"in n?n.fallback:n.grunt?i||u:i}};t(0===r||"fallback"in n?null:Error(i),e,r)},a=/[\\\/]/g;if(n.grunt)r=process.argv[0],u=[process.argv[1]].concat(n.args);else{try{r=a.test(n.cmd)?n.cmd.replace(a,path.sep):which(n.cmd)}catch(c){return o(127,"",c+""),void 0}u=n.args}return i=spawn(r,u,n.opts),e=new Buffer(""),l=new Buffer(""),i.stdout&&i.stdout.on("data",function(n){e=Buffer.concat([e,new Buffer(n)])}),i.stderr&&i.stderr.on("data",function(n){l=Buffer.concat([l,new Buffer(n)])}),i.on("close",function(n){o(n,""+e,""+l)}),i};