/*
 * grunt
 * http://gruntjs.com/
 *
 * Copyright (c) 2013 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 * https://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
 */

"use strict";var parsed,grunt=null,path=null,nopt=null,cli=module.exports=function(t,e){t&&Object.keys(t).forEach(function(e){e in cli.options?cli.optlist[e].type===Array&&[].push.apply(cli.options[e],t[e]):cli.options[e]=t[e]}),grunt.tasks(cli.tasks,cli.options,e)},optlist=cli.optlist={help:{"short":"h",info:"Display this help text.",type:Boolean},base:{info:"Specify an alternate base path. By default, all file paths are relative to the Gruntfile. (grunt.file.setBase) *",type:path},color:{info:"Disable colored output.",type:Boolean,negate:!0},gruntfile:{info:"Specify an alternate Gruntfile. By default, grunt looks in the current or parent directories for the nearest Gruntfile.js or Gruntfile.coffee file.",type:path},debug:{"short":"d",info:"Enable debugging mode for tasks that support it.",type:Number},stack:{info:"Print a stack trace when exiting with a warning or fatal error.",type:Boolean},force:{"short":"f",info:"A way to force your way past warnings. Want a suggestion? Don't use this option, fix your code.",type:Boolean},tasks:{info:'Additional directory paths to scan for task and "extra" files. (grunt.loadTasks) *',type:Array},npm:{info:'Npm-installed grunt plugins to scan for task and "extra" files. (grunt.loadNpmTasks) *',type:Array},write:{info:"Disable writing files (dry run).",type:Boolean,negate:!0},verbose:{"short":"v",info:"Verbose mode. A lot more information output.",type:Boolean},version:{"short":"V",info:"Print the grunt version. Combine with --verbose for more info.",type:Boolean},completion:{info:"Output shell auto-completion rules. See the grunt-cli documentation for more information.",type:String}},aliases={},known={};Object.keys(optlist).forEach(function(t){var e=optlist[t].short;e&&(aliases[e]="--"+t),known[t]=optlist[t].type}),parsed=nopt(known,aliases,process.argv,2),cli.tasks=parsed.argv.remain,cli.options=parsed,delete parsed.argv,Object.keys(optlist).forEach(function(t){optlist[t].type!==Array||t in cli.options||(cli.options[t]=[])});