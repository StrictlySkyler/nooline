/*
 * grunt
 * http://gruntjs.com/
 *
 * Copyright (c) 2013 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 * https://github.com/gruntjs/grunt/blob/master/LICENSE-MIT
 */

"use strict";function gRequire(e){return grunt[e]=require("./grunt/"+e)}function gExpose(e,t,i){grunt[i||t]=e[t].bind(e)}var grunt,util,fail,option,config,task,log,help,verbose,path=null;grunt=module.exports={},util=gRequire("util"),gRequire("template"),gRequire("event"),fail=gRequire("fail"),gRequire("file"),option=gRequire("option"),config=gRequire("config"),task=gRequire("task"),log=gRequire("log"),help=gRequire("help"),gRequire("cli"),verbose=grunt.verbose=log.verbose,grunt.package=null,grunt.version=grunt.package.version,gExpose(task,"registerTask"),gExpose(task,"registerMultiTask"),gExpose(task,"registerInitTask"),gExpose(task,"renameTask"),gExpose(task,"loadTasks"),gExpose(task,"loadNpmTasks"),gExpose(config,"init","initConfig"),gExpose(fail,"warn"),gExpose(fail,"fatal"),grunt.tasks=function(e,t,i){var o,n,r,s;return option.init(t),option("version")?(log.writeln("grunt v"+grunt.version),option("verbose")&&(verbose.writeln("Install path: "+path.resolve(__dirname,"..")),grunt.log.muted=!0,grunt.task.init([],{help:!0}),grunt.log.muted=!1,o=Object.keys(grunt.task._tasks).sort(),verbose.writeln("Available tasks: "+o.join(" ")),n=[],Object.keys(grunt.cli.optlist).forEach(function(e){var t=grunt.cli.optlist[e];n.push("--"+(t.negate?"no-":"")+e),t.short&&n.push("-"+t.short)}),verbose.writeln("Available options: "+n.join(" "))),void 0):(log.initColors(),option("help")?(help.display(),void 0):(verbose.header("Initializing").writeflags(option.flags(),"Command-line options"),r=e&&e.length>0,e=task.parseArgs([r?e:"default"]),task.init(e),verbose.writeln(),r||verbose.writeln("No tasks specified, running default tasks."),verbose.writeflags(e,"Running tasks"),s=function(e){fail.fatal(e,fail.code.TASK_FAILURE)},process.on("uncaughtException",s),task.options({error:function(e){fail.warn(e,fail.code.TASK_FAILURE)},done:function(){process.removeListener("uncaughtException",s),fail.report(),i?i():util.exit(0)}}),e.forEach(function(e){task.run(e)}),task.start(),void 0))};