{
	"type": "about",
	"name": "about-1",
	"published": true,
	"date": "2/29/2012 at 23:9:29",
	"author": "skyler",
	"title": "A Little Bit About \\nooline",
	"body": "<p>\\nooline is built on top of <a href=\"http://nodejs.org\" target=\"_blank\">node.js</a>, using straight-up HTML5, CSS3, and JavaScript.  It's framework agnostic, allowing for the use of a framework of any given developer's choice (jQuery, YUI, etc.), or none at all (they're all just straight JS, after all).</p>\n\n<p>\\nooline is built with two key driving factors in mind:</p>\n\n<ol>\n  <li>Creating and editing content on a website should be simple enough that my mother could do it (and she ain't techy).</li>\n  <li>The bulk of the work of the CMS should be done by the Client; namely, the browser viewing the page.</li>\n</ol>\n\n<p>This first factor is key; most Content Management Systems nowadays require a mixture of a back-end developer, a front-end developer, and a database admin.  While there are certainly many people who have these skills, the sad fact is that the folks who end up using the site, entering content, and generally maintaining it lack them â€” specifically, the \"back-end\" parts are uncommon amongst the content-entry user base, while HTML, CSS, and JS knowledge is a little more widespread.  \\nooline attempts to address this by minimizing as much of what the server is responsible for as possible, while being built entirely out of JavaScript, markup, and styling.</p>\n\n<p>As for the second factor, with the increasing speed of JavaScript engines used by modern browsers, along with the rich functionality offered by HTML5 and CSS3, the need for a server to handle the bulk of what services a rich web application might need (authentication, validation, sorting, caching, etc.) are fast reducing.  By pushing as much of this work onto the browser as possible, much less server resource is needed, while providing an opportunity for a more consistent user experience independent of whether the user's client is able to reach the server or not.</p>\n\n<p>In the building of \\nooline there were also a few happy discoveries which have a strong impact upon how \\nooline is built; things such as sharing the same piece of code between client and server and using a single page architecture with no page refreshes are examples.</p>"
}