{
	"startDate": "2013,10,27",
	"endDate": "",
	"prettyStartDate": "Sunday, October 10th, 2013",
	"prettyEndDate": "",
	"startTime": "20:48:35",
	"endTime": "",
	"prettyStartTime": "08:48:35 pm",
	"prettyEndTime": "",
	"author": "admin",
	"published": true,
	"tag": "nooline",
	"asset": {
		"media": "",
		"thumbnail": "",
		"credit": "",
		"caption": ""
	},
	"headline": "Documentation!",
	"text": "<h4>What is nooline?</h4><p>It's a content management system focused on making managing content drop-dead simple, super-extra easy. The goal of the platform is to reduce the time it takes not only to push out new content, but also update and modify the platform itself to be used in a new context.</p><h4>A note on pronunciation</h4><p>When talking about \"\\nooline\", I always tend to pronounce it phonetically, as in \"NEW-line\", and its eponymous character. It's worth calling out, however, that there could be a case made for calling it \"NO-align\", as the name is common in structure to <a data-cke-saved-href=\"http://en.wikipedia.org/wiki/Noosphere\" href=\"http://en.wikipedia.org/wiki/Noosphere\" target=\"_blank\">\"noosphere\"</a>, and indeed the idea for the project was influenced by that concept and <a data-cke-saved-href=\"http://www.catb.org/~esr/writings/homesteading/homesteading/\" href=\"http://www.catb.org/~esr/writings/homesteading/homesteading/\" target=\"_blank\">Eric Raymond's article</a> about it.</p><p>All of that said, pronunciation isn't so big a deal as to pick a nit over it.</p><h4>Another CMS? WTF.</h4><p>There are plenty of other CMS platforms out in the wild today, and even a few running on node.js (which \\n runs on also), but none that hit quite the right sweet spot for my taste. Having worked on a number of these over the years, and being possessed of a desire to dive into and learn new tech, I decided I'd scratch my particular itch myself.</p><p>\\n will attempt to do things that those platforms are unable to accomplish due to technical reasons, lack of support, divergence in philosophy, or any number of other reasons.</p><h4>The Philosophy</h4><p>There is a core set of principles which guide my development with \\n. They are:</p><ol><li><strong>There should be a <em>near-zero</em> amount of training time required to let a content editor use the platform.</strong> All controls should be blatantly self-evident in use, and naming conventions should be painstakingly easy to understand. Don't refresh the page or go to a new one unless it's 100% unavoidable.</li><li><strong>Editing and modifying the system should require <em>minimal</em> amounts of work.</strong> Where possible, share code between client and server, and rely upon native functionality within browsers or node. Store data in simple structures.</li><li><strong>Push as much work to the <em>client</em> as is reasonably possible.</strong> JavaScript engines in clients are blazingly fast. Save the server the work, and let the client do as much of it as it can. This should not compromise the end user experience.</li><li><strong><em>As few dependencies as possible</em> should be needed to stand up and run and instance.</strong> The platform should remain as agnostic as possible with regards to other frameworks and modules, and the number of tightly-coupled platforms should be kept to a minimum.</li><li><strong>The End User Experience is <em>never</em> compromised to due technical challenges.</strong> This is the most important part, and it includes web admins, content editors, and developers as End Users.</li></ol><p>For a related and simple set of informing guidelines, see <a data-cke-saved-href=\"http://en.wikipedia.org/wiki/Unix_philosophy\" href=\"http://en.wikipedia.org/wiki/Unix_philosophy\" target=\"_blank\">The Unix Philosophy</a>.</p><h4>How it works</h4><p>\\n is built on a straight node.js stack, and is independent of any specific frameworks. It is built using html5, CSS3, and JavaScript, transmits and stores its data in JSON and flat text files, and defers as much work as is possible on the back-end to the operating system's native capabilities. All content loading, updating, and creating is done via AJAX, and html snapshots are taken to provide support for those web bots that don't do it themselves, or aren't headless browsers.</p><p>The following are key components of the \\n stack:</p><h5>node.js</h5><p>The asynchronous, fast, JavaScript-based environment of node seemed like an obvious choice for this platform. Sharing code between client and server brings the potential to make plugins rapidly and quickly, and reduces the level of effort or number of people required to modify the system. Where possible, keeping node as the primary server-side tech is ideal.</p><h5>html5 &amp; Modern Browsers</h5><p>There's really no reason not to use html5 nowadays, in my opinion. :-) There are plenty of polyfills available for anyone who wants to include out-of-date browsers. The core of \\n, however, should stay current with the latest browsers, and leave dinosaurs to become extinct where applicable.</p><h5>Straight-up JS</h5><p>Frameworks are excellent. You should use one. \\n doesn't advocate any one framework in favor of another; this choice should be left up to the development team. For this reason, any plugins/extensions/core-parts should be agnostic to any given framework.</p><h4>Theoretical Applications</h4><p>In theory, much of \\n could be ported to another framework outside of node (apache, nginx, etc.), or paired with different code (php, java, etc.). If this means providing a better user experience than the existing platform \\n would be replacing, then by all means it's a win.</p><h4>Want to contribute?</h4><p>The following things are officially on the list of things which need doing:</p><ul><li>Add a WYSIWYG</li><li>Flesh out the Admin Control Panel</li><li>Finer grain edited controls (added vs. edited, preview, etc.)</li><li>User roles &amp; permissions</li><li>Better security checks</li><li>Implement a drop-dead simple, super extra easy plugin system</li></ul><p>Head on over to <a data-cke-saved-href=\"https://github.com/StrictlySkyler/nooline\" href=\"https://github.com/StrictlySkyler/nooline\" target=\"_blank\">the github repo</a> and submit a pull request!</p><p>âœŒ</p>",
	"index": 10,
	"uuid": "d6bb8351-eb3a-450f-91e4-6fb48df6bff4",
	"type": "scroll",
	"url": "/scroll/10"
}