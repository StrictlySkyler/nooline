{
	"asset": {
		"media": "",
		"thumbnail": "",
		"credit": "",
		"caption": ""
	},
	"author": "admin",
	"endDate": "",
	"endTime": "",
	"headline": "What's It All About?",
	"index": 10,
	"prettyStartDate": "Saturday, July 7th, 2014",
	"prettyStartTime": "07:02:05 pm",
	"published": true,
	"startDate": "2014,7,19",
	"startTime": "19:2:5",
	"tag": "nooline",
	"text": "<p>Nooline is a platform built for making content management utterly, starkly simple. &nbsp;It supports multiple users&nbsp;and multiple sites right out of the box.</p><p>It's <em>scalable, fast, extensible,</em> and written entirely in JavaScript.</p><p>It is currently in a \"stable alpha\" development phase.</p><h4>Content Management is Dead, Long Live Content Management</h4><p>The era of page redirects, mandatory admin dashboards, and content \"previews\" is over. &nbsp;Today's content demands that we be able to edit content where it exists on a page, as it looks when it's live, without barriers. &nbsp;It demands that we shouldn't sacrifice SEO concerns for rich, asyncronous web interactions. &nbsp;It demands that the framework shouldn't require a learning curve.</p><p>An efficient framework doesn't need to sacrifice good architecture for extensibility or user experience, and vice-versa.</p><p>Our time is too important to be mucking around with a framework's specific details. &nbsp;We should be creating new things instead.</p><h4>The Principles</h4><p>There is a core set of principles which guide how Nooline is built:</p><ol><li><strong>There should be a <em>near-zero</em> amount of training time required to let a content editor use the platform.</strong> All controls should be blatantly self-evident in use, and naming conventions should be painstakingly easy to understand.</li><li>Don't refresh the page or go to a new one unless it's 100% unavoidable. &nbsp;Maintain the user's context if at all possible.</li><li><strong>Modifying the system should require <em>minimal</em> amounts of work. &nbsp;Store data in simple structures.</strong></li><li><strong>Share code between client and server where possible. &nbsp;This will keep the codebase smaller&nbsp;and lead&nbsp;to better technical design.</strong></li><li><strong>Push as much work to the client as is reasonably possible.</strong> This must not impact user experience.</li><li>Build components with \"Offline-First\" in mind. &nbsp;Follow that with \"Mobile-First\". &nbsp;Finally, address wider screens.</li></ol><p>For a related and simple set of informing guidelines, see <a data-cke-saved-href=\"http://en.wikipedia.org/wiki/Unix_philosophy\" href=\"http://en.wikipedia.org/wiki/Unix_philosophy\" target=\"_blank\">The Unix Philosophy</a>.</p><h4>How It Works</h4><p>Nooline is built <a data-cke-saved-href=\"http://nerds.airbnb.com/isomorphic-javascript-future-web-apps/\" href=\"http://nerds.airbnb.com/isomorphic-javascript-future-web-apps/\">Isomorphically</a> – that is to say, much of its code can execute both on in the browser and on the server. &nbsp;It follows patterns found in many MV*&nbsp;frameworks, and relies upon a core set of components with wide-spread community use.</p><p>Under the hood, Nooline uses a simple, extensible stack: <a data-cke-saved-href=\"http://expressjs.com/\" href=\"http://expressjs.com/\">Express</a>, <a data-cke-saved-href=\"http://backbonejs.org/\" href=\"http://backbonejs.org/\">Backbone</a>, and <a data-cke-saved-href=\"http://requirejs.org/\" href=\"http://requirejs.org/\">RequireJS</a>.</p><h4>Want to contribute?</h4><p>The following things are officially on the list of things which need doing, in no particular order:</p><ul><li>Abstract the Timeline into a plugin</li><li>Create a plugin-management panel</li><li>Add behavior for editing and creating sites</li><li>Enable content creation on a page which has none currently</li><li>Finer grain edited controls (added vs. edited, preview, etc.)</li><li>Wire up widgets for user creation and management</li><li>User roles &amp; permissions</li><li>Published/Unpublished for snippets</li><li>Better timeout &amp; security checks</li><li>Broadcast events when content is loading&nbsp;at various points</li><li>Content editing incrementing bug</li></ul><p>Head on over to <a data-cke-saved-href=\"https://github.com/StrictlySkyler/nooline\" href=\"https://github.com/StrictlySkyler/nooline\" target=\"_blank\">the github repo</a> and submit a pull request!</p><p>✌</p>",
	"type": "scroll",
	"url": "/scroll/10",
	"uuid": "d6bb8351-eb3a-450f-91e4-6fb48df6bff4",
	"prettyEndDate": "",
	"prettyEndTime": ""
}