{
  "name": "xml",
  "version": "0.0.7",
  "description": "Fast and simple xml generator. Supports attributes, CDATA, etc. Includes tests and examples.",
  "homepage": "http://github.com/dylang/node-xml",
  "keywords": [
    "xml",
    "create",
    "builder"
  ],
  "author": {
    "name": "Dylan Greene",
    "url": "https://github.com/dylang"
  },
  "contributors": [
    {
      "name": "Dylan Greene",
      "url": "https://github.com/dylang"
    },
    {
      "name": "Dodo",
      "url": "https://github.com/dodo"
    },
    {
      "name": "Felix Geisendrfer",
      "url": "felix@debuggable.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/dylang/node-xml"
  },
  "bugs": {
    "url": "http://github.com/dylang/node-xml/issues"
  },
  "devDependencies": {
    "nodeunit": "*",
    "logging": "*"
  },
  "scripts": {
    "test": "nodeunit test"
  },
  "main": "index.js",
  "engines": {
    "node": ">=0.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/dylang/node-xml/raw/master/LICENSE"
    }
  ],
  "readme": "# XML for Node\n\n  Fast and simple Javascript-based XML generator/builder for Node projects.\n\n## Install\n\n   $ npm install xml\n\n## Examples\n\n There are examples in the examples directory.\n\n## Tests\n\n Use [nodeunit](https://github.com/caolan/nodeunit) to run the tests.\n\n    $ npm install nodeunit\n    $ nodeunit test\n\nEverything should pass:\n\n    test\n    ✔ empty\n    ✔ simple\n    ✔ deep\n    ✔ indent\n    ✔ attributes\n    ✔ cdata\n    ✔ encoding\n    ✔ stream\n\n    OK: 33 assertions (7ms)\n\n## API\n    XML(object, [indent || options])\n\n  * `object` See Usage for how this can work.\n  * `indent` Falsy value: No indent or line breaks (default). True: 4 spaces. `\\t`: Single tab. `  `: Two spaces.  Etc.\n  * `options` 'indent': same as `indent`, 'stream': force result to be a stream\n\n## Examples\n\n    var XML = require('xml');\n\n**Simple Example**\n\n    var example1 = [ { url: 'http://www.google.com/search?aq=f&sourceid=chrome&ie=UTF-8&q=opower' } ];\n    console.log(XML(example1));\n    //<url>http://www.google.com/search?aq=f&amp;sourceid=chrome&amp;ie=UTF-8&amp;q=opower</url>\n\n**Example with attributes**\n\n    var example2 = [ { url: { _attr: { hostname: 'www.google.com', path: '/search?aq=f&sourceid=chrome&ie=UTF-8&q=opower' }  } } ];\n    console.log(XML(example2));\n    //<url hostname=\"www.google.com\" path=\"/search?aq=f&amp;sourceid=chrome&amp;ie=UTF-8&amp;q=opower\"/>\n\n**Example with array of same-named elements and nice formating**\n\n    var example3 = [ { toys: [ { toy: 'Transformers' } , { toy: 'GI Joe' }, { toy: 'He-man' } ] } ];\n    console.log(XML(example3));\n    //<toys><toy>Transformers</toy><toy>GI Joe</toy><toy>He-man</toy></toys>\n    console.log(XML(example3, true));\n    /*\n    <toys>\n        <toy>Transformers</toy>\n        <toy>GI Joe</toy>\n        <toy>He-man</toy>\n    </toys>\n    */\n\n**More complex example**\n\n    var example4 = [ { toys: [ { _attr: { decade: '80s', locale: 'US'} }, { toy: 'Transformers' } , { toy: 'GI Joe' }, { toy: 'He-man' } ] } ];\n    console.log(XML(example4, true));\n    /*\n    <toys decade=\"80s\" locale=\"US\">\n        <toy>Transformers</toy>\n        <toy>GI Joe</toy>\n        <toy>He-man</toy>\n    </toys>\n    */\n\n**Even more complex example**\n\n    var example5 = [ { toys: [ { _attr: { decade: '80s', locale: 'US'} }, { toy: 'Transformers' } , { toy: [ { _attr: { knowing: 'half the battle' } }, 'GI Joe'] }, { toy: [ { name: 'He-man' }, { description: { _cdata: '<strong>Master of the Universe!</strong>'} } ] } ] } ];\n    console.log(XML(example5, true));\n    /*\n    <toys><toy>Transformers</toy><toy>GI Joe</toy><toy>He-man</toy></toys>\n    <toys>\n        <toy>Transformers</toy>\n        <toy>GI Joe</toy>\n        <toy>He-man</toy>\n    </toys>\n    <toys decade=\"80s\" locale=\"US\">\n        <toy>Transformers</toy>\n        <toy>GI Joe</toy>\n        <toy>He-man</toy>\n    </toys>\n    <toys decade=\"80s\" locale=\"US\">\n        <toy>Transformers</toy>\n        <toy knowing=\"half the battle\">\n            GI Joe\n        </toy>\n        <toy>\n            <name>He-man</name>\n            <description><![CDATA[<strong>Master of the Universe!</strong>]]></description>\n        </toy>\n    </toys>\n    */\n\n**Stream Example**\n\n    var elem = XML.Element({ _attr: { decade: '80s', locale: 'US'} });\n    var xml = XML({ toys: elem }, true);\n    xml.on('data', function (chunk) {console.log(\"data:\", chunk)});\n    elem.push({ toy: 'Transformers' });\n    elem.push({ toy: 'GI Joe' });\n    elem.push({ toy: [{name:'He-man'}] });\n    elem.close();\n\n    /*\n    data: <toys decade=\"80s\" locale=\"US\">\n    data:     <toy>Transformers</toy>\n    data:     <toy>GI Joe</toy>\n    data:     <toy>\n            <name>He-man</name>\n        </toy>\n    data: </toys>\n    */\n\n\n## Keywords\n\n * `_attr`: set attributes using a hash of key/value pairs.\n * `_cdata`: Value of _cdata is wrapped in xml CDATA so the data does not need to be escaped.\n\n\n# Contributing\n\nContributions to the project are welcome. Feel free to fork and improve. I accept pull requests and issues,\nespecially when tests are included.\n\n# License\n\n(The MIT License)\n\nCopyright (c) 2011 Dylan Greene <dylang@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "readme.md",
  "_id": "xml@0.0.7",
  "dist": {
    "shasum": "e6e79b854c966578c21e9f4166f2e0a4dbaac5a6"
  },
  "_from": "xml@~0.0.4",
  "_resolved": "https://registry.npmjs.org/xml/-/xml-0.0.7.tgz"
}
