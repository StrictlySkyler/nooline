{
  "name": "express-chrome-logger",
  "description": "Debug your express app using the Chrome console.",
  "version": "0.1.3",
  "author": {
    "name": "Ola HolmstrÃ¶m",
    "email": "olaholmstrom+github@gmail.com"
  },
  "contributors": [
    {
      "name": "Ryan Wu",
      "email": "flyworld@gmail.com"
    }
  ],
  "keywords": [
    "middleware",
    "debugging",
    "logging",
    "logger",
    "chrome",
    "express"
  ],
  "main": "./index.js",
  "repository": {
    "type": "git",
    "url": "http://github.com/olahol/express-chrome-logger.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/olahol/express-chrome-logger/raw/master/LICENSE"
    }
  ],
  "engines": {
    "node": ">= 0.6.0"
  },
  "readme": "# express-chrome-logger\n\nDebug your express app using the Chrome console.\n\n## Install\n\nInstall the chrome extension from https://chrome.google.com/webstore/detail/chrome-logger/noaneddfkdjfnfdakjjmocngnfkfehhd\n\n    $ npm i express-chrome-logger\n\n## Example\n\n```js\nvar express = require(\"express\");\nvar app = express();\n\napp.use(require(\"express-chrome-logger\"));\n\napp.get(\"/\", function(req, res) {\n  res.console.log(\"Running express %s\", express.version);\n\n  res.console.groupAs(\"Request\", function () {\n    res.console.dir(req);\n  });\n\n  res.console.assert(\n    req.headers[\"user-agent\"].search(/Chrome/) !== -1\n    , \"Not using Chrome\"\n  );\n\n  res.send(\"\");\n});\n```\n\n## Documentation\n\n### res.console.log([data], [...])\n\nLog messages to Chrome console.\n\n* * *\n\n### res.console.table([obj, obj, ...])\n\nLog data objects to Chrome console.\n\n* * *\n\n### res.console.info([data], [...])\n\nSame as `res.console.log`.\n\n* * *\n\n### res.console.debug([data], [...])\n\nSame as `res.console.log`.\n\n* * *\n\n### res.console.warn([data], [...])\n\nLog warnings to Chrome console.\n\n* * *\n\n### res.console.error([data], [...])\n\nLog errors to Chrome console, note that this method is not the same as\n`res.console.warn` as in standard node.js.\n\n* * *\n\n### res.console.dir(obj)\n\nUse `util.inspect` on `obj`.\n\n* * *\n\n### res.console.assert(test, msg)\n\nLog `msg` as error to Chrome console if `test` is false.\n\n* * *\n\n### res.console.group(name)\n\nCreate a Chrome console group.\n\n* * *\n\n### res.console.groupCollapsed(name)\n\nCreate a Chrome console group that is collapsed.\n\n* * *\n\n### res.console.groupEnd()\n\nEnd a Chrome console group.\n\n* * *\n\n### res.console.groupAs(name, f())\n\nCreate a collapsed group around messages in `f`.\n\n* * *\n\n### res.console.groupAssert(test, msg, f())\n\nLog messages in `f` if `test` is false.\n\n## Links\n\n* [Chrome Logger](http://craig.is/writing/chrome-logger)\n* [node-chromelogger](https://github.com/yannickcr/node-chromelogger) another implemenation of the Chrome logger protocol for node.js.\n",
  "readmeFilename": "README.md",
  "_id": "express-chrome-logger@0.1.3",
  "dist": {
    "shasum": "f6b229019014f4f244c366011e411b9f50afdae1"
  },
  "_from": "express-chrome-logger@0.1.3",
  "_resolved": "https://registry.npmjs.org/express-chrome-logger/-/express-chrome-logger-0.1.3.tgz"
}
